//
//  SHStyleKit.m
//  SpotHopper
//
//  Created by SpotHopper on 9/3/14.
//  Copyright (c) 2014 SpotHopper. All rights reserved.
//
//  Generated by PaintCode (www.paintcodeapp.com)
//

#import "SHStyleKit.h"


@implementation SHStyleKit

#pragma mark Cache

static UIColor* _myTintColor = nil;
static UIColor* _myTintTransparentColor = nil;
static UIColor* _myTextColor = nil;
static UIColor* _myWhiteColor = nil;
static UIColor* _myBlackColor = nil;
static UIColor* _myLightHeaderColor = nil;
static UIColor* _myPencilColor = nil;
static UIColor* _myClearColor = nil;
static UIColor* _myScreenColor = nil;
static UIColor* _myTintDesaturatedColor = nil;
static UIColor* _myWhiteTransparentColor = nil;
static UIColor* _myBlackTransparentColor = nil;
static UIColor* _myTextTransparentColor = nil;

#pragma mark Initialization

+ (void)initialize
{
    // Colors Initialization
    _myTintColor = [UIColor colorWithRed: 0.878 green: 0.4 blue: 0.149 alpha: 1];
    CGFloat myTintColorHSBA[4];
    [_myTintColor getHue: &myTintColorHSBA[0] saturation: &myTintColorHSBA[1] brightness: &myTintColorHSBA[2] alpha: &myTintColorHSBA[3]];

    _myTintTransparentColor = [SHStyleKit.myTintColor colorWithAlphaComponent: 0.8];
    _myTintDesaturatedColor = [UIColor colorWithHue: myTintColorHSBA[0] saturation: 0.5 brightness: myTintColorHSBA[2] alpha: myTintColorHSBA[3]];
    _myTextColor = [UIColor colorWithRed: 0.4 green: 0.4 blue: 0.4 alpha: 1];
    _myTextTransparentColor = [SHStyleKit.myTextColor colorWithAlphaComponent: 0.2];
    _myWhiteColor = [UIColor colorWithRed: 1 green: 1 blue: 1 alpha: 1];
    _myWhiteTransparentColor = [SHStyleKit.myWhiteColor colorWithAlphaComponent: 0.5];
    _myBlackColor = [UIColor colorWithRed: 0 green: 0 blue: 0 alpha: 1];
    _myBlackTransparentColor = [SHStyleKit.myBlackColor colorWithAlphaComponent: 0.75];
    _myLightHeaderColor = [UIColor colorWithRed: 0.992 green: 0.969 blue: 0.945 alpha: 1];
    _myPencilColor = [UIColor colorWithRed: 0.219 green: 0.215 blue: 0.219 alpha: 1];
    _myClearColor = [UIColor colorWithRed: 1 green: 1 blue: 1 alpha: 0];
    _myScreenColor = [UIColor colorWithRed: 0 green: 0 blue: 0 alpha: 0.196];

}

#pragma mark Colors

+ (UIColor*)myTintColor { return _myTintColor; }
+ (UIColor*)myTintTransparentColor { return _myTintTransparentColor; }
+ (UIColor*)myTextColor { return _myTextColor; }
+ (UIColor*)myWhiteColor { return _myWhiteColor; }
+ (UIColor*)myBlackColor { return _myBlackColor; }
+ (UIColor*)myLightHeaderColor { return _myLightHeaderColor; }
+ (UIColor*)myPencilColor { return _myPencilColor; }
+ (UIColor*)myClearColor { return _myClearColor; }
+ (UIColor*)myScreenColor { return _myScreenColor; }
+ (UIColor*)myTintDesaturatedColor { return _myTintDesaturatedColor; }
+ (UIColor*)myWhiteTransparentColor { return _myWhiteTransparentColor; }
+ (UIColor*)myBlackTransparentColor { return _myBlackTransparentColor; }
+ (UIColor*)myTextTransparentColor { return _myTextTransparentColor; }

#pragma mark Drawing Methods

+ (void)drawWineIconWithScaleX: (CGFloat)scaleX scaleY: (CGFloat)scaleY strokeColorName: (NSString*)strokeColorName;
{
    //// General Declarations
    CGContextRef context = UIGraphicsGetCurrentContext();


    //// Variable Declarations
    UIColor* strokeColor = [strokeColorName isEqualToString: @"myTintColor"] ? SHStyleKit.myTintColor : ([strokeColorName isEqualToString: @"myTintTransparentColor"] ? SHStyleKit.myTintTransparentColor : ([strokeColorName isEqualToString: @"myTextColor"] ? SHStyleKit.myTextColor : ([strokeColorName isEqualToString: @"myTextTransparentColor"] ? SHStyleKit.myTextTransparentColor : ([strokeColorName isEqualToString: @"myWhiteColor"] ? SHStyleKit.myWhiteColor : ([strokeColorName isEqualToString: @"myWhiteTransparentColor"] ? SHStyleKit.myWhiteTransparentColor : ([strokeColorName isEqualToString: @"myBlackColor"] ? SHStyleKit.myBlackColor : ([strokeColorName isEqualToString: @"default"] ? SHStyleKit.myWhiteColor : SHStyleKit.myClearColor)))))));

    //// Group
    {
        CGContextSaveGState(context);
        CGContextScaleCTM(context, scaleX, scaleY);



        //// Bezier Drawing
        UIBezierPath* bezierPath = UIBezierPath.bezierPath;
        [bezierPath moveToPoint: CGPointMake(287.45, 212.29)];
        [bezierPath addLineToPoint: CGPointMake(761.45, 212.29)];
        [bezierPath addLineToPoint: CGPointMake(287.45, 212.29)];
        [bezierPath closePath];
        [bezierPath moveToPoint: CGPointMake(734.35, 59.89)];
        [bezierPath addLineToPoint: CGPointMake(299.35, 59.89)];
        [bezierPath addCurveToPoint: CGPointMake(315.06, 198.77) controlPoint1: CGPointMake(302.42, 110.88) controlPoint2: CGPointMake(307.67, 157.18)];
        [bezierPath addLineToPoint: CGPointMake(727.38, 198.77)];
        [bezierPath addCurveToPoint: CGPointMake(734.35, 59.89) controlPoint1: CGPointMake(732.02, 157.13) controlPoint2: CGPointMake(734.35, 110.81)];
        [bezierPath closePath];
        [bezierPath moveToPoint: CGPointMake(723.96, 225.71)];
        [bezierPath addLineToPoint: CGPointMake(320.3, 225.71)];
        [bezierPath addCurveToPoint: CGPointMake(528.65, 471.97) controlPoint1: CGPointMake(354.33, 386.73) controlPoint2: CGPointMake(424.08, 469.37)];
        [bezierPath addCurveToPoint: CGPointMake(643.05, 429.02) controlPoint1: CGPointMake(575.45, 472.97) controlPoint2: CGPointMake(612.95, 458.75)];
        [bezierPath addCurveToPoint: CGPointMake(723.96, 225.71) controlPoint1: CGPointMake(683.27, 389.17) controlPoint2: CGPointMake(710.32, 321.07)];
        [bezierPath closePath];
        [bezierPath moveToPoint: CGPointMake(525.85, 921.24)];
        [bezierPath addCurveToPoint: CGPointMake(473.15, 969.95) controlPoint1: CGPointMake(511.25, 939.43) controlPoint2: CGPointMake(493.65, 955.74)];
        [bezierPath addLineToPoint: CGPointMake(574.75, 969.95)];
        [bezierPath addCurveToPoint: CGPointMake(525.85, 921.24) controlPoint1: CGPointMake(555.05, 955.74) controlPoint2: CGPointMake(538.75, 939.43)];
        [bezierPath closePath];
        [bezierPath moveToPoint: CGPointMake(787.95, 5.9)];
        [bezierPath addCurveToPoint: CGPointMake(788.35, 32.45) controlPoint1: CGPointMake(787.95, 5.9) controlPoint2: CGPointMake(788.35, 32.45)];
        [bezierPath addCurveToPoint: CGPointMake(681.25, 467.2) controlPoint1: CGPointMake(791.65, 250.37) controlPoint2: CGPointMake(756.65, 392.54)];
        [bezierPath addCurveToPoint: CGPointMake(555.15, 524.96) controlPoint1: CGPointMake(646.95, 501.1) controlPoint2: CGPointMake(604.65, 520.49)];
        [bezierPath addLineToPoint: CGPointMake(555.15, 862.78)];
        [bezierPath addCurveToPoint: CGPointMake(668.45, 958.32) controlPoint1: CGPointMake(572.15, 905.23) controlPoint2: CGPointMake(609.25, 936.55)];
        [bezierPath addCurveToPoint: CGPointMake(690.25, 996.1) controlPoint1: CGPointMake(683.95, 964.09) controlPoint2: CGPointMake(693.15, 979.99)];
        [bezierPath addCurveToPoint: CGPointMake(656.75, 1023.94) controlPoint1: CGPointMake(687.35, 1012.21) controlPoint2: CGPointMake(673.25, 1023.94)];
        [bezierPath addLineToPoint: CGPointMake(384.05, 1023.94)];
        [bezierPath addCurveToPoint: CGPointMake(351.65, 996.9) controlPoint1: CGPointMake(368.05, 1023.94) controlPoint2: CGPointMake(354.45, 1012.6)];
        [bezierPath addCurveToPoint: CGPointMake(372.85, 960.51) controlPoint1: CGPointMake(348.85, 981.19) controlPoint2: CGPointMake(357.85, 965.88)];
        [bezierPath addCurveToPoint: CGPointMake(500.95, 861.29) controlPoint1: CGPointMake(435.25, 938.14) controlPoint2: CGPointMake(477.25, 905.63)];
        [bezierPath addLineToPoint: CGPointMake(500.95, 523.87)];
        [bezierPath addCurveToPoint: CGPointMake(243.75, 34.04) controlPoint1: CGPointMake(343.55, 504.08) controlPoint2: CGPointMake(257.05, 339.45)];
        [bezierPath addLineToPoint: CGPointMake(242.55, 5.9)];
        [bezierPath addLineToPoint: CGPointMake(787.95, 5.9)];
        [bezierPath addLineToPoint: CGPointMake(787.95, 5.9)];
        [bezierPath closePath];
        [strokeColor setFill];
        [bezierPath fill];



        CGContextRestoreGState(context);
    }
}

+ (void)drawSpecialsIconWithScaleX: (CGFloat)scaleX scaleY: (CGFloat)scaleY strokeColorName: (NSString*)strokeColorName;
{
    //// General Declarations
    CGContextRef context = UIGraphicsGetCurrentContext();


    //// Variable Declarations
    UIColor* strokeColor = [strokeColorName isEqualToString: @"myTintColor"] ? SHStyleKit.myTintColor : ([strokeColorName isEqualToString: @"myTintTransparentColor"] ? SHStyleKit.myTintTransparentColor : ([strokeColorName isEqualToString: @"myTextColor"] ? SHStyleKit.myTextColor : ([strokeColorName isEqualToString: @"myTextTransparentColor"] ? SHStyleKit.myTextTransparentColor : ([strokeColorName isEqualToString: @"myWhiteColor"] ? SHStyleKit.myWhiteColor : ([strokeColorName isEqualToString: @"myWhiteTransparentColor"] ? SHStyleKit.myWhiteTransparentColor : ([strokeColorName isEqualToString: @"myBlackColor"] ? SHStyleKit.myBlackColor : ([strokeColorName isEqualToString: @"default"] ? SHStyleKit.myWhiteColor : SHStyleKit.myClearColor)))))));

    //// Group
    {
        CGContextSaveGState(context);
        CGContextScaleCTM(context, scaleX, scaleY);



        //// Dollar Sign Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 521.63, 478.69);
        CGContextRotateCTM(context, 35.99 * M_PI / 180);

        CGRect dollarSignRect = CGRectMake(-117.02, -189.62, 234.04, 379.25);
        NSMutableParagraphStyle* dollarSignStyle = NSMutableParagraphStyle.defaultParagraphStyle.mutableCopy;
        dollarSignStyle.alignment = NSTextAlignmentLeft;

        NSDictionary* dollarSignFontAttributes = @{NSFontAttributeName: [UIFont fontWithName: @"MyriadPro-Bold" size: 408.65], NSForegroundColorAttributeName: strokeColor, NSParagraphStyleAttributeName: dollarSignStyle};

        [@"$" drawInRect: dollarSignRect withAttributes: dollarSignFontAttributes];

        CGContextRestoreGState(context);


        //// Bezier Drawing
        UIBezierPath* bezierPath = UIBezierPath.bezierPath;
        [bezierPath moveToPoint: CGPointMake(720.35, 252.41)];
        [bezierPath addCurveToPoint: CGPointMake(691.15, 243.81) controlPoint1: CGPointMake(709.95, 252.41) controlPoint2: CGPointMake(699.85, 249.41)];
        [bezierPath addCurveToPoint: CGPointMake(667.65, 209.91) controlPoint1: CGPointMake(679.05, 236.01) controlPoint2: CGPointMake(670.65, 223.91)];
        [bezierPath addCurveToPoint: CGPointMake(675.05, 169.31) controlPoint1: CGPointMake(664.65, 195.81) controlPoint2: CGPointMake(667.25, 181.41)];
        [bezierPath addCurveToPoint: CGPointMake(720.45, 144.61) controlPoint1: CGPointMake(685.05, 153.81) controlPoint2: CGPointMake(701.95, 144.61)];
        [bezierPath addCurveToPoint: CGPointMake(749.65, 153.21) controlPoint1: CGPointMake(730.85, 144.61) controlPoint2: CGPointMake(740.95, 147.61)];
        [bezierPath addCurveToPoint: CGPointMake(765.75, 227.81) controlPoint1: CGPointMake(774.65, 169.31) controlPoint2: CGPointMake(781.85, 202.81)];
        [bezierPath addCurveToPoint: CGPointMake(720.35, 252.41) controlPoint1: CGPointMake(755.75, 243.21) controlPoint2: CGPointMake(738.85, 252.41)];
        [bezierPath closePath];
        [bezierPath moveToPoint: CGPointMake(720.45, 167.91)];
        [bezierPath addCurveToPoint: CGPointMake(694.75, 181.91) controlPoint1: CGPointMake(710.05, 167.91) controlPoint2: CGPointMake(700.45, 173.11)];
        [bezierPath addCurveToPoint: CGPointMake(690.55, 204.91) controlPoint1: CGPointMake(690.35, 188.81) controlPoint2: CGPointMake(688.85, 196.91)];
        [bezierPath addCurveToPoint: CGPointMake(703.85, 224.11) controlPoint1: CGPointMake(692.25, 212.91) controlPoint2: CGPointMake(696.95, 219.71)];
        [bezierPath addCurveToPoint: CGPointMake(746.05, 215.01) controlPoint1: CGPointMake(717.65, 233.01) controlPoint2: CGPointMake(737.25, 228.61)];
        [bezierPath addCurveToPoint: CGPointMake(736.95, 172.81) controlPoint1: CGPointMake(755.15, 200.91) controlPoint2: CGPointMake(751.05, 181.91)];
        [bezierPath addCurveToPoint: CGPointMake(720.45, 167.91) controlPoint1: CGPointMake(732.05, 169.61) controlPoint2: CGPointMake(726.35, 167.91)];
        [bezierPath closePath];
        [bezierPath moveToPoint: CGPointMake(504.75, 1019.01)];
        [bezierPath addCurveToPoint: CGPointMake(455.75, 989.51) controlPoint1: CGPointMake(484.15, 1019.01) controlPoint2: CGPointMake(465.35, 1007.71)];
        [bezierPath addLineToPoint: CGPointMake(345.15, 780.51)];
        [bezierPath addLineToPoint: CGPointMake(109.05, 766.11)];
        [bezierPath addCurveToPoint: CGPointMake(63.05, 735.81) controlPoint1: CGPointMake(89.25, 764.81) controlPoint2: CGPointMake(72.05, 753.51)];
        [bezierPath addCurveToPoint: CGPointMake(65.95, 680.71) controlPoint1: CGPointMake(54.05, 718.01) controlPoint2: CGPointMake(55.15, 697.51)];
        [bezierPath addLineToPoint: CGPointMake(470.65, 53.01)];
        [bezierPath addCurveToPoint: CGPointMake(521.55, 22.51) controlPoint1: CGPointMake(481.85, 35.61) controlPoint2: CGPointMake(500.95, 24.21)];
        [bezierPath addLineToPoint: CGPointMake(799.85, 0.21)];
        [bezierPath addCurveToPoint: CGPointMake(868.15, 44.31) controlPoint1: CGPointMake(829.95, -2.19) controlPoint2: CGPointMake(858.05, 16.11)];
        [bezierPath addLineToPoint: CGPointMake(962.65, 307.11)];
        [bezierPath addCurveToPoint: CGPointMake(955.95, 366.01) controlPoint1: CGPointMake(969.65, 326.61) controlPoint2: CGPointMake(967.15, 348.61)];
        [bezierPath addLineToPoint: CGPointMake(551.35, 993.61)];
        [bezierPath addCurveToPoint: CGPointMake(504.75, 1019.01) controlPoint1: CGPointMake(541.05, 1009.51) controlPoint2: CGPointMake(523.65, 1019.01)];
        [bezierPath closePath];
        [bezierPath moveToPoint: CGPointMake(805.25, 46.91)];
        [bezierPath addCurveToPoint: CGPointMake(803.65, 47.01) controlPoint1: CGPointMake(804.75, 46.91) controlPoint2: CGPointMake(804.15, 46.91)];
        [bezierPath addLineToPoint: CGPointMake(525.25, 69.31)];
        [bezierPath addCurveToPoint: CGPointMake(509.95, 78.41) controlPoint1: CGPointMake(519.05, 69.81) controlPoint2: CGPointMake(513.35, 73.21)];
        [bezierPath addLineToPoint: CGPointMake(105.35, 706.11)];
        [bezierPath addCurveToPoint: CGPointMake(104.95, 714.61) controlPoint1: CGPointMake(103.05, 709.71) controlPoint2: CGPointMake(104.05, 713.01)];
        [bezierPath addCurveToPoint: CGPointMake(112.05, 719.31) controlPoint1: CGPointMake(105.75, 716.21) controlPoint2: CGPointMake(107.75, 719.01)];
        [bezierPath addLineToPoint: CGPointMake(374.35, 735.31)];
        [bezierPath addLineToPoint: CGPointMake(497.25, 967.61)];
        [bezierPath addCurveToPoint: CGPointMake(504.85, 972.11) controlPoint1: CGPointMake(499.45, 971.71) controlPoint2: CGPointMake(503.25, 972.11)];
        [bezierPath addCurveToPoint: CGPointMake(512.05, 968.21) controlPoint1: CGPointMake(506.55, 972.11) controlPoint2: CGPointMake(509.85, 971.61)];
        [bezierPath addLineToPoint: CGPointMake(916.65, 340.61)];
        [bezierPath addCurveToPoint: CGPointMake(918.65, 322.91) controlPoint1: CGPointMake(920.05, 335.41) controlPoint2: CGPointMake(920.75, 328.81)];
        [bezierPath addLineToPoint: CGPointMake(824.15, 60.11)];
        [bezierPath addCurveToPoint: CGPointMake(805.25, 46.91) controlPoint1: CGPointMake(821.25, 52.21) controlPoint2: CGPointMake(813.65, 46.91)];
        [bezierPath closePath];
        [strokeColor setFill];
        [bezierPath fill];



        CGContextRestoreGState(context);
    }
}

+ (void)drawSpotIconWithScaleX: (CGFloat)scaleX scaleY: (CGFloat)scaleY strokeColorName: (NSString*)strokeColorName;
{
    //// General Declarations
    CGContextRef context = UIGraphicsGetCurrentContext();


    //// Variable Declarations
    UIColor* strokeColor = [strokeColorName isEqualToString: @"myTintColor"] ? SHStyleKit.myTintColor : ([strokeColorName isEqualToString: @"myTintTransparentColor"] ? SHStyleKit.myTintTransparentColor : ([strokeColorName isEqualToString: @"myTextColor"] ? SHStyleKit.myTextColor : ([strokeColorName isEqualToString: @"myTextTransparentColor"] ? SHStyleKit.myTextTransparentColor : ([strokeColorName isEqualToString: @"myWhiteColor"] ? SHStyleKit.myWhiteColor : ([strokeColorName isEqualToString: @"myWhiteTransparentColor"] ? SHStyleKit.myWhiteTransparentColor : ([strokeColorName isEqualToString: @"myBlackColor"] ? SHStyleKit.myBlackColor : ([strokeColorName isEqualToString: @"default"] ? SHStyleKit.myWhiteColor : SHStyleKit.myClearColor)))))));

    //// Group
    {
        CGContextSaveGState(context);
        CGContextScaleCTM(context, scaleX, scaleY);



        //// Bezier Drawing
        UIBezierPath* bezierPath = UIBezierPath.bezierPath;
        [bezierPath moveToPoint: CGPointMake(493.52, 1017.53)];
        [bezierPath addLineToPoint: CGPointMake(222.82, 488.83)];
        [bezierPath addCurveToPoint: CGPointMake(173.72, 319.23) controlPoint1: CGPointMake(190.72, 438.03) controlPoint2: CGPointMake(173.72, 379.37)];
        [bezierPath addCurveToPoint: CGPointMake(494.82, 0) controlPoint1: CGPointMake(173.72, 143.16) controlPoint2: CGPointMake(317.82, 0)];
        [bezierPath addCurveToPoint: CGPointMake(815.92, 319.23) controlPoint1: CGPointMake(671.82, 0) controlPoint2: CGPointMake(815.92, 143.26)];
        [bezierPath addCurveToPoint: CGPointMake(767.02, 488.53) controlPoint1: CGPointMake(815.92, 379.27) controlPoint2: CGPointMake(799.02, 437.83)];
        [bezierPath addLineToPoint: CGPointMake(493.52, 1017.53)];
        [bezierPath closePath];
        [bezierPath moveToPoint: CGPointMake(494.82, 46.43)];
        [bezierPath addCurveToPoint: CGPointMake(220.42, 319.23) controlPoint1: CGPointMake(343.52, 46.43) controlPoint2: CGPointMake(220.42, 168.81)];
        [bezierPath addCurveToPoint: CGPointMake(262.92, 464.87) controlPoint1: CGPointMake(220.42, 370.92) controlPoint2: CGPointMake(235.12, 421.33)];
        [bezierPath addLineToPoint: CGPointMake(264.02, 466.76)];
        [bezierPath addLineToPoint: CGPointMake(493.82, 915.43)];
        [bezierPath addLineToPoint: CGPointMake(726.92, 464.57)];
        [bezierPath addCurveToPoint: CGPointMake(769.22, 319.23) controlPoint1: CGPointMake(754.62, 421.03) controlPoint2: CGPointMake(769.22, 370.72)];
        [bezierPath addCurveToPoint: CGPointMake(494.82, 46.43) controlPoint1: CGPointMake(769.12, 168.81) controlPoint2: CGPointMake(646.12, 46.43)];
        [bezierPath closePath];
        [bezierPath moveToPoint: CGPointMake(499.82, 456.42)];
        [bezierPath addCurveToPoint: CGPointMake(385.92, 343.19) controlPoint1: CGPointMake(437.02, 456.42) controlPoint2: CGPointMake(385.92, 405.62)];
        [bezierPath addCurveToPoint: CGPointMake(499.82, 229.85) controlPoint1: CGPointMake(385.92, 280.75) controlPoint2: CGPointMake(437.02, 229.85)];
        [bezierPath addCurveToPoint: CGPointMake(613.72, 343.19) controlPoint1: CGPointMake(562.62, 229.85) controlPoint2: CGPointMake(613.72, 280.65)];
        [bezierPath addCurveToPoint: CGPointMake(499.82, 456.42) controlPoint1: CGPointMake(613.72, 405.72) controlPoint2: CGPointMake(562.62, 456.42)];
        [bezierPath closePath];
        [bezierPath moveToPoint: CGPointMake(499.82, 264.65)];
        [bezierPath addCurveToPoint: CGPointMake(420.92, 343.09) controlPoint1: CGPointMake(456.32, 264.65) controlPoint2: CGPointMake(420.92, 299.84)];
        [bezierPath addCurveToPoint: CGPointMake(499.82, 421.53) controlPoint1: CGPointMake(420.92, 386.33) controlPoint2: CGPointMake(456.32, 421.53)];
        [bezierPath addCurveToPoint: CGPointMake(578.72, 343.09) controlPoint1: CGPointMake(543.32, 421.53) controlPoint2: CGPointMake(578.72, 386.33)];
        [bezierPath addCurveToPoint: CGPointMake(499.82, 264.65) controlPoint1: CGPointMake(578.72, 299.84) controlPoint2: CGPointMake(543.32, 264.65)];
        [bezierPath closePath];
        [strokeColor setFill];
        [bezierPath fill];



        CGContextRestoreGState(context);
    }
}

+ (void)drawCocktailIconWithScaleX: (CGFloat)scaleX scaleY: (CGFloat)scaleY strokeColorName: (NSString*)strokeColorName;
{
    //// General Declarations
    CGContextRef context = UIGraphicsGetCurrentContext();


    //// Variable Declarations
    UIColor* strokeColor = [strokeColorName isEqualToString: @"myTintColor"] ? SHStyleKit.myTintColor : ([strokeColorName isEqualToString: @"myTintTransparentColor"] ? SHStyleKit.myTintTransparentColor : ([strokeColorName isEqualToString: @"myTextColor"] ? SHStyleKit.myTextColor : ([strokeColorName isEqualToString: @"myTextTransparentColor"] ? SHStyleKit.myTextTransparentColor : ([strokeColorName isEqualToString: @"myWhiteColor"] ? SHStyleKit.myWhiteColor : ([strokeColorName isEqualToString: @"myWhiteTransparentColor"] ? SHStyleKit.myWhiteTransparentColor : ([strokeColorName isEqualToString: @"myBlackColor"] ? SHStyleKit.myBlackColor : ([strokeColorName isEqualToString: @"default"] ? SHStyleKit.myWhiteColor : SHStyleKit.myClearColor)))))));

    //// Group
    {
        CGContextSaveGState(context);
        CGContextScaleCTM(context, scaleX, scaleY);



        //// Bezier Drawing
        UIBezierPath* bezierPath = UIBezierPath.bezierPath;
        [bezierPath moveToPoint: CGPointMake(548.5, 588.92)];
        [bezierPath addLineToPoint: CGPointMake(919, 202.6)];
        [bezierPath addLineToPoint: CGPointMake(716.2, 202.6)];
        [bezierPath addLineToPoint: CGPointMake(769.6, 146.96)];
        [bezierPath addCurveToPoint: CGPointMake(821.8, 132.17) controlPoint1: CGPointMake(786.6, 151.85) controlPoint2: CGPointMake(807, 146.86)];
        [bezierPath addCurveToPoint: CGPointMake(836.1, 77.52) controlPoint1: CGPointMake(837.2, 116.69) controlPoint2: CGPointMake(842.2, 95.11)];
        [bezierPath addLineToPoint: CGPointMake(889.3, 21.98)];
        [bezierPath addLineToPoint: CGPointMake(866.1, 0)];
        [bezierPath addLineToPoint: CGPointMake(814.6, 53.75)];
        [bezierPath addCurveToPoint: CGPointMake(755.5, 65.84) controlPoint1: CGPointMake(796.4, 44.86) controlPoint2: CGPointMake(772.4, 48.95)];
        [bezierPath addCurveToPoint: CGPointMake(744.3, 127.08) controlPoint1: CGPointMake(738, 83.42) controlPoint2: CGPointMake(734.1, 108.69)];
        [bezierPath addLineToPoint: CGPointMake(672, 202.6)];
        [bezierPath addLineToPoint: CGPointMake(130, 202.6)];
        [bezierPath addLineToPoint: CGPointMake(500.6, 588.92)];
        [bezierPath addLineToPoint: CGPointMake(500.6, 914.31)];
        [bezierPath addLineToPoint: CGPointMake(321.6, 991.93)];
        [bezierPath addCurveToPoint: CGPointMake(727.6, 991.93) controlPoint1: CGPointMake(321.6, 991.93) controlPoint2: CGPointMake(523.5, 1063.76)];
        [bezierPath addLineToPoint: CGPointMake(548.6, 914.31)];
        [bezierPath addLineToPoint: CGPointMake(548.6, 588.92)];
        [bezierPath addLineToPoint: CGPointMake(548.5, 588.92)];
        [bezierPath closePath];
        [bezierPath moveToPoint: CGPointMake(578.1, 300.41)];
        [bezierPath addLineToPoint: CGPointMake(498.8, 383.23)];
        [bezierPath addLineToPoint: CGPointMake(521.8, 405.3)];
        [bezierPath addLineToPoint: CGPointMake(622.4, 300.51)];
        [bezierPath addLineToPoint: CGPointMake(764.1, 300.51)];
        [bezierPath addLineToPoint: CGPointMake(524.6, 550.06)];
        [bezierPath addLineToPoint: CGPointMake(285.1, 300.41)];
        [bezierPath addLineToPoint: CGPointMake(578.1, 300.41)];
        [bezierPath closePath];
        bezierPath.miterLimit = 4;

        [strokeColor setFill];
        [bezierPath fill];



        CGContextRestoreGState(context);
    }
}

+ (void)drawBeerIconWithScaleX: (CGFloat)scaleX scaleY: (CGFloat)scaleY strokeColorName: (NSString*)strokeColorName;
{
    //// General Declarations
    CGContextRef context = UIGraphicsGetCurrentContext();


    //// Variable Declarations
    UIColor* strokeColor = [strokeColorName isEqualToString: @"myTintColor"] ? SHStyleKit.myTintColor : ([strokeColorName isEqualToString: @"myTintTransparentColor"] ? SHStyleKit.myTintTransparentColor : ([strokeColorName isEqualToString: @"myTextColor"] ? SHStyleKit.myTextColor : ([strokeColorName isEqualToString: @"myTextTransparentColor"] ? SHStyleKit.myTextTransparentColor : ([strokeColorName isEqualToString: @"myWhiteColor"] ? SHStyleKit.myWhiteColor : ([strokeColorName isEqualToString: @"myWhiteTransparentColor"] ? SHStyleKit.myWhiteTransparentColor : ([strokeColorName isEqualToString: @"myBlackColor"] ? SHStyleKit.myBlackColor : ([strokeColorName isEqualToString: @"default"] ? SHStyleKit.myWhiteColor : SHStyleKit.myClearColor)))))));

    //// Group
    {
        CGContextSaveGState(context);
        CGContextScaleCTM(context, scaleX, scaleY);



        //// Bezier Drawing
        UIBezierPath* bezierPath = UIBezierPath.bezierPath;
        [bezierPath moveToPoint: CGPointMake(577.47, 719.47)];
        [bezierPath addCurveToPoint: CGPointMake(577.47, 740.1) controlPoint1: CGPointMake(583.17, 725.17) controlPoint2: CGPointMake(583.17, 734.4)];
        [bezierPath addCurveToPoint: CGPointMake(556.82, 740.1) controlPoint1: CGPointMake(571.77, 745.8) controlPoint2: CGPointMake(562.52, 745.8)];
        [bezierPath addCurveToPoint: CGPointMake(556.82, 719.47) controlPoint1: CGPointMake(551.12, 734.4) controlPoint2: CGPointMake(551.12, 725.17)];
        [bezierPath addCurveToPoint: CGPointMake(577.47, 719.47) controlPoint1: CGPointMake(562.52, 713.78) controlPoint2: CGPointMake(571.77, 713.78)];
        [bezierPath closePath];
        [bezierPath moveToPoint: CGPointMake(611.87, 573.11)];
        [bezierPath addCurveToPoint: CGPointMake(611.87, 592.75) controlPoint1: CGPointMake(617.3, 578.53) controlPoint2: CGPointMake(617.3, 587.33)];
        [bezierPath addCurveToPoint: CGPointMake(592.21, 592.75) controlPoint1: CGPointMake(606.44, 598.17) controlPoint2: CGPointMake(597.64, 598.17)];
        [bezierPath addCurveToPoint: CGPointMake(592.21, 573.11) controlPoint1: CGPointMake(586.79, 587.33) controlPoint2: CGPointMake(586.79, 578.53)];
        [bezierPath addCurveToPoint: CGPointMake(611.87, 573.11) controlPoint1: CGPointMake(597.64, 567.69) controlPoint2: CGPointMake(606.44, 567.69)];
        [bezierPath closePath];
        [bezierPath moveToPoint: CGPointMake(555.65, 452.06)];
        [bezierPath addCurveToPoint: CGPointMake(555.65, 468.44) controlPoint1: CGPointMake(560.18, 456.58) controlPoint2: CGPointMake(560.18, 463.92)];
        [bezierPath addCurveToPoint: CGPointMake(539.24, 468.44) controlPoint1: CGPointMake(551.12, 472.97) controlPoint2: CGPointMake(543.77, 472.97)];
        [bezierPath addCurveToPoint: CGPointMake(539.24, 452.06) controlPoint1: CGPointMake(534.71, 463.92) controlPoint2: CGPointMake(534.71, 456.58)];
        [bezierPath addCurveToPoint: CGPointMake(555.65, 452.06) controlPoint1: CGPointMake(543.77, 447.53) controlPoint2: CGPointMake(551.12, 447.53)];
        [bezierPath closePath];
        [bezierPath moveToPoint: CGPointMake(609.35, 283.81)];
        [bezierPath addCurveToPoint: CGPointMake(609.35, 313.2) controlPoint1: CGPointMake(617.47, 291.93) controlPoint2: CGPointMake(617.47, 305.09)];
        [bezierPath addCurveToPoint: CGPointMake(579.94, 313.2) controlPoint1: CGPointMake(601.23, 321.32) controlPoint2: CGPointMake(588.06, 321.32)];
        [bezierPath addCurveToPoint: CGPointMake(579.94, 283.81) controlPoint1: CGPointMake(571.81, 305.09) controlPoint2: CGPointMake(571.81, 291.93)];
        [bezierPath addCurveToPoint: CGPointMake(609.35, 283.81) controlPoint1: CGPointMake(588.06, 275.7) controlPoint2: CGPointMake(601.23, 275.7)];
        [bezierPath closePath];
        [bezierPath moveToPoint: CGPointMake(723.84, 46.35)];
        [bezierPath addLineToPoint: CGPointMake(300.24, 46.35)];
        [bezierPath addCurveToPoint: CGPointMake(273.57, 149.83) controlPoint1: CGPointMake(287.56, 84.6) controlPoint2: CGPointMake(278.91, 118.75)];
        [bezierPath addCurveToPoint: CGPointMake(743.03, 146.44) controlPoint1: CGPointMake(349.01, 149.29) controlPoint2: CGPointMake(653.45, 147.08)];
        [bezierPath addCurveToPoint: CGPointMake(723.84, 46.35) controlPoint1: CGPointMake(739.48, 116.25) controlPoint2: CGPointMake(733.29, 83.17)];
        [bezierPath closePath];
        [bezierPath moveToPoint: CGPointMake(746.42, 188.77)];
        [bezierPath addCurveToPoint: CGPointMake(268.1, 192.23) controlPoint1: CGPointMake(658.66, 189.41) controlPoint2: CGPointMake(333.15, 191.76)];
        [bezierPath addCurveToPoint: CGPointMake(319.94, 437.47) controlPoint1: CGPointMake(259.84, 291.27) controlPoint2: CGPointMake(287.55, 358.7)];
        [bezierPath addCurveToPoint: CGPointMake(372.34, 981.14) controlPoint1: CGPointMake(369.24, 557.56) controlPoint2: CGPointMake(425.04, 693.12)];
        [bezierPath addLineToPoint: CGPointMake(658.24, 981.14)];
        [bezierPath addCurveToPoint: CGPointMake(697.84, 425.18) controlPoint1: CGPointMake(601.64, 681.33) controlPoint2: CGPointMake(652.74, 545.47)];
        [bezierPath addCurveToPoint: CGPointMake(746.42, 188.77) controlPoint1: CGPointMake(725.36, 351.96) controlPoint2: CGPointMake(750.32, 285.53)];
        [bezierPath closePath];
        [bezierPath moveToPoint: CGPointMake(756.44, 4)];
        [bezierPath addCurveToPoint: CGPointMake(760.74, 19.58) controlPoint1: CGPointMake(756.44, 4) controlPoint2: CGPointMake(760.74, 19.58)];
        [bezierPath addCurveToPoint: CGPointMake(737.64, 440.07) controlPoint1: CGPointMake(817.54, 227.28) controlPoint2: CGPointMake(778.74, 330.68)];
        [bezierPath addCurveToPoint: CGPointMake(704.84, 998.12) controlPoint1: CGPointMake(693.24, 558.35) controlPoint2: CGPointMake(642.84, 692.42)];
        [bezierPath addLineToPoint: CGPointMake(709.94, 1023.5)];
        [bezierPath addLineToPoint: CGPointMake(320.94, 1023.5)];
        [bezierPath addLineToPoint: CGPointMake(326.04, 998.22)];
        [bezierPath addCurveToPoint: CGPointMake(280.74, 453.56) controlPoint1: CGPointMake(384.24, 705.31) controlPoint2: CGPointMake(329.24, 571.54)];
        [bezierPath addCurveToPoint: CGPointMake(265.04, 18.18) controlPoint1: CGPointMake(234.14, 340.17) controlPoint2: CGPointMake(190.14, 233.17)];
        [bezierPath addLineToPoint: CGPointMake(270.04, 4)];
        [bezierPath addLineToPoint: CGPointMake(756.44, 4)];
        [bezierPath addLineToPoint: CGPointMake(756.44, 4)];
        [bezierPath closePath];
        [strokeColor setFill];
        [bezierPath fill];



        CGContextRestoreGState(context);
    }
}

+ (void)drawNavigationArrowIconWithScaleX: (CGFloat)scaleX scaleY: (CGFloat)scaleY strokeColorName: (NSString*)strokeColorName rotation: (CGFloat)rotation;
{
    //// General Declarations
    CGContextRef context = UIGraphicsGetCurrentContext();


    //// Variable Declarations
    UIColor* strokeColor = [strokeColorName isEqualToString: @"myTintColor"] ? SHStyleKit.myTintColor : ([strokeColorName isEqualToString: @"myTintTransparentColor"] ? SHStyleKit.myTintTransparentColor : ([strokeColorName isEqualToString: @"myTextColor"] ? SHStyleKit.myTextColor : ([strokeColorName isEqualToString: @"myTextTransparentColor"] ? SHStyleKit.myTextTransparentColor : ([strokeColorName isEqualToString: @"myWhiteColor"] ? SHStyleKit.myWhiteColor : ([strokeColorName isEqualToString: @"myWhiteTransparentColor"] ? SHStyleKit.myWhiteTransparentColor : ([strokeColorName isEqualToString: @"myBlackColor"] ? SHStyleKit.myBlackColor : ([strokeColorName isEqualToString: @"default"] ? SHStyleKit.myWhiteColor : SHStyleKit.myClearColor)))))));

    //// Scaling Group
    {
        CGContextSaveGState(context);
        CGContextScaleCTM(context, scaleX, scaleY);



        //// Rotating Group
        {
            CGContextSaveGState(context);
            CGContextTranslateCTM(context, 514.37, 509.2);
            CGContextRotateCTM(context, -rotation * M_PI / 180);



            //// Bezier Drawing
            UIBezierPath* bezierPath = UIBezierPath.bezierPath;
            [bezierPath moveToPoint: CGPointMake(-194.13, -512)];
            [bezierPath addLineToPoint: CGPointMake(-221.73, -489.2)];
            [bezierPath addLineToPoint: CGPointMake(180.07, -2.8)];
            [bezierPath addLineToPoint: CGPointMake(-221.73, 483.6)];
            [bezierPath addLineToPoint: CGPointMake(-194.13, 506.4)];
            [bezierPath addLineToPoint: CGPointMake(226.47, -2.8)];
            [bezierPath addLineToPoint: CGPointMake(-194.13, -512)];
            [bezierPath closePath];
            bezierPath.miterLimit = 4;

            [strokeColor setFill];
            [bezierPath fill];



            CGContextRestoreGState(context);
        }



        CGContextRestoreGState(context);
    }
}

+ (void)drawSearchIconWithScaleX: (CGFloat)scaleX scaleY: (CGFloat)scaleY strokeColorName: (NSString*)strokeColorName;
{
    //// General Declarations
    CGContextRef context = UIGraphicsGetCurrentContext();


    //// Variable Declarations
    UIColor* strokeColor = [strokeColorName isEqualToString: @"myTintColor"] ? SHStyleKit.myTintColor : ([strokeColorName isEqualToString: @"myTintTransparentColor"] ? SHStyleKit.myTintTransparentColor : ([strokeColorName isEqualToString: @"myTextColor"] ? SHStyleKit.myTextColor : ([strokeColorName isEqualToString: @"myTextTransparentColor"] ? SHStyleKit.myTextTransparentColor : ([strokeColorName isEqualToString: @"myWhiteColor"] ? SHStyleKit.myWhiteColor : ([strokeColorName isEqualToString: @"myWhiteTransparentColor"] ? SHStyleKit.myWhiteTransparentColor : ([strokeColorName isEqualToString: @"myBlackColor"] ? SHStyleKit.myBlackColor : ([strokeColorName isEqualToString: @"default"] ? SHStyleKit.myWhiteColor : SHStyleKit.myClearColor)))))));

    //// Group
    {
        CGContextSaveGState(context);
        CGContextScaleCTM(context, scaleX, scaleY);



        //// Bezier Drawing
        UIBezierPath* bezierPath = UIBezierPath.bezierPath;
        [bezierPath moveToPoint: CGPointMake(416.3, 47)];
        [bezierPath addCurveToPoint: CGPointMake(67.1, 396.2) controlPoint1: CGPointMake(223.7, 47) controlPoint2: CGPointMake(67.1, 203.7)];
        [bezierPath addCurveToPoint: CGPointMake(416.3, 745.4) controlPoint1: CGPointMake(67.1, 588.7) controlPoint2: CGPointMake(223.7, 745.4)];
        [bezierPath addCurveToPoint: CGPointMake(765.5, 396.2) controlPoint1: CGPointMake(608.9, 745.4) controlPoint2: CGPointMake(765.5, 588.8)];
        [bezierPath addCurveToPoint: CGPointMake(416.3, 47) controlPoint1: CGPointMake(765.5, 203.6) controlPoint2: CGPointMake(608.8, 47)];
        [bezierPath closePath];
        [bezierPath moveToPoint: CGPointMake(810.6, 396.3)];
        [bezierPath addCurveToPoint: CGPointMake(738.01, 624) controlPoint1: CGPointMake(810.6, 481.06) controlPoint2: CGPointMake(783.71, 559.65)];
        [bezierPath addCurveToPoint: CGPointMake(1001.9, 913.6) controlPoint1: CGPointMake(785.44, 676.04) controlPoint2: CGPointMake(1001.9, 913.6)];
        [bezierPath addLineToPoint: CGPointMake(885.3, 1019.9)];
        [bezierPath addCurveToPoint: CGPointMake(622.91, 731.94) controlPoint1: CGPointMake(885.3, 1019.9) controlPoint2: CGPointMake(673.21, 787.15)];
        [bezierPath addCurveToPoint: CGPointMake(416.3, 790.5) controlPoint1: CGPointMake(562.79, 769.06) controlPoint2: CGPointMake(492, 790.5)];
        [bezierPath addCurveToPoint: CGPointMake(22, 396.2) controlPoint1: CGPointMake(198.9, 790.5) controlPoint2: CGPointMake(22, 613.6)];
        [bezierPath addCurveToPoint: CGPointMake(416.3, 2) controlPoint1: CGPointMake(22, 178.8) controlPoint2: CGPointMake(198.9, 2)];
        [bezierPath addCurveToPoint: CGPointMake(810.6, 396.3) controlPoint1: CGPointMake(633.7, 2) controlPoint2: CGPointMake(810.6, 178.9)];
        [bezierPath closePath];
        [strokeColor setFill];
        [bezierPath fill];



        CGContextRestoreGState(context);
    }
}

+ (void)drawSpotSideBarIconWithScaleX: (CGFloat)scaleX scaleY: (CGFloat)scaleY strokeColorName: (NSString*)strokeColorName;
{
    //// General Declarations
    CGContextRef context = UIGraphicsGetCurrentContext();


    //// Variable Declarations
    UIColor* strokeColor = [strokeColorName isEqualToString: @"myTintColor"] ? SHStyleKit.myTintColor : ([strokeColorName isEqualToString: @"myTintTransparentColor"] ? SHStyleKit.myTintTransparentColor : ([strokeColorName isEqualToString: @"myTextColor"] ? SHStyleKit.myTextColor : ([strokeColorName isEqualToString: @"myTextTransparentColor"] ? SHStyleKit.myTextTransparentColor : ([strokeColorName isEqualToString: @"myWhiteColor"] ? SHStyleKit.myWhiteColor : ([strokeColorName isEqualToString: @"myWhiteTransparentColor"] ? SHStyleKit.myWhiteTransparentColor : ([strokeColorName isEqualToString: @"myBlackColor"] ? SHStyleKit.myBlackColor : ([strokeColorName isEqualToString: @"default"] ? SHStyleKit.myWhiteColor : SHStyleKit.myClearColor)))))));

    //// Group
    {
        CGContextSaveGState(context);
        CGContextScaleCTM(context, scaleX, scaleY);



        //// Bezier Drawing
        UIBezierPath* bezierPath = UIBezierPath.bezierPath;
        [bezierPath moveToPoint: CGPointMake(739.81, 158.78)];
        [bezierPath addCurveToPoint: CGPointMake(838.38, 158.78) controlPoint1: CGPointMake(739.81, 158.78) controlPoint2: CGPointMake(838.38, 158.78)];
        [bezierPath addCurveToPoint: CGPointMake(947.34, 158.78) controlPoint1: CGPointMake(890.79, 158.78) controlPoint2: CGPointMake(945.64, 158.78)];
        [bezierPath addCurveToPoint: CGPointMake(947.38, 246.44) controlPoint1: CGPointMake(947.38, 158.78) controlPoint2: CGPointMake(947.38, 246.44)];
        [bezierPath addLineToPoint: CGPointMake(776.47, 246.44)];
        [bezierPath addCurveToPoint: CGPointMake(739.81, 158.78) controlPoint1: CGPointMake(768.63, 215.16) controlPoint2: CGPointMake(756.15, 185.68)];
        [bezierPath addLineToPoint: CGPointMake(739.81, 158.78)];
        [bezierPath closePath];
        [bezierPath moveToPoint: CGPointMake(785.77, 312.18)];
        [bezierPath addCurveToPoint: CGPointMake(794.38, 312.18) controlPoint1: CGPointMake(785.77, 312.18) controlPoint2: CGPointMake(794.38, 312.18)];
        [bezierPath addCurveToPoint: CGPointMake(947.33, 312.18) controlPoint1: CGPointMake(825.69, 312.18) controlPoint2: CGPointMake(944.55, 312.18)];
        [bezierPath addCurveToPoint: CGPointMake(947.38, 399.84) controlPoint1: CGPointMake(947.38, 312.18) controlPoint2: CGPointMake(947.38, 399.84)];
        [bezierPath addLineToPoint: CGPointMake(776.82, 399.84)];
        [bezierPath addCurveToPoint: CGPointMake(785.98, 323.83) controlPoint1: CGPointMake(782.88, 375.11) controlPoint2: CGPointMake(785.98, 349.61)];
        [bezierPath addCurveToPoint: CGPointMake(785.77, 312.18) controlPoint1: CGPointMake(785.98, 319.93) controlPoint2: CGPointMake(785.91, 316.05)];
        [bezierPath addLineToPoint: CGPointMake(785.77, 312.18)];
        [bezierPath closePath];
        [bezierPath moveToPoint: CGPointMake(402.88, 269.15)];
        [bezierPath addCurveToPoint: CGPointMake(323.98, 347.74) controlPoint1: CGPointMake(359.38, 269.15) controlPoint2: CGPointMake(323.98, 304.41)];
        [bezierPath addCurveToPoint: CGPointMake(402.88, 426.33) controlPoint1: CGPointMake(323.98, 391.07) controlPoint2: CGPointMake(359.38, 426.33)];
        [bezierPath addCurveToPoint: CGPointMake(481.78, 347.74) controlPoint1: CGPointMake(446.38, 426.33) controlPoint2: CGPointMake(481.78, 391.07)];
        [bezierPath addCurveToPoint: CGPointMake(402.88, 269.15) controlPoint1: CGPointMake(481.78, 304.41) controlPoint2: CGPointMake(446.38, 269.15)];
        [bezierPath closePath];
        [bezierPath moveToPoint: CGPointMake(516.78, 347.84)];
        [bezierPath addCurveToPoint: CGPointMake(402.88, 461.3) controlPoint1: CGPointMake(516.78, 410.5) controlPoint2: CGPointMake(465.68, 461.3)];
        [bezierPath addCurveToPoint: CGPointMake(288.98, 347.84) controlPoint1: CGPointMake(340.08, 461.3) controlPoint2: CGPointMake(288.98, 410.4)];
        [bezierPath addCurveToPoint: CGPointMake(402.88, 234.28) controlPoint1: CGPointMake(288.98, 285.29) controlPoint2: CGPointMake(340.08, 234.28)];
        [bezierPath addCurveToPoint: CGPointMake(516.78, 347.84) controlPoint1: CGPointMake(465.68, 234.28) controlPoint2: CGPointMake(516.78, 285.19)];
        [bezierPath closePath];
        [bezierPath moveToPoint: CGPointMake(947.38, 465.58)];
        [bezierPath addCurveToPoint: CGPointMake(947.38, 553.24) controlPoint1: CGPointMake(947.38, 465.58) controlPoint2: CGPointMake(947.38, 553.24)];
        [bezierPath addLineToPoint: CGPointMake(706.24, 553.24)];
        [bezierPath addCurveToPoint: CGPointMake(737.08, 493.47) controlPoint1: CGPointMake(725.14, 516.62) controlPoint2: CGPointMake(737.08, 493.47)];
        [bezierPath addCurveToPoint: CGPointMake(752.75, 465.58) controlPoint1: CGPointMake(742.79, 484.41) controlPoint2: CGPointMake(748.01, 475.1)];
        [bezierPath addCurveToPoint: CGPointMake(947.38, 465.58) controlPoint1: CGPointMake(767.9, 465.58) controlPoint2: CGPointMake(947.38, 465.58)];
        [bezierPath addLineToPoint: CGPointMake(947.38, 465.58)];
        [bezierPath closePath];
        [bezierPath moveToPoint: CGPointMake(947.16, 605.04)];
        [bezierPath addCurveToPoint: CGPointMake(947.38, 692.69) controlPoint1: CGPointMake(947.38, 605.04) controlPoint2: CGPointMake(947.38, 692.69)];
        [bezierPath addLineToPoint: CGPointMake(634.28, 692.69)];
        [bezierPath addCurveToPoint: CGPointMake(679.51, 605.04) controlPoint1: CGPointMake(650.35, 661.56) controlPoint2: CGPointMake(665.75, 631.71)];
        [bezierPath addCurveToPoint: CGPointMake(947.16, 605.04) controlPoint1: CGPointMake(697.48, 605.04) controlPoint2: CGPointMake(938.73, 605.04)];
        [bezierPath closePath];
        [bezierPath moveToPoint: CGPointMake(463.68, 920.8)];
        [bezierPath addCurveToPoint: CGPointMake(464.09, 920.8) controlPoint1: CGPointMake(463.68, 920.8) controlPoint2: CGPointMake(464.09, 920.8)];
        [bezierPath addCurveToPoint: CGPointMake(463.88, 921.2) controlPoint1: CGPointMake(463.95, 921.07) controlPoint2: CGPointMake(463.88, 921.2)];
        [bezierPath addCurveToPoint: CGPointMake(463.68, 920.8) controlPoint1: CGPointMake(463.88, 921.2) controlPoint2: CGPointMake(463.81, 921.07)];
        [bezierPath addLineToPoint: CGPointMake(463.68, 920.8)];
        [bezierPath closePath];
        [bezierPath moveToPoint: CGPointMake(397.88, 50.5)];
        [bezierPath addCurveToPoint: CGPointMake(123.48, 323.83) controlPoint1: CGPointMake(246.58, 50.5) controlPoint2: CGPointMake(123.48, 173.12)];
        [bezierPath addCurveToPoint: CGPointMake(165.98, 469.76) controlPoint1: CGPointMake(123.48, 375.63) controlPoint2: CGPointMake(138.18, 426.13)];
        [bezierPath addLineToPoint: CGPointMake(167.08, 471.66)];
        [bezierPath addLineToPoint: CGPointMake(396.88, 921.2)];
        [bezierPath addLineToPoint: CGPointMake(629.98, 469.47)];
        [bezierPath addCurveToPoint: CGPointMake(672.28, 323.83) controlPoint1: CGPointMake(657.68, 425.84) controlPoint2: CGPointMake(672.28, 375.43)];
        [bezierPath addCurveToPoint: CGPointMake(397.88, 50.5) controlPoint1: CGPointMake(672.18, 173.12) controlPoint2: CGPointMake(549.18, 50.5)];
        [bezierPath closePath];
        [bezierPath moveToPoint: CGPointMake(718.98, 323.83)];
        [bezierPath addCurveToPoint: CGPointMake(670.08, 493.47) controlPoint1: CGPointMake(718.98, 384) controlPoint2: CGPointMake(702.08, 442.67)];
        [bezierPath addLineToPoint: CGPointMake(396.58, 1023.5)];
        [bezierPath addLineToPoint: CGPointMake(125.88, 493.77)];
        [bezierPath addCurveToPoint: CGPointMake(76.78, 323.83) controlPoint1: CGPointMake(93.78, 442.87) controlPoint2: CGPointMake(76.78, 384.1)];
        [bezierPath addCurveToPoint: CGPointMake(397.88, 3.98) controlPoint1: CGPointMake(76.78, 147.42) controlPoint2: CGPointMake(220.88, 3.98)];
        [bezierPath addCurveToPoint: CGPointMake(718.98, 323.83) controlPoint1: CGPointMake(574.88, 3.98) controlPoint2: CGPointMake(718.98, 147.52)];
        [bezierPath closePath];
        [strokeColor setFill];
        [bezierPath fill];



        CGContextRestoreGState(context);
    }
}

+ (void)drawFeaturedListIconWithScaleX: (CGFloat)scaleX scaleY: (CGFloat)scaleY strokeColorName: (NSString*)strokeColorName;
{
    //// General Declarations
    CGContextRef context = UIGraphicsGetCurrentContext();


    //// Variable Declarations
    UIColor* strokeColor = [strokeColorName isEqualToString: @"myTintColor"] ? SHStyleKit.myTintColor : ([strokeColorName isEqualToString: @"myTintTransparentColor"] ? SHStyleKit.myTintTransparentColor : ([strokeColorName isEqualToString: @"myTextColor"] ? SHStyleKit.myTextColor : ([strokeColorName isEqualToString: @"myTextTransparentColor"] ? SHStyleKit.myTextTransparentColor : ([strokeColorName isEqualToString: @"myWhiteColor"] ? SHStyleKit.myWhiteColor : ([strokeColorName isEqualToString: @"myWhiteTransparentColor"] ? SHStyleKit.myWhiteTransparentColor : ([strokeColorName isEqualToString: @"myBlackColor"] ? SHStyleKit.myBlackColor : ([strokeColorName isEqualToString: @"default"] ? SHStyleKit.myWhiteColor : SHStyleKit.myClearColor)))))));

    //// Group
    {
        CGContextSaveGState(context);
        CGContextScaleCTM(context, scaleX, scaleY);



        //// Bezier Drawing
        UIBezierPath* bezierPath = UIBezierPath.bezierPath;
        [bezierPath moveToPoint: CGPointMake(707.24, 161.31)];
        [bezierPath addCurveToPoint: CGPointMake(805.81, 161.31) controlPoint1: CGPointMake(707.24, 161.31) controlPoint2: CGPointMake(805.81, 161.31)];
        [bezierPath addCurveToPoint: CGPointMake(914.77, 161.31) controlPoint1: CGPointMake(858.22, 161.31) controlPoint2: CGPointMake(913.06, 161.31)];
        [bezierPath addCurveToPoint: CGPointMake(914.81, 249.31) controlPoint1: CGPointMake(914.81, 161.31) controlPoint2: CGPointMake(914.81, 249.31)];
        [bezierPath addLineToPoint: CGPointMake(743.89, 249.31)];
        [bezierPath addCurveToPoint: CGPointMake(707.24, 161.31) controlPoint1: CGPointMake(736.06, 217.9) controlPoint2: CGPointMake(723.58, 188.31)];
        [bezierPath addLineToPoint: CGPointMake(707.24, 161.31)];
        [bezierPath closePath];
        [bezierPath moveToPoint: CGPointMake(753.2, 315.31)];
        [bezierPath addCurveToPoint: CGPointMake(761.81, 315.31) controlPoint1: CGPointMake(753.2, 315.31) controlPoint2: CGPointMake(761.81, 315.31)];
        [bezierPath addCurveToPoint: CGPointMake(914.76, 315.31) controlPoint1: CGPointMake(793.11, 315.31) controlPoint2: CGPointMake(911.98, 315.31)];
        [bezierPath addCurveToPoint: CGPointMake(914.81, 403.31) controlPoint1: CGPointMake(914.81, 315.31) controlPoint2: CGPointMake(914.81, 403.31)];
        [bezierPath addLineToPoint: CGPointMake(744.24, 403.31)];
        [bezierPath addCurveToPoint: CGPointMake(753.41, 327.01) controlPoint1: CGPointMake(750.3, 378.48) controlPoint2: CGPointMake(753.41, 352.88)];
        [bezierPath addCurveToPoint: CGPointMake(753.2, 315.31) controlPoint1: CGPointMake(753.41, 323.09) controlPoint2: CGPointMake(753.34, 319.19)];
        [bezierPath addLineToPoint: CGPointMake(753.2, 315.31)];
        [bezierPath closePath];
        [bezierPath moveToPoint: CGPointMake(336.55, 297.55)];
        [bezierPath addCurveToPoint: CGPointMake(336.55, 430.06) controlPoint1: CGPointMake(299.96, 334.14) controlPoint2: CGPointMake(299.96, 393.47)];
        [bezierPath addCurveToPoint: CGPointMake(469.06, 430.06) controlPoint1: CGPointMake(373.14, 466.65) controlPoint2: CGPointMake(432.47, 466.65)];
        [bezierPath addCurveToPoint: CGPointMake(469.06, 297.55) controlPoint1: CGPointMake(505.65, 393.47) controlPoint2: CGPointMake(505.65, 334.14)];
        [bezierPath addCurveToPoint: CGPointMake(336.55, 297.55) controlPoint1: CGPointMake(432.47, 260.96) controlPoint2: CGPointMake(373.14, 260.96)];
        [bezierPath closePath];
        [bezierPath moveToPoint: CGPointMake(914.81, 469.31)];
        [bezierPath addCurveToPoint: CGPointMake(914.81, 557.31) controlPoint1: CGPointMake(914.81, 469.31) controlPoint2: CGPointMake(914.81, 557.31)];
        [bezierPath addLineToPoint: CGPointMake(673.67, 557.31)];
        [bezierPath addCurveToPoint: CGPointMake(704.51, 497.31) controlPoint1: CGPointMake(692.56, 520.54) controlPoint2: CGPointMake(704.51, 497.31)];
        [bezierPath addCurveToPoint: CGPointMake(720.17, 469.31) controlPoint1: CGPointMake(710.21, 488.21) controlPoint2: CGPointMake(715.44, 478.87)];
        [bezierPath addCurveToPoint: CGPointMake(914.81, 469.31) controlPoint1: CGPointMake(735.32, 469.31) controlPoint2: CGPointMake(914.81, 469.31)];
        [bezierPath addLineToPoint: CGPointMake(914.81, 469.31)];
        [bezierPath closePath];
        [bezierPath moveToPoint: CGPointMake(914.58, 609.31)];
        [bezierPath addCurveToPoint: CGPointMake(914.81, 697.31) controlPoint1: CGPointMake(914.81, 609.31) controlPoint2: CGPointMake(914.81, 697.31)];
        [bezierPath addLineToPoint: CGPointMake(601.71, 697.31)];
        [bezierPath addCurveToPoint: CGPointMake(646.94, 609.31) controlPoint1: CGPointMake(617.77, 666.05) controlPoint2: CGPointMake(633.17, 636.09)];
        [bezierPath addCurveToPoint: CGPointMake(914.58, 609.31) controlPoint1: CGPointMake(664.9, 609.31) controlPoint2: CGPointMake(906.16, 609.31)];
        [bezierPath closePath];
        [bezierPath moveToPoint: CGPointMake(431.1, 926.31)];
        [bezierPath addCurveToPoint: CGPointMake(431.51, 926.31) controlPoint1: CGPointMake(431.1, 926.31) controlPoint2: CGPointMake(431.51, 926.31)];
        [bezierPath addCurveToPoint: CGPointMake(431.31, 926.71) controlPoint1: CGPointMake(431.38, 926.57) controlPoint2: CGPointMake(431.31, 926.71)];
        [bezierPath addCurveToPoint: CGPointMake(431.1, 926.31) controlPoint1: CGPointMake(431.31, 926.71) controlPoint2: CGPointMake(431.24, 926.57)];
        [bezierPath addLineToPoint: CGPointMake(431.1, 926.31)];
        [bezierPath closePath];
        [bezierPath moveToPoint: CGPointMake(687.41, 340.51)];
        [bezierPath addCurveToPoint: CGPointMake(642.81, 494.81) controlPoint1: CGPointMake(687.41, 397.21) controlPoint2: CGPointMake(671.01, 450.11)];
        [bezierPath addCurveToPoint: CGPointMake(396.81, 973.51) controlPoint1: CGPointMake(526.51, 654.51) controlPoint2: CGPointMake(445.61, 814.11)];
        [bezierPath addCurveToPoint: CGPointMake(153.21, 495.11) controlPoint1: CGPointMake(340.61, 808.31) controlPoint2: CGPointMake(259.01, 648.91)];
        [bezierPath addCurveToPoint: CGPointMake(108.41, 340.51) controlPoint1: CGPointMake(124.91, 450.41) controlPoint2: CGPointMake(108.41, 397.41)];
        [bezierPath addCurveToPoint: CGPointMake(397.91, 51.01) controlPoint1: CGPointMake(108.41, 180.61) controlPoint2: CGPointMake(238.01, 51.01)];
        [bezierPath addCurveToPoint: CGPointMake(687.41, 340.51) controlPoint1: CGPointMake(557.81, 51.01) controlPoint2: CGPointMake(687.41, 180.61)];
        [bezierPath closePath];
        [strokeColor setFill];
        [bezierPath fill];



        CGContextRestoreGState(context);
    }
}

+ (void)drawArrowIconWithScaleX: (CGFloat)scaleX scaleY: (CGFloat)scaleY strokeColorName: (NSString*)strokeColorName fillColorName: (NSString*)fillColorName rotation: (CGFloat)rotation;
{
    //// General Declarations
    CGContextRef context = UIGraphicsGetCurrentContext();


    //// Variable Declarations
    UIColor* strokeColor = [strokeColorName isEqualToString: @"myTintColor"] ? SHStyleKit.myTintColor : ([strokeColorName isEqualToString: @"myTintTransparentColor"] ? SHStyleKit.myTintTransparentColor : ([strokeColorName isEqualToString: @"myTextColor"] ? SHStyleKit.myTextColor : ([strokeColorName isEqualToString: @"myTextTransparentColor"] ? SHStyleKit.myTextTransparentColor : ([strokeColorName isEqualToString: @"myWhiteColor"] ? SHStyleKit.myWhiteColor : ([strokeColorName isEqualToString: @"myWhiteTransparentColor"] ? SHStyleKit.myWhiteTransparentColor : ([strokeColorName isEqualToString: @"myBlackColor"] ? SHStyleKit.myBlackColor : ([strokeColorName isEqualToString: @"default"] ? SHStyleKit.myWhiteColor : SHStyleKit.myClearColor)))))));
    UIColor* fillColor = [fillColorName isEqualToString: @"myTintColor"] ? SHStyleKit.myTintColor : ([fillColorName isEqualToString: @"myTintTransparentColor"] ? SHStyleKit.myTintTransparentColor : ([fillColorName isEqualToString: @"myTextTransparentColor"] ? SHStyleKit.myTextTransparentColor : ([fillColorName isEqualToString: @"myTextColor"] ? SHStyleKit.myTextColor : ([fillColorName isEqualToString: @"myWhiteColor"] ? SHStyleKit.myWhiteColor : ([fillColorName isEqualToString: @"myWhiteTransparentColor"] ? SHStyleKit.myWhiteTransparentColor : ([fillColorName isEqualToString: @"myBlackColor"] ? SHStyleKit.myBlackColor : ([fillColorName isEqualToString: @"default"] ? SHStyleKit.myWhiteColor : SHStyleKit.myClearColor)))))));

    //// Scaling Group
    {
        CGContextSaveGState(context);
        CGContextScaleCTM(context, scaleX, scaleY);



        //// Rotating Group
        {
            CGContextSaveGState(context);
            CGContextTranslateCTM(context, 508.6, 512.19);
            CGContextRotateCTM(context, -rotation * M_PI / 180);



            //// Bezier Drawing
            CGContextSaveGState(context);
            CGContextTranslateCTM(context, -502, -512);

            UIBezierPath* bezierPath = UIBezierPath.bezierPath;
            [bezierPath moveToPoint: CGPointMake(1007.41, 503.69)];
            [bezierPath addCurveToPoint: CGPointMake(1006.91, 498.29) controlPoint1: CGPointMake(1007.21, 501.89) controlPoint2: CGPointMake(1007.21, 500.09)];
            [bezierPath addCurveToPoint: CGPointMake(985.3, 459.49) controlPoint1: CGPointMake(1004.04, 482.99) controlPoint2: CGPointMake(996.21, 469.59)];
            [bezierPath addLineToPoint: CGPointMake(616.99, 87.19)];
            [bezierPath addCurveToPoint: CGPointMake(517.78, 87.09) controlPoint1: CGPointMake(589.64, 59.49) controlPoint2: CGPointMake(545.13, 59.49)];
            [bezierPath addLineToPoint: CGPointMake(516.79, 88.09)];
            [bezierPath addCurveToPoint: CGPointMake(516.69, 188.19) controlPoint1: CGPointMake(489.33, 115.69) controlPoint2: CGPointMake(489.33, 160.59)];
            [bezierPath addLineToPoint: CGPointMake(766.46, 440.69)];
            [bezierPath addLineToPoint: CGPointMake(70.17, 440.69)];
            [bezierPath addCurveToPoint: CGPointMake(0, 511.49) controlPoint1: CGPointMake(31.42, 440.69) controlPoint2: CGPointMake(0, 472.39)];
            [bezierPath addLineToPoint: CGPointMake(0, 512.89)];
            [bezierPath addCurveToPoint: CGPointMake(70.17, 583.69) controlPoint1: CGPointMake(0, 551.99) controlPoint2: CGPointMake(31.42, 583.69)];
            [bezierPath addLineToPoint: CGPointMake(766.46, 583.69)];
            [bezierPath addLineToPoint: CGPointMake(516.69, 836.19)];
            [bezierPath addCurveToPoint: CGPointMake(516.79, 936.29) controlPoint1: CGPointMake(489.33, 863.89) controlPoint2: CGPointMake(489.33, 908.69)];
            [bezierPath addLineToPoint: CGPointMake(517.78, 937.29)];
            [bezierPath addCurveToPoint: CGPointMake(616.99, 937.19) controlPoint1: CGPointMake(545.23, 964.89) controlPoint2: CGPointMake(589.64, 964.89)];
            [bezierPath addLineToPoint: CGPointMake(985.3, 564.89)];
            [bezierPath addCurveToPoint: CGPointMake(1006.91, 526.09) controlPoint1: CGPointMake(996.21, 554.79) controlPoint2: CGPointMake(1004.04, 541.39)];
            [bezierPath addCurveToPoint: CGPointMake(1007.41, 520.69) controlPoint1: CGPointMake(1007.21, 524.29) controlPoint2: CGPointMake(1007.21, 522.49)];
            [bezierPath addCurveToPoint: CGPointMake(1008.2, 512.89) controlPoint1: CGPointMake(1007.7, 518.09) controlPoint2: CGPointMake(1008.2, 515.59)];
            [bezierPath addLineToPoint: CGPointMake(1008.2, 511.49)];
            [bezierPath addCurveToPoint: CGPointMake(1007.41, 503.69) controlPoint1: CGPointMake(1008.2, 508.79) controlPoint2: CGPointMake(1007.7, 506.29)];
            [bezierPath closePath];
            bezierPath.miterLimit = 4;

            [fillColor setFill];
            [bezierPath fill];
            [strokeColor setStroke];
            bezierPath.lineWidth = 10;
            [bezierPath stroke];

            CGContextRestoreGState(context);



            CGContextRestoreGState(context);
        }



        CGContextRestoreGState(context);
    }
}

+ (void)drawDrinksIconWithScaleX: (CGFloat)scaleX scaleY: (CGFloat)scaleY strokeColorName: (NSString*)strokeColorName;
{
    //// General Declarations
    CGContextRef context = UIGraphicsGetCurrentContext();


    //// Variable Declarations
    UIColor* strokeColor = [strokeColorName isEqualToString: @"myTintColor"] ? SHStyleKit.myTintColor : ([strokeColorName isEqualToString: @"myTintTransparentColor"] ? SHStyleKit.myTintTransparentColor : ([strokeColorName isEqualToString: @"myTextColor"] ? SHStyleKit.myTextColor : ([strokeColorName isEqualToString: @"myTextTransparentColor"] ? SHStyleKit.myTextTransparentColor : ([strokeColorName isEqualToString: @"myWhiteColor"] ? SHStyleKit.myWhiteColor : ([strokeColorName isEqualToString: @"myWhiteTransparentColor"] ? SHStyleKit.myWhiteTransparentColor : ([strokeColorName isEqualToString: @"myBlackColor"] ? SHStyleKit.myBlackColor : ([strokeColorName isEqualToString: @"default"] ? SHStyleKit.myWhiteColor : SHStyleKit.myClearColor)))))));

    //// Group
    {
        CGContextSaveGState(context);
        CGContextScaleCTM(context, scaleX, scaleY);



        //// Beer Bezier Drawing
        UIBezierPath* beerBezierPath = UIBezierPath.bezierPath;
        [beerBezierPath moveToPoint: CGPointMake(830.23, 744.91)];
        [beerBezierPath addCurveToPoint: CGPointMake(830.23, 763.68) controlPoint1: CGPointMake(835.41, 750.09) controlPoint2: CGPointMake(835.41, 758.49)];
        [beerBezierPath addCurveToPoint: CGPointMake(811.49, 763.68) controlPoint1: CGPointMake(825.06, 768.86) controlPoint2: CGPointMake(816.67, 768.86)];
        [beerBezierPath addCurveToPoint: CGPointMake(811.49, 744.91) controlPoint1: CGPointMake(806.31, 758.49) controlPoint2: CGPointMake(806.31, 750.09)];
        [beerBezierPath addCurveToPoint: CGPointMake(830.23, 744.91) controlPoint1: CGPointMake(816.67, 739.73) controlPoint2: CGPointMake(825.06, 739.73)];
        [beerBezierPath closePath];
        [beerBezierPath moveToPoint: CGPointMake(861.47, 611.76)];
        [beerBezierPath addCurveToPoint: CGPointMake(861.47, 629.62) controlPoint1: CGPointMake(866.4, 616.69) controlPoint2: CGPointMake(866.4, 624.69)];
        [beerBezierPath addCurveToPoint: CGPointMake(843.62, 629.62) controlPoint1: CGPointMake(856.54, 634.56) controlPoint2: CGPointMake(848.55, 634.56)];
        [beerBezierPath addCurveToPoint: CGPointMake(843.62, 611.76) controlPoint1: CGPointMake(838.7, 624.69) controlPoint2: CGPointMake(838.7, 616.69)];
        [beerBezierPath addCurveToPoint: CGPointMake(861.47, 611.76) controlPoint1: CGPointMake(848.55, 606.82) controlPoint2: CGPointMake(856.54, 606.82)];
        [beerBezierPath closePath];
        [beerBezierPath moveToPoint: CGPointMake(810.42, 501.63)];
        [beerBezierPath addCurveToPoint: CGPointMake(810.42, 516.54) controlPoint1: CGPointMake(814.54, 505.74) controlPoint2: CGPointMake(814.54, 512.42)];
        [beerBezierPath addCurveToPoint: CGPointMake(795.53, 516.54) controlPoint1: CGPointMake(806.31, 520.65) controlPoint2: CGPointMake(799.64, 520.65)];
        [beerBezierPath addCurveToPoint: CGPointMake(795.53, 501.63) controlPoint1: CGPointMake(791.42, 512.42) controlPoint2: CGPointMake(791.42, 505.74)];
        [beerBezierPath addCurveToPoint: CGPointMake(810.42, 501.63) controlPoint1: CGPointMake(799.64, 497.51) controlPoint2: CGPointMake(806.31, 497.51)];
        [beerBezierPath closePath];
        [beerBezierPath moveToPoint: CGPointMake(859.18, 348.57)];
        [beerBezierPath addCurveToPoint: CGPointMake(859.18, 375.3) controlPoint1: CGPointMake(866.56, 355.95) controlPoint2: CGPointMake(866.56, 367.92)];
        [beerBezierPath addCurveToPoint: CGPointMake(832.48, 375.3) controlPoint1: CGPointMake(851.81, 382.68) controlPoint2: CGPointMake(839.85, 382.68)];
        [beerBezierPath addCurveToPoint: CGPointMake(832.48, 348.57) controlPoint1: CGPointMake(825.1, 367.92) controlPoint2: CGPointMake(825.1, 355.95)];
        [beerBezierPath addCurveToPoint: CGPointMake(859.18, 348.57) controlPoint1: CGPointMake(839.85, 341.18) controlPoint2: CGPointMake(851.81, 341.18)];
        [beerBezierPath closePath];
        [beerBezierPath moveToPoint: CGPointMake(963.13, 132.54)];
        [beerBezierPath addLineToPoint: CGPointMake(578.55, 132.54)];
        [beerBezierPath addCurveToPoint: CGPointMake(554.33, 226.67) controlPoint1: CGPointMake(567.03, 167.33) controlPoint2: CGPointMake(559.18, 198.4)];
        [beerBezierPath addCurveToPoint: CGPointMake(980.55, 223.59) controlPoint1: CGPointMake(622.82, 226.18) controlPoint2: CGPointMake(899.22, 224.18)];
        [beerBezierPath addCurveToPoint: CGPointMake(963.13, 132.54) controlPoint1: CGPointMake(977.32, 196.12) controlPoint2: CGPointMake(971.7, 166.03)];
        [beerBezierPath closePath];
        [beerBezierPath moveToPoint: CGPointMake(983.62, 262.1)];
        [beerBezierPath addCurveToPoint: CGPointMake(549.36, 265.25) controlPoint1: CGPointMake(903.95, 262.68) controlPoint2: CGPointMake(608.42, 264.82)];
        [beerBezierPath addCurveToPoint: CGPointMake(596.43, 488.36) controlPoint1: CGPointMake(541.86, 355.35) controlPoint2: CGPointMake(567.02, 416.69)];
        [beerBezierPath addCurveToPoint: CGPointMake(644.01, 982.96) controlPoint1: CGPointMake(641.19, 597.6) controlPoint2: CGPointMake(691.85, 720.94)];
        [beerBezierPath addLineToPoint: CGPointMake(903.57, 982.96)];
        [beerBezierPath addCurveToPoint: CGPointMake(939.52, 477.18) controlPoint1: CGPointMake(852.18, 710.21) controlPoint2: CGPointMake(898.58, 586.61)];
        [beerBezierPath addCurveToPoint: CGPointMake(983.62, 262.1) controlPoint1: CGPointMake(964.51, 410.56) controlPoint2: CGPointMake(987.17, 350.13)];
        [beerBezierPath closePath];
        [beerBezierPath moveToPoint: CGPointMake(992.72, 94)];
        [beerBezierPath addCurveToPoint: CGPointMake(996.63, 108.18) controlPoint1: CGPointMake(992.72, 94) controlPoint2: CGPointMake(996.63, 108.18)];
        [beerBezierPath addCurveToPoint: CGPointMake(975.66, 490.72) controlPoint1: CGPointMake(1048.2, 297.13) controlPoint2: CGPointMake(1012.97, 391.2)];
        [beerBezierPath addCurveToPoint: CGPointMake(945.88, 998.41) controlPoint1: CGPointMake(935.35, 598.33) controlPoint2: CGPointMake(889.59, 720.3)];
        [beerBezierPath addLineToPoint: CGPointMake(950.51, 1021.5)];
        [beerBezierPath addLineToPoint: CGPointMake(597.34, 1021.5)];
        [beerBezierPath addLineToPoint: CGPointMake(601.97, 998.51)];
        [beerBezierPath addCurveToPoint: CGPointMake(560.84, 502.99) controlPoint1: CGPointMake(654.81, 732.03) controlPoint2: CGPointMake(604.88, 610.33)];
        [beerBezierPath addCurveToPoint: CGPointMake(546.59, 106.91) controlPoint1: CGPointMake(518.54, 399.83) controlPoint2: CGPointMake(478.59, 302.49)];
        [beerBezierPath addLineToPoint: CGPointMake(551.13, 94)];
        [beerBezierPath addLineToPoint: CGPointMake(992.72, 94)];
        [beerBezierPath addLineToPoint: CGPointMake(992.72, 94)];
        [beerBezierPath closePath];
        [strokeColor setFill];
        [beerBezierPath fill];


        //// Cocktail Bezier Drawing
        UIBezierPath* cocktailBezierPath = UIBezierPath.bezierPath;
        [cocktailBezierPath moveToPoint: CGPointMake(271.04, 739.85)];
        [cocktailBezierPath addLineToPoint: CGPointMake(511, 489.36)];
        [cocktailBezierPath addLineToPoint: CGPointMake(379.66, 489.36)];
        [cocktailBezierPath addLineToPoint: CGPointMake(414.24, 453.28)];
        [cocktailBezierPath addCurveToPoint: CGPointMake(448.05, 443.7) controlPoint1: CGPointMake(425.25, 456.46) controlPoint2: CGPointMake(438.46, 453.22)];
        [cocktailBezierPath addCurveToPoint: CGPointMake(457.31, 408.27) controlPoint1: CGPointMake(458.02, 433.66) controlPoint2: CGPointMake(461.26, 419.67)];
        [cocktailBezierPath addLineToPoint: CGPointMake(491.76, 372.25)];
        [cocktailBezierPath addLineToPoint: CGPointMake(476.74, 358)];
        [cocktailBezierPath addLineToPoint: CGPointMake(443.38, 392.85)];
        [cocktailBezierPath addCurveToPoint: CGPointMake(405.11, 400.69) controlPoint1: CGPointMake(431.6, 387.08) controlPoint2: CGPointMake(416.05, 389.74)];
        [cocktailBezierPath addCurveToPoint: CGPointMake(397.85, 440.39) controlPoint1: CGPointMake(393.77, 412.09) controlPoint2: CGPointMake(391.25, 428.48)];
        [cocktailBezierPath addLineToPoint: CGPointMake(351.03, 489.36)];
        [cocktailBezierPath addLineToPoint: CGPointMake(0, 489.36)];
        [cocktailBezierPath addLineToPoint: CGPointMake(240.02, 739.85)];
        [cocktailBezierPath addLineToPoint: CGPointMake(240.02, 950.83)];
        [cocktailBezierPath addLineToPoint: CGPointMake(124.09, 1001.16)];
        [cocktailBezierPath addCurveToPoint: CGPointMake(387.04, 1001.16) controlPoint1: CGPointMake(124.09, 1001.16) controlPoint2: CGPointMake(254.85, 1047.73)];
        [cocktailBezierPath addLineToPoint: CGPointMake(271.11, 950.83)];
        [cocktailBezierPath addLineToPoint: CGPointMake(271.11, 739.85)];
        [cocktailBezierPath addLineToPoint: CGPointMake(271.04, 739.85)];
        [cocktailBezierPath closePath];
        [cocktailBezierPath moveToPoint: CGPointMake(290.21, 552.78)];
        [cocktailBezierPath addLineToPoint: CGPointMake(238.86, 606.48)];
        [cocktailBezierPath addLineToPoint: CGPointMake(253.75, 620.79)];
        [cocktailBezierPath addLineToPoint: CGPointMake(318.91, 552.84)];
        [cocktailBezierPath addLineToPoint: CGPointMake(410.68, 552.84)];
        [cocktailBezierPath addLineToPoint: CGPointMake(255.56, 714.65)];
        [cocktailBezierPath addLineToPoint: CGPointMake(100.45, 552.78)];
        [cocktailBezierPath addLineToPoint: CGPointMake(290.21, 552.78)];
        [cocktailBezierPath closePath];
        cocktailBezierPath.miterLimit = 4;

        [strokeColor setFill];
        [cocktailBezierPath fill];



        CGContextRestoreGState(context);
    }
}

+ (void)drawOutlineIconWithScaleX: (CGFloat)scaleX scaleY: (CGFloat)scaleY strokeColorName: (NSString*)strokeColorName;
{
    //// General Declarations
    CGContextRef context = UIGraphicsGetCurrentContext();


    //// Variable Declarations
    UIColor* strokeColor = [strokeColorName isEqualToString: @"myTintColor"] ? SHStyleKit.myTintColor : ([strokeColorName isEqualToString: @"myTintTransparentColor"] ? SHStyleKit.myTintTransparentColor : ([strokeColorName isEqualToString: @"myTextColor"] ? SHStyleKit.myTextColor : ([strokeColorName isEqualToString: @"myTextTransparentColor"] ? SHStyleKit.myTextTransparentColor : ([strokeColorName isEqualToString: @"myWhiteColor"] ? SHStyleKit.myWhiteColor : ([strokeColorName isEqualToString: @"myWhiteTransparentColor"] ? SHStyleKit.myWhiteTransparentColor : ([strokeColorName isEqualToString: @"myBlackColor"] ? SHStyleKit.myBlackColor : ([strokeColorName isEqualToString: @"default"] ? SHStyleKit.myWhiteColor : SHStyleKit.myClearColor)))))));

    //// Group
    {
        CGContextSaveGState(context);
        CGContextScaleCTM(context, scaleX, scaleY);



        //// Icon Rectangle Drawing
        UIBezierPath* iconRectanglePath = [UIBezierPath bezierPathWithRect: CGRectMake(5, 5, 1014, 1014)];
        [SHStyleKit.myScreenColor setFill];
        [iconRectanglePath fill];
        [strokeColor setStroke];
        iconRectanglePath.lineWidth = 10;
        [iconRectanglePath stroke];



        CGContextRestoreGState(context);
    }
}

+ (void)drawCheckMarkIconWithScaleX: (CGFloat)scaleX scaleY: (CGFloat)scaleY strokeColorName: (NSString*)strokeColorName fillColorName: (NSString*)fillColorName;
{
    //// General Declarations
    CGContextRef context = UIGraphicsGetCurrentContext();


    //// Variable Declarations
    UIColor* strokeColor = [strokeColorName isEqualToString: @"myTintColor"] ? SHStyleKit.myTintColor : ([strokeColorName isEqualToString: @"myTintTransparentColor"] ? SHStyleKit.myTintTransparentColor : ([strokeColorName isEqualToString: @"myTextColor"] ? SHStyleKit.myTextColor : ([strokeColorName isEqualToString: @"myTextTransparentColor"] ? SHStyleKit.myTextTransparentColor : ([strokeColorName isEqualToString: @"myWhiteColor"] ? SHStyleKit.myWhiteColor : ([strokeColorName isEqualToString: @"myWhiteTransparentColor"] ? SHStyleKit.myWhiteTransparentColor : ([strokeColorName isEqualToString: @"myBlackColor"] ? SHStyleKit.myBlackColor : ([strokeColorName isEqualToString: @"default"] ? SHStyleKit.myWhiteColor : SHStyleKit.myClearColor)))))));
    UIColor* fillColor = [fillColorName isEqualToString: @"myTintColor"] ? SHStyleKit.myTintColor : ([fillColorName isEqualToString: @"myTintTransparentColor"] ? SHStyleKit.myTintTransparentColor : ([fillColorName isEqualToString: @"myTextTransparentColor"] ? SHStyleKit.myTextTransparentColor : ([fillColorName isEqualToString: @"myTextColor"] ? SHStyleKit.myTextColor : ([fillColorName isEqualToString: @"myWhiteColor"] ? SHStyleKit.myWhiteColor : ([fillColorName isEqualToString: @"myWhiteTransparentColor"] ? SHStyleKit.myWhiteTransparentColor : ([fillColorName isEqualToString: @"myBlackColor"] ? SHStyleKit.myBlackColor : ([fillColorName isEqualToString: @"default"] ? SHStyleKit.myWhiteColor : SHStyleKit.myClearColor)))))));

    //// Group
    {
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 0.4, 0);
        CGContextScaleCTM(context, scaleX, scaleY);



        //// Bezier Drawing
        UIBezierPath* bezierPath = UIBezierPath.bezierPath;
        [bezierPath moveToPoint: CGPointMake(24.6, 694.36)];
        [bezierPath addLineToPoint: CGPointMake(356.54, 968.3)];
        [bezierPath addLineToPoint: CGPointMake(978.6, 285.7)];
        [bezierPath addLineToPoint: CGPointMake(760.07, 94)];
        [bezierPath addLineToPoint: CGPointMake(355.1, 732.05)];
        [bezierPath addLineToPoint: CGPointMake(167.94, 531.15)];
        [bezierPath addLineToPoint: CGPointMake(24.6, 694.36)];
        [bezierPath closePath];
        [fillColor setFill];
        [bezierPath fill];
        [strokeColor setStroke];
        bezierPath.lineWidth = 12;
        [bezierPath stroke];



        CGContextRestoreGState(context);
    }
}

+ (void)drawThumbsUpIconWithScaleX: (CGFloat)scaleX scaleY: (CGFloat)scaleY strokeColorName: (NSString*)strokeColorName fillColorName: (NSString*)fillColorName;
{
    //// General Declarations
    CGContextRef context = UIGraphicsGetCurrentContext();


    //// Variable Declarations
    UIColor* strokeColor = [strokeColorName isEqualToString: @"myTintColor"] ? SHStyleKit.myTintColor : ([strokeColorName isEqualToString: @"myTintTransparentColor"] ? SHStyleKit.myTintTransparentColor : ([strokeColorName isEqualToString: @"myTextColor"] ? SHStyleKit.myTextColor : ([strokeColorName isEqualToString: @"myTextTransparentColor"] ? SHStyleKit.myTextTransparentColor : ([strokeColorName isEqualToString: @"myWhiteColor"] ? SHStyleKit.myWhiteColor : ([strokeColorName isEqualToString: @"myWhiteTransparentColor"] ? SHStyleKit.myWhiteTransparentColor : ([strokeColorName isEqualToString: @"myBlackColor"] ? SHStyleKit.myBlackColor : ([strokeColorName isEqualToString: @"default"] ? SHStyleKit.myWhiteColor : SHStyleKit.myClearColor)))))));
    UIColor* fillColor = [fillColorName isEqualToString: @"myTintColor"] ? SHStyleKit.myTintColor : ([fillColorName isEqualToString: @"myTintTransparentColor"] ? SHStyleKit.myTintTransparentColor : ([fillColorName isEqualToString: @"myTextTransparentColor"] ? SHStyleKit.myTextTransparentColor : ([fillColorName isEqualToString: @"myTextColor"] ? SHStyleKit.myTextColor : ([fillColorName isEqualToString: @"myWhiteColor"] ? SHStyleKit.myWhiteColor : ([fillColorName isEqualToString: @"myWhiteTransparentColor"] ? SHStyleKit.myWhiteTransparentColor : ([fillColorName isEqualToString: @"myBlackColor"] ? SHStyleKit.myBlackColor : ([fillColorName isEqualToString: @"default"] ? SHStyleKit.myWhiteColor : SHStyleKit.myClearColor)))))));

    //// Group
    {
        CGContextSaveGState(context);
        CGContextScaleCTM(context, scaleX, scaleY);



        //// Bezier Drawing
        UIBezierPath* bezierPath = UIBezierPath.bezierPath;
        [bezierPath moveToPoint: CGPointMake(329.6, 360.1)];
        [bezierPath addCurveToPoint: CGPointMake(293.2, 284.1) controlPoint1: CGPointMake(324.2, 331.6) controlPoint2: CGPointMake(312.2, 306.3)];
        [bezierPath addCurveToPoint: CGPointMake(264.3, 243.6) controlPoint1: CGPointMake(282.4, 271.5) controlPoint2: CGPointMake(270.8, 258.5)];
        [bezierPath addCurveToPoint: CGPointMake(258.7, 105.9) controlPoint1: CGPointMake(244.7, 198.9) controlPoint2: CGPointMake(242, 152.4)];
        [bezierPath addCurveToPoint: CGPointMake(297.5, 54.6) controlPoint1: CGPointMake(266.2, 85) controlPoint2: CGPointMake(279.2, 67.6)];
        [bezierPath addCurveToPoint: CGPointMake(323.4, 48.2) controlPoint1: CGPointMake(305.3, 49) controlPoint2: CGPointMake(314, 47.1)];
        [bezierPath addCurveToPoint: CGPointMake(354.9, 60.1) controlPoint1: CGPointMake(334.9, 49.6) controlPoint2: CGPointMake(345.3, 53.8)];
        [bezierPath addCurveToPoint: CGPointMake(374.6, 93) controlPoint1: CGPointMake(366.7, 67.9) controlPoint2: CGPointMake(374.1, 78.5)];
        [bezierPath addCurveToPoint: CGPointMake(374.6, 114.3) controlPoint1: CGPointMake(374.8, 100.1) controlPoint2: CGPointMake(375.1, 107.2)];
        [bezierPath addCurveToPoint: CGPointMake(402, 209) controlPoint1: CGPointMake(372.5, 149.1) controlPoint2: CGPointMake(381.1, 180.9)];
        [bezierPath addCurveToPoint: CGPointMake(432.7, 245.8) controlPoint1: CGPointMake(411.5, 221.8) controlPoint2: CGPointMake(422.4, 233.6)];
        [bezierPath addCurveToPoint: CGPointMake(467.6, 271.9) controlPoint1: CGPointMake(442.4, 257.1) controlPoint2: CGPointMake(454.5, 265.1)];
        [bezierPath addCurveToPoint: CGPointMake(531.4, 319.6) controlPoint1: CGPointMake(491.5, 284.2) controlPoint2: CGPointMake(512.4, 300.7)];
        [bezierPath addCurveToPoint: CGPointMake(599.2, 406) controlPoint1: CGPointMake(557.6, 345.6) controlPoint2: CGPointMake(579.2, 375.2)];
        [bezierPath addCurveToPoint: CGPointMake(651.3, 488.2) controlPoint1: CGPointMake(616.9, 433.2) controlPoint2: CGPointMake(633.8, 460.9)];
        [bezierPath addCurveToPoint: CGPointMake(658.1, 493.1) controlPoint1: CGPointMake(652.7, 490.4) controlPoint2: CGPointMake(655.7, 493)];
        [bezierPath addCurveToPoint: CGPointMake(694.8, 493.2) controlPoint1: CGPointMake(670.3, 493.6) controlPoint2: CGPointMake(682.6, 493.5)];
        [bezierPath addCurveToPoint: CGPointMake(699.8, 489.6) controlPoint1: CGPointMake(696.5, 493.2) controlPoint2: CGPointMake(699.1, 491.3)];
        [bezierPath addCurveToPoint: CGPointMake(748.5, 457.4) controlPoint1: CGPointMake(709.1, 467.5) controlPoint2: CGPointMake(724.3, 457.4)];
        [bezierPath addCurveToPoint: CGPointMake(882.6, 457.4) controlPoint1: CGPointMake(793.2, 457.4) controlPoint2: CGPointMake(837.9, 457.4)];
        [bezierPath addCurveToPoint: CGPointMake(956, 457.5) controlPoint1: CGPointMake(907.1, 457.4) controlPoint2: CGPointMake(931.5, 457.2)];
        [bezierPath addCurveToPoint: CGPointMake(998.9, 498.7) controlPoint1: CGPointMake(978.8, 457.8) controlPoint2: CGPointMake(998.3, 476.8)];
        [bezierPath addCurveToPoint: CGPointMake(999, 522) controlPoint1: CGPointMake(999.1, 506.5) controlPoint2: CGPointMake(999, 514.2)];
        [bezierPath addCurveToPoint: CGPointMake(998.6, 773.4) controlPoint1: CGPointMake(998.9, 605.8) controlPoint2: CGPointMake(998.7, 689.6)];
        [bezierPath addCurveToPoint: CGPointMake(998.8, 935.5) controlPoint1: CGPointMake(998.6, 827.4) controlPoint2: CGPointMake(999, 881.4)];
        [bezierPath addCurveToPoint: CGPointMake(955.3, 978.8) controlPoint1: CGPointMake(998.7, 959.5) controlPoint2: CGPointMake(979.4, 978.7)];
        [bezierPath addCurveToPoint: CGPointMake(699.8, 978.8) controlPoint1: CGPointMake(870.1, 979) controlPoint2: CGPointMake(785, 979)];
        [bezierPath addCurveToPoint: CGPointMake(659.3, 943.4) controlPoint1: CGPointMake(678.9, 978.8) controlPoint2: CGPointMake(662.4, 964.1)];
        [bezierPath addCurveToPoint: CGPointMake(659.2, 926.2) controlPoint1: CGPointMake(658.5, 938) controlPoint2: CGPointMake(659.2, 932.4)];
        [bezierPath addCurveToPoint: CGPointMake(608.2, 934.8) controlPoint1: CGPointMake(641.6, 926.4) controlPoint2: CGPointMake(624.2, 923.9)];
        [bezierPath addCurveToPoint: CGPointMake(561.4, 963) controlPoint1: CGPointMake(593.2, 945.1) controlPoint2: CGPointMake(577.2, 953.9)];
        [bezierPath addCurveToPoint: CGPointMake(519.4, 973.8) controlPoint1: CGPointMake(548.5, 970.5) controlPoint2: CGPointMake(534.6, 973.8)];
        [bezierPath addCurveToPoint: CGPointMake(231.2, 973.3) controlPoint1: CGPointMake(423.4, 973.4) controlPoint2: CGPointMake(327.3, 973.7)];
        [bezierPath addCurveToPoint: CGPointMake(182.9, 969.4) controlPoint1: CGPointMake(215.1, 973.2) controlPoint2: CGPointMake(198.7, 972.2)];
        [bezierPath addCurveToPoint: CGPointMake(101.7, 937.8) controlPoint1: CGPointMake(153.8, 964.4) controlPoint2: CGPointMake(126, 955.4)];
        [bezierPath addCurveToPoint: CGPointMake(70, 871.8) controlPoint1: CGPointMake(79.2, 921.5) controlPoint2: CGPointMake(68.7, 899.4)];
        [bezierPath addCurveToPoint: CGPointMake(86.6, 838.4) controlPoint1: CGPointMake(70.6, 858.4) controlPoint2: CGPointMake(74.1, 846.3)];
        [bezierPath addCurveToPoint: CGPointMake(81.5, 834.8) controlPoint1: CGPointMake(84.7, 837.1) controlPoint2: CGPointMake(83.1, 836)];
        [bezierPath addCurveToPoint: CGPointMake(42.1, 749.5) controlPoint1: CGPointMake(52.5, 813.7) controlPoint2: CGPointMake(39.5, 785)];
        [bezierPath addCurveToPoint: CGPointMake(66.9, 705.3) controlPoint1: CGPointMake(43.4, 731.4) controlPoint2: CGPointMake(51.7, 716.4)];
        [bezierPath addCurveToPoint: CGPointMake(26, 632.8) controlPoint1: CGPointMake(38.5, 689) controlPoint2: CGPointMake(27.9, 663.2)];
        [bezierPath addCurveToPoint: CGPointMake(69, 562.2) controlPoint1: CGPointMake(24, 599.7) controlPoint2: CGPointMake(41.7, 578.2)];
        [bezierPath addCurveToPoint: CGPointMake(39.4, 531.5) controlPoint1: CGPointMake(56, 554.5) controlPoint2: CGPointMake(46.5, 544.1)];
        [bezierPath addCurveToPoint: CGPointMake(24.4, 476.1) controlPoint1: CGPointMake(29.8, 514.3) controlPoint2: CGPointMake(26, 495.6)];
        [bezierPath addCurveToPoint: CGPointMake(67.2, 406) controlPoint1: CGPointMake(21.3, 437.6) controlPoint2: CGPointMake(39.5, 419.4)];
        [bezierPath addCurveToPoint: CGPointMake(127.3, 389.4) controlPoint1: CGPointMake(86.2, 396.8) controlPoint2: CGPointMake(106.6, 392.5)];
        [bezierPath addCurveToPoint: CGPointMake(232.5, 385) controlPoint1: CGPointMake(162.2, 384.2) controlPoint2: CGPointMake(197.4, 385.1)];
        [bezierPath addCurveToPoint: CGPointMake(332.7, 385) controlPoint1: CGPointMake(265.4, 384.9) controlPoint2: CGPointMake(298.3, 385)];
        [bezierPath addCurveToPoint: CGPointMake(329.6, 360.1) controlPoint1: CGPointMake(331.8, 376.2) controlPoint2: CGPointMake(331.2, 368)];
        [bezierPath closePath];
        bezierPath.miterLimit = 4;

        [fillColor setFill];
        [bezierPath fill];
        [strokeColor setStroke];
        bezierPath.lineWidth = 30;
        [bezierPath stroke];



        CGContextRestoreGState(context);
    }
}

+ (void)drawShareIconWithScaleX: (CGFloat)scaleX scaleY: (CGFloat)scaleY color1Name: (NSString*)color1Name color2Name: (NSString*)color2Name color3Name: (NSString*)color3Name;
{
    //// General Declarations
    CGContextRef context = UIGraphicsGetCurrentContext();


    //// Variable Declarations
    UIColor* myColor1 = [color1Name isEqualToString: @"myTintColor"] ? SHStyleKit.myTintColor : ([color1Name isEqualToString: @"myTintColorTransparent"] ? SHStyleKit.myTintTransparentColor : ([color1Name isEqualToString: @"myTextColor"] ? SHStyleKit.myTextColor : ([color1Name isEqualToString: @"myWhiteColor"] ? SHStyleKit.myWhiteColor : ([color1Name isEqualToString: @"default"] ? SHStyleKit.myTintColor : SHStyleKit.myClearColor))));
    UIColor* myColor2 = [color2Name isEqualToString: @"myTintColor"] ? SHStyleKit.myTintColor : ([color2Name isEqualToString: @"myTintColorTransparent"] ? SHStyleKit.myTintTransparentColor : ([color2Name isEqualToString: @"myTextColor"] ? SHStyleKit.myTextColor : ([color2Name isEqualToString: @"myWhiteColor"] ? SHStyleKit.myWhiteColor : ([color2Name isEqualToString: @"default"] ? SHStyleKit.myTintColor : SHStyleKit.myClearColor))));
    UIColor* myColor3 = [color3Name isEqualToString: @"myTintColor"] ? SHStyleKit.myTintColor : ([color3Name isEqualToString: @"myTintColorTransparent"] ? SHStyleKit.myTintTransparentColor : ([color3Name isEqualToString: @"myTextColor"] ? SHStyleKit.myTextColor : ([color3Name isEqualToString: @"myWhiteColor"] ? SHStyleKit.myWhiteColor : ([color3Name isEqualToString: @"default"] ? SHStyleKit.myTintColor : SHStyleKit.myClearColor))));

    //// Group
    {
        CGContextSaveGState(context);
        CGContextScaleCTM(context, scaleX, scaleY);



        //// Circle Drawing
        UIBezierPath* circlePath = UIBezierPath.bezierPath;
        [circlePath moveToPoint: CGPointMake(473.8, 43)];
        [circlePath addCurveToPoint: CGPointMake(6.7, 510) controlPoint1: CGPointMake(216.2, 43) controlPoint2: CGPointMake(6.7, 252.5)];
        [circlePath addCurveToPoint: CGPointMake(129.6, 825.4) controlPoint1: CGPointMake(6.7, 631.5) controlPoint2: CGPointMake(53.4, 742.3)];
        [circlePath addLineToPoint: CGPointMake(126.8, 961.7)];
        [circlePath addLineToPoint: CGPointMake(262.4, 926.3)];
        [circlePath addCurveToPoint: CGPointMake(473.7, 977.1) controlPoint1: CGPointMake(325.9, 958.7) controlPoint2: CGPointMake(397.7, 977.1)];
        [circlePath addCurveToPoint: CGPointMake(940.8, 510) controlPoint1: CGPointMake(731.2, 977.1) controlPoint2: CGPointMake(940.8, 767.6)];
        [circlePath addCurveToPoint: CGPointMake(473.8, 43) controlPoint1: CGPointMake(940.8, 252.5) controlPoint2: CGPointMake(731.3, 43)];
        [circlePath closePath];
        [circlePath moveToPoint: CGPointMake(473.8, 879.3)];
        [circlePath addCurveToPoint: CGPointMake(104.6, 510.1) controlPoint1: CGPointMake(270.2, 879.3) controlPoint2: CGPointMake(104.6, 713.7)];
        [circlePath addCurveToPoint: CGPointMake(473.8, 140.9) controlPoint1: CGPointMake(104.6, 306.5) controlPoint2: CGPointMake(270.2, 140.9)];
        [circlePath addCurveToPoint: CGPointMake(843, 510) controlPoint1: CGPointMake(677.4, 140.9) controlPoint2: CGPointMake(843, 306.5)];
        [circlePath addCurveToPoint: CGPointMake(473.8, 879.3) controlPoint1: CGPointMake(843, 713.6) controlPoint2: CGPointMake(677.3, 879.3)];
        [circlePath closePath];
        circlePath.miterLimit = 4;

        [myColor3 setFill];
        [circlePath fill];


        //// Arrow Drawing
        UIBezierPath* arrowPath = UIBezierPath.bezierPath;
        [arrowPath moveToPoint: CGPointMake(736.9, 147.8)];
        [arrowPath addLineToPoint: CGPointMake(972.4, 323.9)];
        [arrowPath addCurveToPoint: CGPointMake(1013.4, 404.3) controlPoint1: CGPointMake(998, 343) controlPoint2: CGPointMake(1013, 372.3)];
        [arrowPath addCurveToPoint: CGPointMake(974.8, 485.9) controlPoint1: CGPointMake(1013.9, 436.3) controlPoint2: CGPointMake(999.8, 466)];
        [arrowPath addLineToPoint: CGPointMake(738.7, 673.9)];
        [arrowPath addCurveToPoint: CGPointMake(712.4, 685.9) controlPoint1: CGPointMake(731.5, 679.6) controlPoint2: CGPointMake(722.6, 683.7)];
        [arrowPath addCurveToPoint: CGPointMake(696.7, 687.6) controlPoint1: CGPointMake(707.3, 687) controlPoint2: CGPointMake(702, 687.6)];
        [arrowPath addCurveToPoint: CGPointMake(621.9, 631.7) controlPoint1: CGPointMake(663.2, 687.6) controlPoint2: CGPointMake(632.5, 664.6)];
        [arrowPath addLineToPoint: CGPointMake(603.6, 574.8)];
        [arrowPath addCurveToPoint: CGPointMake(601.8, 573) controlPoint1: CGPointMake(603.3, 573.7) controlPoint2: CGPointMake(602.4, 573.1)];
        [arrowPath addCurveToPoint: CGPointMake(596.9, 572.9) controlPoint1: CGPointMake(600.2, 572.9) controlPoint2: CGPointMake(598.6, 572.9)];
        [arrowPath addCurveToPoint: CGPointMake(305.6, 842.1) controlPoint1: CGPointMake(509.3, 572.9) controlPoint2: CGPointMake(376.4, 673.6)];
        [arrowPath addCurveToPoint: CGPointMake(247.9, 879.3) controlPoint1: CGPointMake(295.9, 865.4) controlPoint2: CGPointMake(274.3, 879.3)];
        [arrowPath addCurveToPoint: CGPointMake(196.9, 858.5) controlPoint1: CGPointMake(227.8, 879.3) controlPoint2: CGPointMake(207.8, 871.1)];
        [arrowPath addCurveToPoint: CGPointMake(187.7, 833.5) controlPoint1: CGPointMake(190.5, 851.1) controlPoint2: CGPointMake(187.3, 842.3)];
        [arrowPath addCurveToPoint: CGPointMake(575.2, 254.4) controlPoint1: CGPointMake(161.9, 504.6) controlPoint2: CGPointMake(281.4, 326)];
        [arrowPath addCurveToPoint: CGPointMake(577.2, 252.5) controlPoint1: CGPointMake(576.2, 254.2) controlPoint2: CGPointMake(577, 253.4)];
        [arrowPath addLineToPoint: CGPointMake(597.5, 161.6)];
        [arrowPath addLineToPoint: CGPointMake(600.1, 157.9)];
        [arrowPath addCurveToPoint: CGPointMake(667.3, 119) controlPoint1: CGPointMake(623.2, 125.7) controlPoint2: CGPointMake(649.4, 119)];
        [arrowPath addCurveToPoint: CGPointMake(736.9, 147.8) controlPoint1: CGPointMake(694.7, 119) controlPoint2: CGPointMake(717.9, 133.5)];
        [arrowPath closePath];
        [myColor1 setFill];
        [arrowPath fill];
        [myColor2 setStroke];
        arrowPath.lineWidth = 25;
        [arrowPath stroke];



        CGContextRestoreGState(context);
    }
}

+ (void)drawReviewsIconWithScaleX: (CGFloat)scaleX scaleY: (CGFloat)scaleY strokeColorName: (NSString*)strokeColorName;
{
    //// General Declarations
    CGContextRef context = UIGraphicsGetCurrentContext();


    //// Variable Declarations
    UIColor* strokeColor = [strokeColorName isEqualToString: @"myTintColor"] ? SHStyleKit.myTintColor : ([strokeColorName isEqualToString: @"myTintTransparentColor"] ? SHStyleKit.myTintTransparentColor : ([strokeColorName isEqualToString: @"myTextColor"] ? SHStyleKit.myTextColor : ([strokeColorName isEqualToString: @"myTextTransparentColor"] ? SHStyleKit.myTextTransparentColor : ([strokeColorName isEqualToString: @"myWhiteColor"] ? SHStyleKit.myWhiteColor : ([strokeColorName isEqualToString: @"myWhiteTransparentColor"] ? SHStyleKit.myWhiteTransparentColor : ([strokeColorName isEqualToString: @"myBlackColor"] ? SHStyleKit.myBlackColor : ([strokeColorName isEqualToString: @"default"] ? SHStyleKit.myWhiteColor : SHStyleKit.myClearColor)))))));

    //// Group
    {
        CGContextSaveGState(context);
        CGContextScaleCTM(context, scaleX, scaleY);



        //// Bezier Drawing
        UIBezierPath* bezierPath = UIBezierPath.bezierPath;
        [bezierPath moveToPoint: CGPointMake(289.61, 199.39)];
        [bezierPath addCurveToPoint: CGPointMake(322.21, 261.9) controlPoint1: CGPointMake(307.3, 217.07) controlPoint2: CGPointMake(318.17, 239)];
        [bezierPath addLineToPoint: CGPointMake(1022, 261.9)];
        [bezierPath addLineToPoint: CGPointMake(1022, 310.3)];
        [bezierPath addLineToPoint: CGPointMake(320.65, 310.3)];
        [bezierPath addCurveToPoint: CGPointMake(289.61, 365.41) controlPoint1: CGPointMake(315.73, 330.5) controlPoint2: CGPointMake(305.39, 349.64)];
        [bezierPath addCurveToPoint: CGPointMake(123.59, 365.41) controlPoint1: CGPointMake(243.77, 411.26) controlPoint2: CGPointMake(169.43, 411.26)];
        [bezierPath addCurveToPoint: CGPointMake(92.55, 310.3) controlPoint1: CGPointMake(107.81, 349.64) controlPoint2: CGPointMake(97.47, 330.5)];
        [bezierPath addLineToPoint: CGPointMake(4.4, 310.3)];
        [bezierPath addLineToPoint: CGPointMake(4.4, 261.9)];
        [bezierPath addLineToPoint: CGPointMake(90.99, 261.9)];
        [bezierPath addCurveToPoint: CGPointMake(123.59, 199.39) controlPoint1: CGPointMake(95.03, 239) controlPoint2: CGPointMake(105.9, 217.07)];
        [bezierPath addCurveToPoint: CGPointMake(289.61, 199.39) controlPoint1: CGPointMake(169.43, 153.54) controlPoint2: CGPointMake(243.77, 153.54)];
        [bezierPath closePath];
        [bezierPath moveToPoint: CGPointMake(987.61, 455.89)];
        [bezierPath addCurveToPoint: CGPointMake(1021.81, 532.2) controlPoint1: CGPointMake(1008.83, 477.1) controlPoint2: CGPointMake(1020.23, 504.43)];
        [bezierPath addLineToPoint: CGPointMake(1022, 532.2)];
        [bezierPath addLineToPoint: CGPointMake(1022, 580.6)];
        [bezierPath addLineToPoint: CGPointMake(1014.38, 580.6)];
        [bezierPath addCurveToPoint: CGPointMake(987.61, 621.91) controlPoint1: CGPointMake(1008.66, 595.66) controlPoint2: CGPointMake(999.74, 609.79)];
        [bezierPath addCurveToPoint: CGPointMake(821.59, 621.91) controlPoint1: CGPointMake(941.77, 667.76) controlPoint2: CGPointMake(867.43, 667.76)];
        [bezierPath addCurveToPoint: CGPointMake(794.82, 580.6) controlPoint1: CGPointMake(809.46, 609.79) controlPoint2: CGPointMake(800.54, 595.66)];
        [bezierPath addLineToPoint: CGPointMake(4.4, 580.6)];
        [bezierPath addLineToPoint: CGPointMake(4.4, 532.2)];
        [bezierPath addLineToPoint: CGPointMake(787.39, 532.2)];
        [bezierPath addCurveToPoint: CGPointMake(821.59, 455.89) controlPoint1: CGPointMake(788.97, 504.43) controlPoint2: CGPointMake(800.37, 477.1)];
        [bezierPath addCurveToPoint: CGPointMake(987.61, 455.89) controlPoint1: CGPointMake(867.43, 410.04) controlPoint2: CGPointMake(941.77, 410.04)];
        [bezierPath closePath];
        [bezierPath moveToPoint: CGPointMake(596.21, 748.49)];
        [bezierPath addCurveToPoint: CGPointMake(628.09, 807.3) controlPoint1: CGPointMake(612.95, 765.22) controlPoint2: CGPointMake(623.57, 785.75)];
        [bezierPath addLineToPoint: CGPointMake(1022, 807.3)];
        [bezierPath addLineToPoint: CGPointMake(1022, 855.7)];
        [bezierPath addLineToPoint: CGPointMake(628.09, 855.7)];
        [bezierPath addCurveToPoint: CGPointMake(596.21, 914.51) controlPoint1: CGPointMake(623.57, 877.25) controlPoint2: CGPointMake(612.95, 897.78)];
        [bezierPath addCurveToPoint: CGPointMake(430.19, 914.51) controlPoint1: CGPointMake(550.37, 960.36) controlPoint2: CGPointMake(476.03, 960.36)];
        [bezierPath addCurveToPoint: CGPointMake(398.31, 855.7) controlPoint1: CGPointMake(413.45, 897.78) controlPoint2: CGPointMake(402.83, 877.25)];
        [bezierPath addLineToPoint: CGPointMake(4.4, 855.7)];
        [bezierPath addLineToPoint: CGPointMake(4.4, 807.3)];
        [bezierPath addLineToPoint: CGPointMake(398.31, 807.3)];
        [bezierPath addCurveToPoint: CGPointMake(430.19, 748.49) controlPoint1: CGPointMake(402.83, 785.75) controlPoint2: CGPointMake(413.45, 765.22)];
        [bezierPath addCurveToPoint: CGPointMake(596.21, 748.49) controlPoint1: CGPointMake(476.03, 702.64) controlPoint2: CGPointMake(550.37, 702.64)];
        [bezierPath closePath];
        [strokeColor setFill];
        [bezierPath fill];



        CGContextRestoreGState(context);
    }
}

+ (void)drawDrinkMenuIconWithScaleX: (CGFloat)scaleX scaleY: (CGFloat)scaleY strokeColorName: (NSString*)strokeColorName;
{
    //// General Declarations
    CGContextRef context = UIGraphicsGetCurrentContext();


    //// Variable Declarations
    UIColor* strokeColor = [strokeColorName isEqualToString: @"myTintColor"] ? SHStyleKit.myTintColor : ([strokeColorName isEqualToString: @"myTintTransparentColor"] ? SHStyleKit.myTintTransparentColor : ([strokeColorName isEqualToString: @"myTextColor"] ? SHStyleKit.myTextColor : ([strokeColorName isEqualToString: @"myTextTransparentColor"] ? SHStyleKit.myTextTransparentColor : ([strokeColorName isEqualToString: @"myWhiteColor"] ? SHStyleKit.myWhiteColor : ([strokeColorName isEqualToString: @"myWhiteTransparentColor"] ? SHStyleKit.myWhiteTransparentColor : ([strokeColorName isEqualToString: @"myBlackColor"] ? SHStyleKit.myBlackColor : ([strokeColorName isEqualToString: @"default"] ? SHStyleKit.myWhiteColor : SHStyleKit.myClearColor)))))));

    //// Group
    {
        CGContextSaveGState(context);
        CGContextScaleCTM(context, scaleX, scaleY);



        //// Bezier Drawing
        UIBezierPath* bezierPath = UIBezierPath.bezierPath;
        [bezierPath moveToPoint: CGPointMake(624, 0)];
        [bezierPath addLineToPoint: CGPointMake(624, 248.3)];
        [bezierPath addLineToPoint: CGPointMake(881.2, 248.3)];
        [bezierPath addLineToPoint: CGPointMake(624, 0)];
        [bezierPath closePath];
        [bezierPath moveToPoint: CGPointMake(816.9, 369.3)];
        [bezierPath addLineToPoint: CGPointMake(210.2, 369.3)];
        [bezierPath addLineToPoint: CGPointMake(210.2, 399)];
        [bezierPath addLineToPoint: CGPointMake(816.9, 399)];
        [bezierPath addLineToPoint: CGPointMake(816.9, 369.3)];
        [bezierPath closePath];
        [bezierPath moveToPoint: CGPointMake(816.9, 487.5)];
        [bezierPath addLineToPoint: CGPointMake(210.2, 487.5)];
        [bezierPath addLineToPoint: CGPointMake(210.2, 517.2)];
        [bezierPath addLineToPoint: CGPointMake(816.9, 517.2)];
        [bezierPath addLineToPoint: CGPointMake(816.9, 487.5)];
        [bezierPath closePath];
        [bezierPath moveToPoint: CGPointMake(816.9, 605.7)];
        [bezierPath addLineToPoint: CGPointMake(210.2, 605.7)];
        [bezierPath addLineToPoint: CGPointMake(210.2, 635.4)];
        [bezierPath addLineToPoint: CGPointMake(816.9, 635.4)];
        [bezierPath addLineToPoint: CGPointMake(816.9, 605.7)];
        [bezierPath closePath];
        [bezierPath moveToPoint: CGPointMake(816.9, 723.9)];
        [bezierPath addLineToPoint: CGPointMake(210.2, 723.9)];
        [bezierPath addLineToPoint: CGPointMake(210.2, 753.6)];
        [bezierPath addLineToPoint: CGPointMake(816.9, 753.6)];
        [bezierPath addLineToPoint: CGPointMake(816.9, 723.9)];
        [bezierPath closePath];
        [bezierPath moveToPoint: CGPointMake(816.9, 842.2)];
        [bezierPath addLineToPoint: CGPointMake(210.2, 842.2)];
        [bezierPath addLineToPoint: CGPointMake(210.2, 871.9)];
        [bezierPath addLineToPoint: CGPointMake(816.9, 871.9)];
        [bezierPath addLineToPoint: CGPointMake(816.9, 842.2)];
        [bezierPath closePath];
        [bezierPath moveToPoint: CGPointMake(605.3, 0)];
        [bezierPath addCurveToPoint: CGPointMake(605.3, 269) controlPoint1: CGPointMake(605.3, 0) controlPoint2: CGPointMake(605.3, 269)];
        [bezierPath addLineToPoint: CGPointMake(881.2, 269)];
        [bezierPath addLineToPoint: CGPointMake(881.2, 1024)];
        [bezierPath addLineToPoint: CGPointMake(142.8, 1024)];
        [bezierPath addLineToPoint: CGPointMake(142.8, 0)];
        [bezierPath addLineToPoint: CGPointMake(605.3, 0)];
        [bezierPath addLineToPoint: CGPointMake(605.3, 0)];
        [bezierPath closePath];
        [strokeColor setFill];
        [bezierPath fill];



        CGContextRestoreGState(context);
    }
}

+ (void)drawWineDrinklistIconWithScaleX: (CGFloat)scaleX scaleY: (CGFloat)scaleY strokeColorName: (NSString*)strokeColorName;
{
    //// General Declarations
    CGContextRef context = UIGraphicsGetCurrentContext();


    //// Variable Declarations
    UIColor* strokeColor = [strokeColorName isEqualToString: @"myTintColor"] ? SHStyleKit.myTintColor : ([strokeColorName isEqualToString: @"myTintTransparentColor"] ? SHStyleKit.myTintTransparentColor : ([strokeColorName isEqualToString: @"myTextColor"] ? SHStyleKit.myTextColor : ([strokeColorName isEqualToString: @"myTextTransparentColor"] ? SHStyleKit.myTextTransparentColor : ([strokeColorName isEqualToString: @"myWhiteColor"] ? SHStyleKit.myWhiteColor : ([strokeColorName isEqualToString: @"myWhiteTransparentColor"] ? SHStyleKit.myWhiteTransparentColor : ([strokeColorName isEqualToString: @"myBlackColor"] ? SHStyleKit.myBlackColor : ([strokeColorName isEqualToString: @"default"] ? SHStyleKit.myWhiteColor : SHStyleKit.myClearColor)))))));

    //// Group
    {
        CGContextSaveGState(context);
        CGContextScaleCTM(context, scaleX, scaleY);



        //// Bezier Drawing
        UIBezierPath* bezierPath = UIBezierPath.bezierPath;
        [bezierPath moveToPoint: CGPointMake(678.01, 52.48)];
        [bezierPath addLineToPoint: CGPointMake(235.51, 52.48)];
        [bezierPath addCurveToPoint: CGPointMake(251.69, 197.14) controlPoint1: CGPointMake(238.6, 105.7) controlPoint2: CGPointMake(243.99, 153.93)];
        [bezierPath addLineToPoint: CGPointMake(670.83, 197.14)];
        [bezierPath addCurveToPoint: CGPointMake(678.01, 52.48) controlPoint1: CGPointMake(675.7, 153.88) controlPoint2: CGPointMake(678.1, 105.63)];
        [bezierPath closePath];
        [bezierPath moveToPoint: CGPointMake(832.71, 324.71)];
        [bezierPath addLineToPoint: CGPointMake(695.4, 324.71)];
        [bezierPath addCurveToPoint: CGPointMake(664.6, 401.94) controlPoint1: CGPointMake(686.92, 353.67) controlPoint2: CGPointMake(676.65, 379.38)];
        [bezierPath addCurveToPoint: CGPointMake(828.9, 401.94) controlPoint1: CGPointMake(711.26, 401.94) controlPoint2: CGPointMake(828.9, 401.94)];
        [bezierPath addCurveToPoint: CGPointMake(832.71, 324.71) controlPoint1: CGPointMake(831.49, 378.84) controlPoint2: CGPointMake(832.77, 353.09)];
        [bezierPath closePath];
        [bezierPath moveToPoint: CGPointMake(667.79, 221.21)];
        [bezierPath addLineToPoint: CGPointMake(256.33, 221.21)];
        [bezierPath addCurveToPoint: CGPointMake(468.61, 473.87) controlPoint1: CGPointMake(290.63, 386.43) controlPoint2: CGPointMake(361.71, 471.25)];
        [bezierPath addCurveToPoint: CGPointMake(585.51, 429.71) controlPoint1: CGPointMake(516.31, 474.86) controlPoint2: CGPointMake(554.71, 460.28)];
        [bezierPath addCurveToPoint: CGPointMake(667.79, 221.21) controlPoint1: CGPointMake(626.56, 388.84) controlPoint2: CGPointMake(654.06, 319)];
        [bezierPath closePath];
        [bezierPath moveToPoint: CGPointMake(657.31, 414.82)];
        [bezierPath addCurveToPoint: CGPointMake(620.99, 462.29) controlPoint1: CGPointMake(646.5, 432.89) controlPoint2: CGPointMake(634.39, 448.7)];
        [bezierPath addCurveToPoint: CGPointMake(721.01, 549.59) controlPoint1: CGPointMake(641.89, 519.2) controlPoint2: CGPointMake(675.34, 548.47)];
        [bezierPath addCurveToPoint: CGPointMake(783.41, 526.01) controlPoint1: CGPointMake(746.51, 550.09) controlPoint2: CGPointMake(767.01, 542.3)];
        [bezierPath addCurveToPoint: CGPointMake(827.27, 414.82) controlPoint1: CGPointMake(805.29, 504.23) controlPoint2: CGPointMake(819.96, 466.98)];
        [bezierPath addCurveToPoint: CGPointMake(657.31, 414.82) controlPoint1: CGPointMake(827.27, 414.82) controlPoint2: CGPointMake(713.05, 414.82)];
        [bezierPath closePath];
        [bezierPath moveToPoint: CGPointMake(719.61, 786.76)];
        [bezierPath addCurveToPoint: CGPointMake(686.11, 817.33) controlPoint1: CGPointMake(710.71, 798.45) controlPoint2: CGPointMake(699.61, 808.64)];
        [bezierPath addLineToPoint: CGPointMake(750.91, 817.33)];
        [bezierPath addCurveToPoint: CGPointMake(719.61, 786.76) controlPoint1: CGPointMake(737.91, 808.64) controlPoint2: CGPointMake(727.51, 798.45)];
        [bezierPath closePath];
        [bezierPath moveToPoint: CGPointMake(725.51, 4.32)];
        [bezierPath addCurveToPoint: CGPointMake(725.91, 28) controlPoint1: CGPointMake(725.51, 4.32) controlPoint2: CGPointMake(725.91, 28)];
        [bezierPath addCurveToPoint: CGPointMake(702.26, 299.04) controlPoint1: CGPointMake(727.56, 136.88) controlPoint2: CGPointMake(719.75, 226.9)];
        [bezierPath addLineToPoint: CGPointMake(858.11, 299.04)];
        [bezierPath addLineToPoint: CGPointMake(858.31, 311.72)];
        [bezierPath addCurveToPoint: CGPointMake(801.51, 544.3) controlPoint1: CGPointMake(860.11, 428.41) controlPoint2: CGPointMake(841.51, 504.44)];
        [bezierPath addCurveToPoint: CGPointMake(733.61, 574.97) controlPoint1: CGPointMake(783.11, 562.58) controlPoint2: CGPointMake(760.31, 572.87)];
        [bezierPath addLineToPoint: CGPointMake(733.61, 758.39)];
        [bezierPath addCurveToPoint: CGPointMake(795.31, 810.94) controlPoint1: CGPointMake(742.81, 781.86) controlPoint2: CGPointMake(763.01, 799.05)];
        [bezierPath addCurveToPoint: CGPointMake(805.91, 829.42) controlPoint1: CGPointMake(802.91, 813.73) controlPoint2: CGPointMake(807.31, 821.53)];
        [bezierPath addCurveToPoint: CGPointMake(789.51, 843) controlPoint1: CGPointMake(804.41, 837.31) controlPoint2: CGPointMake(797.61, 843)];
        [bezierPath addLineToPoint: CGPointMake(643.61, 843)];
        [bezierPath addCurveToPoint: CGPointMake(627.91, 829.82) controlPoint1: CGPointMake(635.81, 843) controlPoint2: CGPointMake(629.21, 837.51)];
        [bezierPath addCurveToPoint: CGPointMake(638.21, 812.03) controlPoint1: CGPointMake(626.61, 822.23) controlPoint2: CGPointMake(630.91, 814.73)];
        [bezierPath addCurveToPoint: CGPointMake(707.81, 757.59) controlPoint1: CGPointMake(672.21, 799.75) controlPoint2: CGPointMake(695.01, 781.96)];
        [bezierPath addLineToPoint: CGPointMake(707.81, 574.37)];
        [bezierPath addCurveToPoint: CGPointMake(600.47, 480.52) controlPoint1: CGPointMake(659.46, 568.77) controlPoint2: CGPointMake(623.61, 537.33)];
        [bezierPath addCurveToPoint: CGPointMake(492.21, 521.32) controlPoint1: CGPointMake(569.7, 504.37) controlPoint2: CGPointMake(533.47, 518.03)];
        [bezierPath addLineToPoint: CGPointMake(492.21, 865.08)];
        [bezierPath addCurveToPoint: CGPointMake(607.81, 963.59) controlPoint1: CGPointMake(509.51, 909.04) controlPoint2: CGPointMake(547.41, 941.31)];
        [bezierPath addCurveToPoint: CGPointMake(627.61, 998.25) controlPoint1: CGPointMake(622.01, 968.88) controlPoint2: CGPointMake(630.31, 983.47)];
        [bezierPath addCurveToPoint: CGPointMake(597.01, 1023.83) controlPoint1: CGPointMake(624.91, 1013.14) controlPoint2: CGPointMake(612.11, 1023.83)];
        [bezierPath addLineToPoint: CGPointMake(323.61, 1023.83)];
        [bezierPath addCurveToPoint: CGPointMake(294.21, 999.15) controlPoint1: CGPointMake(309.11, 1023.83) controlPoint2: CGPointMake(296.71, 1013.44)];
        [bezierPath addCurveToPoint: CGPointMake(313.51, 965.88) controlPoint1: CGPointMake(291.71, 984.87) controlPoint2: CGPointMake(299.81, 970.88)];
        [bezierPath addCurveToPoint: CGPointMake(444.01, 863.78) controlPoint1: CGPointMake(377.21, 942.91) controlPoint2: CGPointMake(419.91, 909.44)];
        [bezierPath addLineToPoint: CGPointMake(444.01, 520.42)];
        [bezierPath addCurveToPoint: CGPointMake(186.01, 29.4) controlPoint1: CGPointMake(286.11, 502.14) controlPoint2: CGPointMake(199.31, 337.2)];
        [bezierPath addLineToPoint: CGPointMake(184.91, 4.32)];
        [bezierPath addLineToPoint: CGPointMake(725.51, 4.32)];
        [bezierPath addLineToPoint: CGPointMake(725.51, 4.32)];
        [bezierPath closePath];
        [bezierPath moveToPoint: CGPointMake(466.01, 918.43)];
        [bezierPath addCurveToPoint: CGPointMake(403.21, 975.68) controlPoint1: CGPointMake(449.31, 940.41) controlPoint2: CGPointMake(428.51, 959.39)];
        [bezierPath addLineToPoint: CGPointMake(524.61, 975.68)];
        [bezierPath addCurveToPoint: CGPointMake(466.01, 918.43) controlPoint1: CGPointMake(500.31, 959.39) controlPoint2: CGPointMake(480.71, 940.31)];
        [bezierPath closePath];
        [strokeColor setFill];
        [bezierPath fill];



        CGContextRestoreGState(context);
    }
}

+ (void)drawBeerDrinklistIconWithScaleX: (CGFloat)scaleX scaleY: (CGFloat)scaleY strokeColorName: (NSString*)strokeColorName;
{
    //// General Declarations
    CGContextRef context = UIGraphicsGetCurrentContext();


    //// Variable Declarations
    UIColor* strokeColor = [strokeColorName isEqualToString: @"myTintColor"] ? SHStyleKit.myTintColor : ([strokeColorName isEqualToString: @"myTintTransparentColor"] ? SHStyleKit.myTintTransparentColor : ([strokeColorName isEqualToString: @"myTextColor"] ? SHStyleKit.myTextColor : ([strokeColorName isEqualToString: @"myTextTransparentColor"] ? SHStyleKit.myTextTransparentColor : ([strokeColorName isEqualToString: @"myWhiteColor"] ? SHStyleKit.myWhiteColor : ([strokeColorName isEqualToString: @"myWhiteTransparentColor"] ? SHStyleKit.myWhiteTransparentColor : ([strokeColorName isEqualToString: @"myBlackColor"] ? SHStyleKit.myBlackColor : ([strokeColorName isEqualToString: @"default"] ? SHStyleKit.myWhiteColor : SHStyleKit.myClearColor)))))));

    //// Group
    {
        CGContextSaveGState(context);
        CGContextScaleCTM(context, scaleX, scaleY);



        //// Bezier Drawing
        UIBezierPath* bezierPath = UIBezierPath.bezierPath;
        [bezierPath moveToPoint: CGPointMake(636.28, 42.47)];
        [bezierPath addLineToPoint: CGPointMake(211.18, 42.47)];
        [bezierPath addCurveToPoint: CGPointMake(184.41, 146.44) controlPoint1: CGPointMake(198.45, 80.89) controlPoint2: CGPointMake(189.78, 115.21)];
        [bezierPath addCurveToPoint: CGPointMake(655.5, 142.95) controlPoint1: CGPointMake(260.22, 145.88) controlPoint2: CGPointMake(565.66, 143.62)];
        [bezierPath addCurveToPoint: CGPointMake(636.28, 42.47) controlPoint1: CGPointMake(651.95, 112.64) controlPoint2: CGPointMake(645.74, 79.43)];
        [bezierPath closePath];
        [bezierPath moveToPoint: CGPointMake(521.36, 280.89)];
        [bezierPath addCurveToPoint: CGPointMake(521.36, 310.44) controlPoint1: CGPointMake(529.52, 289.05) controlPoint2: CGPointMake(529.52, 302.28)];
        [bezierPath addCurveToPoint: CGPointMake(491.8, 310.44) controlPoint1: CGPointMake(513.2, 318.61) controlPoint2: CGPointMake(499.96, 318.61)];
        [bezierPath addCurveToPoint: CGPointMake(491.8, 280.89) controlPoint1: CGPointMake(483.64, 302.28) controlPoint2: CGPointMake(483.64, 289.05)];
        [bezierPath addCurveToPoint: CGPointMake(521.36, 280.89) controlPoint1: CGPointMake(499.96, 272.73) controlPoint2: CGPointMake(513.2, 272.73)];
        [bezierPath closePath];
        [bezierPath moveToPoint: CGPointMake(847.18, 283.57)];
        [bezierPath addCurveToPoint: CGPointMake(694.69, 290.05) controlPoint1: CGPointMake(847.18, 283.57) controlPoint2: CGPointMake(703.38, 289.68)];
        [bezierPath addCurveToPoint: CGPointMake(681.84, 345.71) controlPoint1: CGPointMake(691.32, 309.47) controlPoint2: CGPointMake(686.92, 327.89)];
        [bezierPath addCurveToPoint: CGPointMake(858.9, 344.84) controlPoint1: CGPointMake(730.72, 345.47) controlPoint2: CGPointMake(822.71, 345.02)];
        [bezierPath addCurveToPoint: CGPointMake(847.18, 283.57) controlPoint1: CGPointMake(856.74, 326.36) controlPoint2: CGPointMake(852.95, 306.11)];
        [bezierPath closePath];
        [bezierPath moveToPoint: CGPointMake(777.16, 428.89)];
        [bezierPath addCurveToPoint: CGPointMake(777.16, 446.85) controlPoint1: CGPointMake(782.12, 433.85) controlPoint2: CGPointMake(782.12, 441.89)];
        [bezierPath addCurveToPoint: CGPointMake(759.2, 446.85) controlPoint1: CGPointMake(772.2, 451.81) controlPoint2: CGPointMake(764.16, 451.81)];
        [bezierPath addCurveToPoint: CGPointMake(759.2, 428.89) controlPoint1: CGPointMake(754.24, 441.89) controlPoint2: CGPointMake(754.24, 433.85)];
        [bezierPath addCurveToPoint: CGPointMake(777.16, 428.89) controlPoint1: CGPointMake(764.16, 423.93) controlPoint2: CGPointMake(772.2, 423.93)];
        [bezierPath closePath];
        [bezierPath moveToPoint: CGPointMake(467.45, 449.89)];
        [bezierPath addCurveToPoint: CGPointMake(467.45, 466.44) controlPoint1: CGPointMake(472.02, 454.46) controlPoint2: CGPointMake(472.02, 461.87)];
        [bezierPath addCurveToPoint: CGPointMake(450.91, 466.44) controlPoint1: CGPointMake(462.89, 471.01) controlPoint2: CGPointMake(455.48, 471.01)];
        [bezierPath addCurveToPoint: CGPointMake(450.91, 449.89) controlPoint1: CGPointMake(446.34, 461.87) controlPoint2: CGPointMake(446.34, 454.46)];
        [bezierPath addCurveToPoint: CGPointMake(467.45, 449.89) controlPoint1: CGPointMake(455.48, 445.32) controlPoint2: CGPointMake(462.89, 445.32)];
        [bezierPath closePath];
        [bezierPath moveToPoint: CGPointMake(744.4, 531.75)];
        [bezierPath addCurveToPoint: CGPointMake(744.4, 541.79) controlPoint1: CGPointMake(747.17, 534.52) controlPoint2: CGPointMake(747.17, 539.01)];
        [bezierPath addCurveToPoint: CGPointMake(734.36, 541.79) controlPoint1: CGPointMake(741.63, 544.56) controlPoint2: CGPointMake(737.13, 544.56)];
        [bezierPath addCurveToPoint: CGPointMake(734.36, 531.75) controlPoint1: CGPointMake(731.59, 539.01) controlPoint2: CGPointMake(731.59, 534.52)];
        [bezierPath addCurveToPoint: CGPointMake(744.4, 531.75) controlPoint1: CGPointMake(737.13, 528.97) controlPoint2: CGPointMake(741.63, 528.97)];
        [bezierPath closePath];
        [bezierPath moveToPoint: CGPointMake(529.88, 571.57)];
        [bezierPath addCurveToPoint: CGPointMake(529.88, 591.37) controlPoint1: CGPointMake(535.35, 577.03) controlPoint2: CGPointMake(535.35, 585.9)];
        [bezierPath addCurveToPoint: CGPointMake(510.08, 591.37) controlPoint1: CGPointMake(524.41, 596.83) controlPoint2: CGPointMake(515.55, 596.83)];
        [bezierPath addCurveToPoint: CGPointMake(510.08, 571.57) controlPoint1: CGPointMake(504.61, 585.9) controlPoint2: CGPointMake(504.61, 577.03)];
        [bezierPath addCurveToPoint: CGPointMake(529.88, 571.57) controlPoint1: CGPointMake(515.55, 566.1) controlPoint2: CGPointMake(524.41, 566.1)];
        [bezierPath closePath];
        [bezierPath moveToPoint: CGPointMake(782.39, 605.76)];
        [bezierPath addCurveToPoint: CGPointMake(782.39, 617.78) controlPoint1: CGPointMake(785.71, 609.07) controlPoint2: CGPointMake(785.71, 614.46)];
        [bezierPath addCurveToPoint: CGPointMake(770.37, 617.78) controlPoint1: CGPointMake(779.07, 621.1) controlPoint2: CGPointMake(773.69, 621.1)];
        [bezierPath addCurveToPoint: CGPointMake(770.37, 605.76) controlPoint1: CGPointMake(767.05, 614.46) controlPoint2: CGPointMake(767.05, 609.07)];
        [bezierPath addCurveToPoint: CGPointMake(782.39, 605.76) controlPoint1: CGPointMake(773.69, 602.44) controlPoint2: CGPointMake(779.07, 602.44)];
        [bezierPath closePath];
        [bezierPath moveToPoint: CGPointMake(757.67, 695.27)];
        [bezierPath addCurveToPoint: CGPointMake(757.67, 707.86) controlPoint1: CGPointMake(761.15, 698.75) controlPoint2: CGPointMake(761.15, 704.38)];
        [bezierPath addCurveToPoint: CGPointMake(745.09, 707.86) controlPoint1: CGPointMake(754.2, 711.33) controlPoint2: CGPointMake(748.56, 711.33)];
        [bezierPath addCurveToPoint: CGPointMake(745.09, 695.27) controlPoint1: CGPointMake(741.61, 704.38) controlPoint2: CGPointMake(741.61, 698.75)];
        [bezierPath addCurveToPoint: CGPointMake(757.67, 695.27) controlPoint1: CGPointMake(748.56, 691.8) controlPoint2: CGPointMake(754.2, 691.8)];
        [bezierPath closePath];
        [bezierPath moveToPoint: CGPointMake(489.31, 718.64)];
        [bezierPath addCurveToPoint: CGPointMake(489.31, 739.29) controlPoint1: CGPointMake(495.01, 724.34) controlPoint2: CGPointMake(495.01, 733.59)];
        [bezierPath addCurveToPoint: CGPointMake(468.66, 739.29) controlPoint1: CGPointMake(483.6, 744.99) controlPoint2: CGPointMake(474.36, 744.99)];
        [bezierPath addCurveToPoint: CGPointMake(468.66, 718.64) controlPoint1: CGPointMake(462.96, 733.59) controlPoint2: CGPointMake(462.96, 724.34)];
        [bezierPath addCurveToPoint: CGPointMake(489.31, 718.64) controlPoint1: CGPointMake(474.36, 712.94) controlPoint2: CGPointMake(483.6, 712.94)];
        [bezierPath closePath];
        [bezierPath moveToPoint: CGPointMake(860.97, 370.73)];
        [bezierPath addCurveToPoint: CGPointMake(673.89, 371.65) controlPoint1: CGPointMake(824.16, 370.91) controlPoint2: CGPointMake(720.69, 371.42)];
        [bezierPath addCurveToPoint: CGPointMake(650.08, 438.07) controlPoint1: CGPointMake(666.55, 394.14) controlPoint2: CGPointMake(658.36, 415.98)];
        [bezierPath addCurveToPoint: CGPointMake(599.33, 609) controlPoint1: CGPointMake(631.23, 488.27) controlPoint2: CGPointMake(611.33, 541.31)];
        [bezierPath addCurveToPoint: CGPointMake(632.38, 855.37) controlPoint1: CGPointMake(617.29, 667.25) controlPoint2: CGPointMake(652.72, 744.07)];
        [bezierPath addLineToPoint: CGPointMake(807.08, 855.37)];
        [bezierPath addCurveToPoint: CGPointMake(831.28, 515.27) controlPoint1: CGPointMake(772.48, 671.97) controlPoint2: CGPointMake(803.68, 588.87)];
        [bezierPath addCurveToPoint: CGPointMake(860.97, 370.73) controlPoint1: CGPointMake(848.12, 470.5) controlPoint2: CGPointMake(863.34, 429.86)];
        [bezierPath closePath];
        [bezierPath moveToPoint: CGPointMake(668.98, -0.03)];
        [bezierPath addCurveToPoint: CGPointMake(673.28, 15.67) controlPoint1: CGPointMake(668.98, -0.03) controlPoint2: CGPointMake(673.28, 15.67)];
        [bezierPath addCurveToPoint: CGPointMake(699.2, 257.67) controlPoint1: CGPointMake(700.88, 116.73) controlPoint2: CGPointMake(705.97, 193.2)];
        [bezierPath addLineToPoint: CGPointMake(866.98, 257.67)];
        [bezierPath addLineToPoint: CGPointMake(869.58, 267.17)];
        [bezierPath addCurveToPoint: CGPointMake(855.48, 524.37) controlPoint1: CGPointMake(904.28, 394.27) controlPoint2: CGPointMake(880.58, 457.37)];
        [bezierPath addCurveToPoint: CGPointMake(835.48, 865.67) controlPoint1: CGPointMake(828.38, 596.77) controlPoint2: CGPointMake(797.58, 678.77)];
        [bezierPath addLineToPoint: CGPointMake(838.58, 881.27)];
        [bezierPath addLineToPoint: CGPointMake(600.88, 881.27)];
        [bezierPath addLineToPoint: CGPointMake(603.98, 865.77)];
        [bezierPath addCurveToPoint: CGPointMake(595.09, 636.04) controlPoint1: CGPointMake(624.82, 760.87) controlPoint2: CGPointMake(609.92, 691.3)];
        [bezierPath addCurveToPoint: CGPointMake(617.18, 998.67) controlPoint1: CGPointMake(582.95, 724.71) controlPoint2: CGPointMake(584.67, 838.13)];
        [bezierPath addLineToPoint: CGPointMake(622.28, 1024.07)];
        [bezierPath addLineToPoint: CGPointMake(231.88, 1024.07)];
        [bezierPath addLineToPoint: CGPointMake(236.98, 998.67)];
        [bezierPath addCurveToPoint: CGPointMake(191.58, 451.57) controlPoint1: CGPointMake(295.48, 704.37) controlPoint2: CGPointMake(240.28, 570.07)];
        [bezierPath addCurveToPoint: CGPointMake(175.88, 14.27) controlPoint1: CGPointMake(144.78, 337.67) controlPoint2: CGPointMake(100.68, 230.17)];
        [bezierPath addLineToPoint: CGPointMake(180.88, -0.03)];
        [bezierPath addLineToPoint: CGPointMake(668.98, -0.03)];
        [bezierPath addLineToPoint: CGPointMake(668.98, -0.03)];
        [bezierPath closePath];
        [bezierPath moveToPoint: CGPointMake(658.9, 185.52)];
        [bezierPath addCurveToPoint: CGPointMake(178.94, 188.98) controlPoint1: CGPointMake(570.85, 186.16) controlPoint2: CGPointMake(244.11, 188.51)];
        [bezierPath addCurveToPoint: CGPointMake(230.98, 435.37) controlPoint1: CGPointMake(170.64, 288.49) controlPoint2: CGPointMake(198.44, 356.22)];
        [bezierPath addCurveToPoint: CGPointMake(283.48, 981.47) controlPoint1: CGPointMake(280.48, 555.97) controlPoint2: CGPointMake(336.38, 692.17)];
        [bezierPath addLineToPoint: CGPointMake(570.38, 981.47)];
        [bezierPath addCurveToPoint: CGPointMake(579.27, 510.78) controlPoint1: CGPointMake(526.67, 749.66) controlPoint2: CGPointMake(546.92, 615.4)];
        [bezierPath addCurveToPoint: CGPointMake(605.26, 436.09) controlPoint1: CGPointMake(583.96, 486.33) controlPoint2: CGPointMake(593.27, 462.52)];
        [bezierPath addCurveToPoint: CGPointMake(610.18, 422.97) controlPoint1: CGPointMake(606.9, 431.69) controlPoint2: CGPointMake(608.55, 427.32)];
        [bezierPath addCurveToPoint: CGPointMake(658.9, 185.52) controlPoint1: CGPointMake(637.77, 349.4) controlPoint2: CGPointMake(662.79, 282.68)];
        [bezierPath closePath];
        [strokeColor setFill];
        [bezierPath fill];



        CGContextRestoreGState(context);
    }
}

+ (void)drawCocktailDrinklistIconWithScaleX: (CGFloat)scaleX scaleY: (CGFloat)scaleY strokeColorName: (NSString*)strokeColorName;
{
    //// General Declarations
    CGContextRef context = UIGraphicsGetCurrentContext();


    //// Variable Declarations
    UIColor* strokeColor = [strokeColorName isEqualToString: @"myTintColor"] ? SHStyleKit.myTintColor : ([strokeColorName isEqualToString: @"myTintTransparentColor"] ? SHStyleKit.myTintTransparentColor : ([strokeColorName isEqualToString: @"myTextColor"] ? SHStyleKit.myTextColor : ([strokeColorName isEqualToString: @"myTextTransparentColor"] ? SHStyleKit.myTextTransparentColor : ([strokeColorName isEqualToString: @"myWhiteColor"] ? SHStyleKit.myWhiteColor : ([strokeColorName isEqualToString: @"myWhiteTransparentColor"] ? SHStyleKit.myWhiteTransparentColor : ([strokeColorName isEqualToString: @"myBlackColor"] ? SHStyleKit.myBlackColor : ([strokeColorName isEqualToString: @"default"] ? SHStyleKit.myWhiteColor : SHStyleKit.myClearColor)))))));

    //// Group
    {
        CGContextSaveGState(context);
        CGContextScaleCTM(context, scaleX, scaleY);



        //// Bezier Drawing
        UIBezierPath* bezierPath = UIBezierPath.bezierPath;
        [bezierPath moveToPoint: CGPointMake(830.37, 3.52)];
        [bezierPath addCurveToPoint: CGPointMake(853.37, 25.42) controlPoint1: CGPointMake(830.37, 3.52) controlPoint2: CGPointMake(853.37, 25.42)];
        [bezierPath addLineToPoint: CGPointMake(800.57, 80.62)];
        [bezierPath addCurveToPoint: CGPointMake(786.37, 134.92) controlPoint1: CGPointMake(806.67, 98.02) controlPoint2: CGPointMake(801.67, 119.52)];
        [bezierPath addCurveToPoint: CGPointMake(734.57, 149.62) controlPoint1: CGPointMake(771.67, 149.52) controlPoint2: CGPointMake(751.47, 154.42)];
        [bezierPath addLineToPoint: CGPointMake(681.57, 204.92)];
        [bezierPath addLineToPoint: CGPointMake(883.07, 204.92)];
        [bezierPath addCurveToPoint: CGPointMake(704.77, 391.02) controlPoint1: CGPointMake(883.07, 204.92) controlPoint2: CGPointMake(794.84, 297.01)];
        [bezierPath addLineToPoint: CGPointMake(811.37, 391.02)];
        [bezierPath addLineToPoint: CGPointMake(850.77, 349.82)];
        [bezierPath addCurveToPoint: CGPointMake(856.87, 316.42) controlPoint1: CGPointMake(845.17, 339.82) controlPoint2: CGPointMake(847.27, 326.02)];
        [bezierPath addCurveToPoint: CGPointMake(889.07, 309.82) controlPoint1: CGPointMake(866.07, 307.22) controlPoint2: CGPointMake(879.17, 305.02)];
        [bezierPath addLineToPoint: CGPointMake(917.17, 280.52)];
        [bezierPath addLineToPoint: CGPointMake(929.77, 292.52)];
        [bezierPath addLineToPoint: CGPointMake(900.77, 322.82)];
        [bezierPath addCurveToPoint: CGPointMake(892.97, 352.62) controlPoint1: CGPointMake(904.07, 332.42) controlPoint2: CGPointMake(901.37, 344.12)];
        [bezierPath addCurveToPoint: CGPointMake(864.57, 360.72) controlPoint1: CGPointMake(884.97, 360.62) controlPoint2: CGPointMake(873.87, 363.42)];
        [bezierPath addLineToPoint: CGPointMake(835.47, 391.02)];
        [bezierPath addLineToPoint: CGPointMake(945.97, 391.02)];
        [bezierPath addLineToPoint: CGPointMake(744.07, 601.82)];
        [bezierPath addLineToPoint: CGPointMake(744.07, 779.32)];
        [bezierPath addLineToPoint: CGPointMake(841.67, 821.62)];
        [bezierPath addCurveToPoint: CGPointMake(620.37, 821.62) controlPoint1: CGPointMake(730.47, 860.82) controlPoint2: CGPointMake(620.37, 821.62)];
        [bezierPath addLineToPoint: CGPointMake(717.97, 779.22)];
        [bezierPath addLineToPoint: CGPointMake(717.97, 601.72)];
        [bezierPath addCurveToPoint: CGPointMake(610.43, 489.49) controlPoint1: CGPointMake(717.97, 601.72) controlPoint2: CGPointMake(651.03, 531.86)];
        [bezierPath addCurveToPoint: CGPointMake(514.97, 589.12) controlPoint1: CGPointMake(555.88, 546.42) controlPoint2: CGPointMake(514.97, 589.12)];
        [bezierPath addLineToPoint: CGPointMake(514.97, 912.62)];
        [bezierPath addLineToPoint: CGPointMake(692.87, 989.82)];
        [bezierPath addCurveToPoint: CGPointMake(289.57, 989.82) controlPoint1: CGPointMake(490.17, 1061.32) controlPoint2: CGPointMake(289.57, 989.82)];
        [bezierPath addLineToPoint: CGPointMake(467.37, 912.62)];
        [bezierPath addLineToPoint: CGPointMake(467.37, 589.12)];
        [bezierPath addLineToPoint: CGPointMake(99.17, 205.02)];
        [bezierPath addLineToPoint: CGPointMake(637.47, 205.02)];
        [bezierPath addLineToPoint: CGPointMake(709.37, 129.92)];
        [bezierPath addCurveToPoint: CGPointMake(720.47, 69.02) controlPoint1: CGPointMake(699.17, 111.62) controlPoint2: CGPointMake(703.07, 86.52)];
        [bezierPath addCurveToPoint: CGPointMake(779.17, 57.02) controlPoint1: CGPointMake(737.27, 52.22) controlPoint2: CGPointMake(761.07, 48.22)];
        [bezierPath addLineToPoint: CGPointMake(830.37, 3.52)];
        [bezierPath addLineToPoint: CGPointMake(830.37, 3.52)];
        [bezierPath closePath];
        [bezierPath moveToPoint: CGPointMake(729.07, 302.02)];
        [bezierPath addLineToPoint: CGPointMake(588.37, 302.02)];
        [bezierPath addLineToPoint: CGPointMake(488.47, 406.32)];
        [bezierPath addLineToPoint: CGPointMake(465.57, 384.42)];
        [bezierPath addLineToPoint: CGPointMake(544.37, 302.12)];
        [bezierPath addLineToPoint: CGPointMake(253.27, 302.12)];
        [bezierPath addLineToPoint: CGPointMake(491.07, 550.32)];
        [bezierPath addCurveToPoint: CGPointMake(565.44, 472.73) controlPoint1: CGPointMake(491.07, 550.32) controlPoint2: CGPointMake(524.04, 515.92)];
        [bezierPath addCurveToPoint: CGPointMake(729.07, 302.02) controlPoint1: CGPointMake(635.27, 399.88) controlPoint2: CGPointMake(729.07, 302.02)];
        [bezierPath closePath];
        [bezierPath moveToPoint: CGPointMake(861.57, 444.32)];
        [bezierPath addLineToPoint: CGPointMake(784.37, 444.32)];
        [bezierPath addLineToPoint: CGPointMake(729.57, 501.52)];
        [bezierPath addLineToPoint: CGPointMake(716.97, 489.52)];
        [bezierPath addLineToPoint: CGPointMake(760.17, 444.32)];
        [bezierPath addLineToPoint: CGPointMake(653.71, 444.32)];
        [bezierPath addCurveToPoint: CGPointMake(627.08, 472.11) controlPoint1: CGPointMake(644.64, 453.78) controlPoint2: CGPointMake(635.74, 463.07)];
        [bezierPath addCurveToPoint: CGPointMake(730.97, 580.62) controlPoint1: CGPointMake(665.24, 511.97) controlPoint2: CGPointMake(730.97, 580.62)];
        [bezierPath addCurveToPoint: CGPointMake(771.69, 538.12) controlPoint1: CGPointMake(730.97, 580.62) controlPoint2: CGPointMake(749.02, 561.79)];
        [bezierPath addCurveToPoint: CGPointMake(861.57, 444.32) controlPoint1: CGPointMake(810.02, 498.12) controlPoint2: CGPointMake(861.57, 444.32)];
        [bezierPath closePath];
        [strokeColor setFill];
        [bezierPath fill];


        //// Rectangle Drawing



        CGContextRestoreGState(context);
    }
}

+ (void)drawFillerUpIconWithYPos: (CGFloat)yPos;
{
    //// General Declarations
    CGContextRef context = UIGraphicsGetCurrentContext();

    //// Group 2
    {
        //// Glass Outline Drawing
        UIBezierPath* glassOutlinePath = UIBezierPath.bezierPath;
        [glassOutlinePath moveToPoint: CGPointMake(691.57, 1020.26)];
        [glassOutlinePath addLineToPoint: CGPointMake(302.57, 1020.26)];
        [glassOutlinePath addLineToPoint: CGPointMake(307.67, 994.96)];
        [glassOutlinePath addCurveToPoint: CGPointMake(262.37, 449.76) controlPoint1: CGPointMake(365.87, 701.76) controlPoint2: CGPointMake(310.87, 567.86)];
        [glassOutlinePath addCurveToPoint: CGPointMake(246.67, 13.96) controlPoint1: CGPointMake(215.77, 336.26) controlPoint2: CGPointMake(171.77, 229.16)];
        [glassOutlinePath addLineToPoint: CGPointMake(251.67, -0.24)];
        [glassOutlinePath addLineToPoint: CGPointMake(738.07, -0.24)];
        [glassOutlinePath addLineToPoint: CGPointMake(742.37, 15.36)];
        [glassOutlinePath addCurveToPoint: CGPointMake(719.27, 436.26) controlPoint1: CGPointMake(799.17, 223.26) controlPoint2: CGPointMake(760.37, 326.76)];
        [glassOutlinePath addCurveToPoint: CGPointMake(686.47, 994.86) controlPoint1: CGPointMake(674.87, 554.66) controlPoint2: CGPointMake(624.47, 688.86)];
        [glassOutlinePath addLineToPoint: CGPointMake(691.57, 1020.26)];
        [glassOutlinePath closePath];
        [glassOutlinePath moveToPoint: CGPointMake(353.97, 977.86)];
        [glassOutlinePath addLineToPoint: CGPointMake(639.87, 977.86)];
        [glassOutlinePath addCurveToPoint: CGPointMake(679.47, 421.36) controlPoint1: CGPointMake(583.27, 677.76) controlPoint2: CGPointMake(634.37, 541.76)];
        [glassOutlinePath addCurveToPoint: CGPointMake(705.47, 42.16) controlPoint1: CGPointMake(718.67, 316.96) controlPoint2: CGPointMake(752.67, 226.36)];
        [glassOutlinePath addLineToPoint: CGPointMake(281.87, 42.16)];
        [glassOutlinePath addCurveToPoint: CGPointMake(301.57, 433.66) controlPoint1: CGPointMake(218.87, 232.26) controlPoint2: CGPointMake(255.47, 321.46)];
        [glassOutlinePath addCurveToPoint: CGPointMake(353.97, 977.86) controlPoint1: CGPointMake(350.87, 553.86) controlPoint2: CGPointMake(406.67, 689.56)];
        [glassOutlinePath closePath];
        glassOutlinePath.miterLimit = 4;

        [UIColor.redColor setFill];
        [glassOutlinePath fill];


        //// Group
        {
            CGContextSaveGState(context);
            CGContextBeginTransparencyLayer(context, NULL);

            //// Clip Filled Bezier
            UIBezierPath* filledBezierPath = UIBezierPath.bezierPath;
            [filledBezierPath moveToPoint: CGPointMake(737.68, 0)];
            [filledBezierPath addCurveToPoint: CGPointMake(741.98, 15.6) controlPoint1: CGPointMake(737.68, 0) controlPoint2: CGPointMake(741.98, 15.6)];
            [filledBezierPath addCurveToPoint: CGPointMake(718.88, 436.5) controlPoint1: CGPointMake(798.78, 223.5) controlPoint2: CGPointMake(759.98, 327)];
            [filledBezierPath addCurveToPoint: CGPointMake(686.08, 995.1) controlPoint1: CGPointMake(674.48, 554.9) controlPoint2: CGPointMake(624.08, 689.1)];
            [filledBezierPath addLineToPoint: CGPointMake(691.18, 1020.5)];
            [filledBezierPath addLineToPoint: CGPointMake(302.18, 1020.5)];
            [filledBezierPath addLineToPoint: CGPointMake(307.28, 995.2)];
            [filledBezierPath addCurveToPoint: CGPointMake(261.98, 450) controlPoint1: CGPointMake(365.48, 702) controlPoint2: CGPointMake(310.48, 568.1)];
            [filledBezierPath addCurveToPoint: CGPointMake(246.28, 14.2) controlPoint1: CGPointMake(215.38, 336.5) controlPoint2: CGPointMake(171.38, 229.4)];
            [filledBezierPath addLineToPoint: CGPointMake(251.28, 0)];
            [filledBezierPath addLineToPoint: CGPointMake(737.68, 0)];
            [filledBezierPath addLineToPoint: CGPointMake(737.68, 0)];
            [filledBezierPath closePath];
            [filledBezierPath addClip];


            //// Rectangle Drawing
            UIBezierPath* rectanglePath = [UIBezierPath bezierPathWithRect: CGRectMake(0, yPos, 1024, 1024)];
            [SHStyleKit.myTintTransparentColor setFill];
            [rectanglePath fill];


            CGContextEndTransparencyLayer(context);
            CGContextRestoreGState(context);
        }
    }
}

+ (void)drawDeleteIconWithScaleX: (CGFloat)scaleX scaleY: (CGFloat)scaleY strokeColorName: (NSString*)strokeColorName;
{
    //// General Declarations
    CGContextRef context = UIGraphicsGetCurrentContext();


    //// Variable Declarations
    UIColor* strokeColor = [strokeColorName isEqualToString: @"myTintColor"] ? SHStyleKit.myTintColor : ([strokeColorName isEqualToString: @"myTintTransparentColor"] ? SHStyleKit.myTintTransparentColor : ([strokeColorName isEqualToString: @"myTextColor"] ? SHStyleKit.myTextColor : ([strokeColorName isEqualToString: @"myTextTransparentColor"] ? SHStyleKit.myTextTransparentColor : ([strokeColorName isEqualToString: @"myWhiteColor"] ? SHStyleKit.myWhiteColor : ([strokeColorName isEqualToString: @"myWhiteTransparentColor"] ? SHStyleKit.myWhiteTransparentColor : ([strokeColorName isEqualToString: @"myBlackColor"] ? SHStyleKit.myBlackColor : ([strokeColorName isEqualToString: @"default"] ? SHStyleKit.myWhiteColor : SHStyleKit.myClearColor)))))));

    //// Group
    {
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 1, 1);
        CGContextScaleCTM(context, scaleX, scaleY);



        //// Bezier Drawing
        UIBezierPath* bezierPath = UIBezierPath.bezierPath;
        [bezierPath moveToPoint: CGPointMake(795.24, 206.1)];
        [bezierPath addLineToPoint: CGPointMake(812.76, 223.68)];
        [bezierPath addCurveToPoint: CGPointMake(533.62, 503.75) controlPoint1: CGPointMake(812.76, 223.68) controlPoint2: CGPointMake(674.59, 362.31)];
        [bezierPath addCurveToPoint: CGPointMake(812.72, 783.77) controlPoint1: CGPointMake(674.57, 645.17) controlPoint2: CGPointMake(812.72, 783.77)];
        [bezierPath addLineToPoint: CGPointMake(795.19, 801.36)];
        [bezierPath addCurveToPoint: CGPointMake(516.1, 521.34) controlPoint1: CGPointMake(795.19, 801.36) controlPoint2: CGPointMake(657.05, 662.76)];
        [bezierPath addCurveToPoint: CGPointMake(237, 801.36) controlPoint1: CGPointMake(375.14, 662.75) controlPoint2: CGPointMake(237, 801.36)];
        [bezierPath addLineToPoint: CGPointMake(219.48, 783.77)];
        [bezierPath addCurveToPoint: CGPointMake(498.57, 503.76) controlPoint1: CGPointMake(219.48, 783.77) controlPoint2: CGPointMake(357.62, 645.18)];
        [bezierPath addCurveToPoint: CGPointMake(219.43, 223.68) controlPoint1: CGPointMake(357.6, 362.31) controlPoint2: CGPointMake(219.43, 223.68)];
        [bezierPath addLineToPoint: CGPointMake(236.95, 206.1)];
        [bezierPath addCurveToPoint: CGPointMake(516.09, 486.17) controlPoint1: CGPointMake(236.95, 206.1) controlPoint2: CGPointMake(375.12, 344.73)];
        [bezierPath addCurveToPoint: CGPointMake(795.24, 206.1) controlPoint1: CGPointMake(657.07, 344.73) controlPoint2: CGPointMake(795.24, 206.1)];
        [bezierPath addLineToPoint: CGPointMake(795.24, 206.1)];
        [bezierPath closePath];
        [strokeColor setFill];
        [bezierPath fill];



        CGContextRestoreGState(context);
    }
}

+ (void)drawDefaultAvatarIconWithScaleX: (CGFloat)scaleX scaleY: (CGFloat)scaleY strokeColorName: (NSString*)strokeColorName;
{
    //// General Declarations
    CGContextRef context = UIGraphicsGetCurrentContext();


    //// Variable Declarations
    UIColor* strokeColor = [strokeColorName isEqualToString: @"myTintColor"] ? SHStyleKit.myTintColor : ([strokeColorName isEqualToString: @"myTintTransparentColor"] ? SHStyleKit.myTintTransparentColor : ([strokeColorName isEqualToString: @"myTextColor"] ? SHStyleKit.myTextColor : ([strokeColorName isEqualToString: @"myTextTransparentColor"] ? SHStyleKit.myTextTransparentColor : ([strokeColorName isEqualToString: @"myWhiteColor"] ? SHStyleKit.myWhiteColor : ([strokeColorName isEqualToString: @"myWhiteTransparentColor"] ? SHStyleKit.myWhiteTransparentColor : ([strokeColorName isEqualToString: @"myBlackColor"] ? SHStyleKit.myBlackColor : ([strokeColorName isEqualToString: @"default"] ? SHStyleKit.myWhiteColor : SHStyleKit.myClearColor)))))));

    //// Main Group
    {
        CGContextSaveGState(context);
        CGContextScaleCTM(context, scaleX, scaleY);



        //// Circle Bezier Drawing
        UIBezierPath* circleBezierPath = UIBezierPath.bezierPath;
        [circleBezierPath moveToPoint: CGPointMake(512.17, 9.65)];
        [circleBezierPath addCurveToPoint: CGPointMake(1014.35, 511.84) controlPoint1: CGPointMake(789.52, 9.65) controlPoint2: CGPointMake(1014.35, 234.49)];
        [circleBezierPath addCurveToPoint: CGPointMake(512.17, 1014.03) controlPoint1: CGPointMake(1014.35, 789.19) controlPoint2: CGPointMake(789.52, 1014.03)];
        [circleBezierPath addCurveToPoint: CGPointMake(9.98, 511.84) controlPoint1: CGPointMake(234.82, 1014.03) controlPoint2: CGPointMake(9.98, 789.19)];
        [circleBezierPath addCurveToPoint: CGPointMake(512.17, 9.65) controlPoint1: CGPointMake(9.98, 234.49) controlPoint2: CGPointMake(234.82, 9.65)];
        [circleBezierPath closePath];
        [circleBezierPath moveToPoint: CGPointMake(512.17, 0.11)];
        [circleBezierPath addCurveToPoint: CGPointMake(312.98, 40.33) controlPoint1: CGPointMake(443.09, 0.11) controlPoint2: CGPointMake(376.07, 13.64)];
        [circleBezierPath addCurveToPoint: CGPointMake(150.32, 149.99) controlPoint1: CGPointMake(252.04, 66.1) controlPoint2: CGPointMake(197.31, 103)];
        [circleBezierPath addCurveToPoint: CGPointMake(40.66, 312.65) controlPoint1: CGPointMake(103.33, 196.99) controlPoint2: CGPointMake(66.43, 251.71)];
        [circleBezierPath addCurveToPoint: CGPointMake(0.44, 511.84) controlPoint1: CGPointMake(13.97, 375.74) controlPoint2: CGPointMake(0.44, 442.76)];
        [circleBezierPath addCurveToPoint: CGPointMake(40.66, 711.03) controlPoint1: CGPointMake(0.44, 580.92) controlPoint2: CGPointMake(13.97, 647.94)];
        [circleBezierPath addCurveToPoint: CGPointMake(150.32, 873.69) controlPoint1: CGPointMake(66.43, 771.97) controlPoint2: CGPointMake(103.33, 826.69)];
        [circleBezierPath addCurveToPoint: CGPointMake(312.98, 983.35) controlPoint1: CGPointMake(197.31, 920.68) controlPoint2: CGPointMake(252.04, 957.58)];
        [circleBezierPath addCurveToPoint: CGPointMake(512.17, 1023.57) controlPoint1: CGPointMake(376.07, 1010.04) controlPoint2: CGPointMake(443.09, 1023.57)];
        [circleBezierPath addCurveToPoint: CGPointMake(711.36, 983.35) controlPoint1: CGPointMake(581.25, 1023.57) controlPoint2: CGPointMake(648.26, 1010.04)];
        [circleBezierPath addCurveToPoint: CGPointMake(874.02, 873.69) controlPoint1: CGPointMake(772.3, 957.58) controlPoint2: CGPointMake(827.02, 920.68)];
        [circleBezierPath addCurveToPoint: CGPointMake(983.68, 711.03) controlPoint1: CGPointMake(921.01, 826.69) controlPoint2: CGPointMake(957.91, 771.97)];
        [circleBezierPath addCurveToPoint: CGPointMake(1023.9, 511.84) controlPoint1: CGPointMake(1010.37, 647.94) controlPoint2: CGPointMake(1023.9, 580.92)];
        [circleBezierPath addCurveToPoint: CGPointMake(983.68, 312.65) controlPoint1: CGPointMake(1023.9, 442.76) controlPoint2: CGPointMake(1010.37, 375.74)];
        [circleBezierPath addCurveToPoint: CGPointMake(874.02, 149.99) controlPoint1: CGPointMake(957.91, 251.71) controlPoint2: CGPointMake(921.01, 196.99)];
        [circleBezierPath addCurveToPoint: CGPointMake(711.36, 40.33) controlPoint1: CGPointMake(827.02, 103) controlPoint2: CGPointMake(772.3, 66.1)];
        [circleBezierPath addCurveToPoint: CGPointMake(512.17, 0.11) controlPoint1: CGPointMake(648.26, 13.64) controlPoint2: CGPointMake(581.25, 0.11)];
        [circleBezierPath addLineToPoint: CGPointMake(512.17, 0.11)];
        [circleBezierPath closePath];
        circleBezierPath.miterLimit = 4;

        [strokeColor setFill];
        [circleBezierPath fill];


        //// Clipped Group
        {
            CGContextSaveGState(context);
            CGContextBeginTransparencyLayer(context, NULL);

            //// Clip Circle Mask Bezier
            UIBezierPath* circleMaskBezierPath = UIBezierPath.bezierPath;
            [circleMaskBezierPath moveToPoint: CGPointMake(867.14, 156.87)];
            [circleMaskBezierPath addCurveToPoint: CGPointMake(867.14, 866.81) controlPoint1: CGPointMake(1063.18, 352.92) controlPoint2: CGPointMake(1063.18, 670.76)];
            [circleMaskBezierPath addCurveToPoint: CGPointMake(157.2, 866.81) controlPoint1: CGPointMake(671.09, 1062.85) controlPoint2: CGPointMake(353.24, 1062.85)];
            [circleMaskBezierPath addCurveToPoint: CGPointMake(157.2, 156.87) controlPoint1: CGPointMake(-38.84, 670.76) controlPoint2: CGPointMake(-38.84, 352.92)];
            [circleMaskBezierPath addCurveToPoint: CGPointMake(867.14, 156.87) controlPoint1: CGPointMake(353.24, -39.17) controlPoint2: CGPointMake(671.09, -39.17)];
            [circleMaskBezierPath closePath];
            [circleMaskBezierPath addClip];


            //// Bezier 3 Drawing
            UIBezierPath* bezier3Path = UIBezierPath.bezierPath;
            [bezier3Path moveToPoint: CGPointMake(509.85, 1040.44)];
            [bezier3Path addCurveToPoint: CGPointMake(819.77, 1040.44) controlPoint1: CGPointMake(613.16, 1040.44) controlPoint2: CGPointMake(716.47, 1040.46)];
            [bezier3Path addCurveToPoint: CGPointMake(923.43, 863.02) controlPoint1: CGPointMake(904.04, 1040.42) controlPoint2: CGPointMake(958.38, 947.54)];
            [bezier3Path addCurveToPoint: CGPointMake(857.06, 778.78) controlPoint1: CGPointMake(908.9, 827.89) controlPoint2: CGPointMake(884.34, 801.82)];
            [bezier3Path addCurveToPoint: CGPointMake(659.27, 670.89) controlPoint1: CGPointMake(797.67, 728.62) controlPoint2: CGPointMake(730.45, 695.27)];
            [bezier3Path addCurveToPoint: CGPointMake(640.32, 600.73) controlPoint1: CGPointMake(621.26, 657.87) controlPoint2: CGPointMake(614.54, 633.18)];
            [bezier3Path addCurveToPoint: CGPointMake(705.65, 320.83) controlPoint1: CGPointMake(704.91, 519.44) controlPoint2: CGPointMake(730.09, 426.49)];
            [bezier3Path addCurveToPoint: CGPointMake(496.75, 153.71) controlPoint1: CGPointMake(679.81, 209.1) controlPoint2: CGPointMake(602.65, 148.4)];
            [bezier3Path addCurveToPoint: CGPointMake(309.79, 340.73) controlPoint1: CGPointMake(399.26, 158.6) controlPoint2: CGPointMake(326.9, 231.05)];
            [bezier3Path addCurveToPoint: CGPointMake(370.79, 589.41) controlPoint1: CGPointMake(295.26, 433.9) controlPoint2: CGPointMake(316.76, 516.43)];
            [bezier3Path addCurveToPoint: CGPointMake(383.21, 605.17) controlPoint1: CGPointMake(374.78, 594.8) controlPoint2: CGPointMake(379.1, 599.89)];
            [bezier3Path addCurveToPoint: CGPointMake(366.11, 669.11) controlPoint1: CGPointMake(403.55, 631.29) controlPoint2: CGPointMake(396.45, 659.07)];
            [bezier3Path addCurveToPoint: CGPointMake(189.03, 758.07) controlPoint1: CGPointMake(303.32, 689.89) controlPoint2: CGPointMake(243.78, 718.29)];
            [bezier3Path addCurveToPoint: CGPointMake(103.51, 848.26) controlPoint1: CGPointMake(155.55, 782.39) controlPoint2: CGPointMake(124.56, 809.89)];
            [bezier3Path addCurveToPoint: CGPointMake(171.76, 1037.42) controlPoint1: CGPointMake(62.56, 922.87) controlPoint2: CGPointMake(96.02, 1015.57)];
            [bezier3Path addCurveToPoint: CGPointMake(196.12, 1040.32) controlPoint1: CGPointMake(179.57, 1039.68) controlPoint2: CGPointMake(187.98, 1040.31)];
            [bezier3Path addCurveToPoint: CGPointMake(509.85, 1040.44) controlPoint1: CGPointMake(300.7, 1040.51) controlPoint2: CGPointMake(405.27, 1040.44)];
            [bezier3Path closePath];
            bezier3Path.miterLimit = 4;

            [strokeColor setFill];
            [bezier3Path fill];


            CGContextEndTransparencyLayer(context);
            CGContextRestoreGState(context);
        }



        CGContextRestoreGState(context);
    }
}

+ (void)drawCloseIconWithScaleX: (CGFloat)scaleX scaleY: (CGFloat)scaleY fillColorName: (NSString*)fillColorName;
{
    //// General Declarations
    CGContextRef context = UIGraphicsGetCurrentContext();


    //// Variable Declarations
    UIColor* fillColor = [fillColorName isEqualToString: @"myTintColor"] ? SHStyleKit.myTintColor : ([fillColorName isEqualToString: @"myTintTransparentColor"] ? SHStyleKit.myTintTransparentColor : ([fillColorName isEqualToString: @"myTextTransparentColor"] ? SHStyleKit.myTextTransparentColor : ([fillColorName isEqualToString: @"myTextColor"] ? SHStyleKit.myTextColor : ([fillColorName isEqualToString: @"myWhiteColor"] ? SHStyleKit.myWhiteColor : ([fillColorName isEqualToString: @"myWhiteTransparentColor"] ? SHStyleKit.myWhiteTransparentColor : ([fillColorName isEqualToString: @"myBlackColor"] ? SHStyleKit.myBlackColor : ([fillColorName isEqualToString: @"default"] ? SHStyleKit.myWhiteColor : SHStyleKit.myClearColor)))))));

    //// Group
    {
        CGContextSaveGState(context);
        CGContextScaleCTM(context, scaleX, scaleY);



        //// Bezier Drawing
        UIBezierPath* bezierPath = UIBezierPath.bezierPath;
        [bezierPath moveToPoint: CGPointMake(733.25, 257.12)];
        [bezierPath addCurveToPoint: CGPointMake(511.75, 478.62) controlPoint1: CGPointMake(733.25, 257.12) controlPoint2: CGPointMake(625, 365.37)];
        [bezierPath addCurveToPoint: CGPointMake(290.25, 257.12) controlPoint1: CGPointMake(398.5, 365.37) controlPoint2: CGPointMake(290.25, 257.12)];
        [bezierPath addLineToPoint: CGPointMake(257.37, 290)];
        [bezierPath addCurveToPoint: CGPointMake(478.87, 511.5) controlPoint1: CGPointMake(257.37, 290) controlPoint2: CGPointMake(365.62, 398.25)];
        [bezierPath addCurveToPoint: CGPointMake(257.37, 733) controlPoint1: CGPointMake(365.62, 624.75) controlPoint2: CGPointMake(257.37, 733)];
        [bezierPath addLineToPoint: CGPointMake(290.25, 765.88)];
        [bezierPath addCurveToPoint: CGPointMake(511.75, 544.38) controlPoint1: CGPointMake(290.25, 765.88) controlPoint2: CGPointMake(398.5, 657.63)];
        [bezierPath addCurveToPoint: CGPointMake(733.25, 765.88) controlPoint1: CGPointMake(625, 657.63) controlPoint2: CGPointMake(733.25, 765.88)];
        [bezierPath addLineToPoint: CGPointMake(766.13, 733)];
        [bezierPath addCurveToPoint: CGPointMake(544.63, 511.5) controlPoint1: CGPointMake(766.13, 733) controlPoint2: CGPointMake(657.88, 624.75)];
        [bezierPath addCurveToPoint: CGPointMake(766.13, 290) controlPoint1: CGPointMake(657.88, 398.25) controlPoint2: CGPointMake(766.13, 290)];
        [bezierPath addCurveToPoint: CGPointMake(733.25, 257.12) controlPoint1: CGPointMake(766.13, 290) controlPoint2: CGPointMake(733.25, 257.12)];
        [bezierPath addLineToPoint: CGPointMake(733.25, 257.12)];
        [bezierPath closePath];
        [bezierPath moveToPoint: CGPointMake(871.21, 152.79)];
        [bezierPath addCurveToPoint: CGPointMake(871.21, 871.21) controlPoint1: CGPointMake(1069.6, 351.18) controlPoint2: CGPointMake(1069.6, 672.82)];
        [bezierPath addCurveToPoint: CGPointMake(152.79, 871.21) controlPoint1: CGPointMake(672.82, 1069.6) controlPoint2: CGPointMake(351.18, 1069.6)];
        [bezierPath addCurveToPoint: CGPointMake(152.79, 152.79) controlPoint1: CGPointMake(-45.6, 672.82) controlPoint2: CGPointMake(-45.6, 351.18)];
        [bezierPath addCurveToPoint: CGPointMake(871.21, 152.79) controlPoint1: CGPointMake(351.18, -45.6) controlPoint2: CGPointMake(672.82, -45.6)];
        [bezierPath closePath];
        [fillColor setFill];
        [bezierPath fill];



        CGContextRestoreGState(context);
    }
}

+ (void)drawTapIconWithScaleX: (CGFloat)scaleX scaleY: (CGFloat)scaleY strokeColorName: (NSString*)strokeColorName;
{
    //// General Declarations
    CGContextRef context = UIGraphicsGetCurrentContext();


    //// Variable Declarations
    UIColor* strokeColor = [strokeColorName isEqualToString: @"myTintColor"] ? SHStyleKit.myTintColor : ([strokeColorName isEqualToString: @"myTintTransparentColor"] ? SHStyleKit.myTintTransparentColor : ([strokeColorName isEqualToString: @"myTextColor"] ? SHStyleKit.myTextColor : ([strokeColorName isEqualToString: @"myTextTransparentColor"] ? SHStyleKit.myTextTransparentColor : ([strokeColorName isEqualToString: @"myWhiteColor"] ? SHStyleKit.myWhiteColor : ([strokeColorName isEqualToString: @"myWhiteTransparentColor"] ? SHStyleKit.myWhiteTransparentColor : ([strokeColorName isEqualToString: @"myBlackColor"] ? SHStyleKit.myBlackColor : ([strokeColorName isEqualToString: @"default"] ? SHStyleKit.myWhiteColor : SHStyleKit.myClearColor)))))));

    //// Group
    {
        CGContextSaveGState(context);
        CGContextScaleCTM(context, scaleX, scaleY);



        //// Bezier Drawing
        UIBezierPath* bezierPath = UIBezierPath.bezierPath;
        [bezierPath moveToPoint: CGPointMake(770.85, 416.34)];
        [bezierPath addCurveToPoint: CGPointMake(705.86, 419.9) controlPoint1: CGPointMake(752.17, 417.37) controlPoint2: CGPointMake(728.49, 418.66)];
        [bezierPath addCurveToPoint: CGPointMake(665.29, 423.4) controlPoint1: CGPointMake(684.11, 421.78) controlPoint2: CGPointMake(665.29, 423.4)];
        [bezierPath addLineToPoint: CGPointMake(678.59, 519.9)];
        [bezierPath addCurveToPoint: CGPointMake(680.51, 519.79) controlPoint1: CGPointMake(678.59, 519.9) controlPoint2: CGPointMake(679.27, 519.86)];
        [bezierPath addCurveToPoint: CGPointMake(768.89, 514.9) controlPoint1: CGPointMake(693.58, 519.07) controlPoint2: CGPointMake(768.89, 514.9)];
        [bezierPath addCurveToPoint: CGPointMake(770.84, 416.8) controlPoint1: CGPointMake(768.89, 514.9) controlPoint2: CGPointMake(770.53, 432.33)];
        [bezierPath addCurveToPoint: CGPointMake(770.85, 416.34) controlPoint1: CGPointMake(770.84, 416.64) controlPoint2: CGPointMake(770.85, 416.49)];
        [bezierPath closePath];
        [bezierPath moveToPoint: CGPointMake(771.29, 553)];
        [bezierPath addCurveToPoint: CGPointMake(734.39, 555.05) controlPoint1: CGPointMake(771.29, 553) controlPoint2: CGPointMake(753.79, 553.97)];
        [bezierPath addCurveToPoint: CGPointMake(683.19, 557.9) controlPoint1: CGPointMake(710.26, 556.39) controlPoint2: CGPointMake(683.19, 557.9)];
        [bezierPath addLineToPoint: CGPointMake(683.59, 564.3)];
        [bezierPath addCurveToPoint: CGPointMake(720.8, 562.23) controlPoint1: CGPointMake(683.59, 564.3) controlPoint2: CGPointMake(701.28, 563.31)];
        [bezierPath addCurveToPoint: CGPointMake(771.59, 559.4) controlPoint1: CGPointMake(744.81, 560.89) controlPoint2: CGPointMake(771.59, 559.4)];
        [bezierPath addLineToPoint: CGPointMake(771.29, 553)];
        [bezierPath closePath];
        [bezierPath moveToPoint: CGPointMake(771.39, 597.6)];
        [bezierPath addLineToPoint: CGPointMake(683.29, 597.6)];
        [bezierPath addLineToPoint: CGPointMake(683.29, 604)];
        [bezierPath addLineToPoint: CGPointMake(771.39, 604)];
        [bezierPath addLineToPoint: CGPointMake(771.39, 597.6)];
        [bezierPath closePath];
        [bezierPath moveToPoint: CGPointMake(811.49, 71.9)];
        [bezierPath addCurveToPoint: CGPointMake(809.19, 386.3) controlPoint1: CGPointMake(834.69, 139.9) controlPoint2: CGPointMake(822.29, 259.6)];
        [bezierPath addLineToPoint: CGPointMake(806.29, 414.4)];
        [bezierPath addCurveToPoint: CGPointMake(802.59, 414.6) controlPoint1: CGPointMake(806.29, 414.4) controlPoint2: CGPointMake(804.98, 414.47)];
        [bezierPath addCurveToPoint: CGPointMake(800.48, 519.93) controlPoint1: CGPointMake(801.96, 446.17) controlPoint2: CGPointMake(801.04, 491.94)];
        [bezierPath addCurveToPoint: CGPointMake(800.99, 519.9) controlPoint1: CGPointMake(800.82, 519.91) controlPoint2: CGPointMake(800.99, 519.9)];
        [bezierPath addLineToPoint: CGPointMake(804.79, 589.3)];
        [bezierPath addCurveToPoint: CGPointMake(802.99, 589.4) controlPoint1: CGPointMake(804.79, 589.3) controlPoint2: CGPointMake(804.16, 589.33)];
        [bezierPath addCurveToPoint: CGPointMake(802.99, 612.5) controlPoint1: CGPointMake(802.99, 591.66) controlPoint2: CGPointMake(802.99, 612.5)];
        [bezierPath addCurveToPoint: CGPointMake(801, 621.76) controlPoint1: CGPointMake(802.96, 615.79) controlPoint2: CGPointMake(802.25, 618.92)];
        [bezierPath addCurveToPoint: CGPointMake(801.19, 622) controlPoint1: CGPointMake(801.06, 621.84) controlPoint2: CGPointMake(801.12, 621.92)];
        [bezierPath addLineToPoint: CGPointMake(910.19, 621.1)];
        [bezierPath addCurveToPoint: CGPointMake(942.89, 653.6) controlPoint1: CGPointMake(928.29, 621.1) controlPoint2: CGPointMake(942.89, 635.7)];
        [bezierPath addLineToPoint: CGPointMake(942.89, 773)];
        [bezierPath addCurveToPoint: CGPointMake(910.49, 805.5) controlPoint1: CGPointMake(942.89, 790.9) controlPoint2: CGPointMake(928.29, 805.5)];
        [bezierPath addCurveToPoint: CGPointMake(754.59, 802.5) controlPoint1: CGPointMake(858.89, 804.7) controlPoint2: CGPointMake(806.79, 803.6)];
        [bezierPath addLineToPoint: CGPointMake(724.39, 801.8)];
        [bezierPath addCurveToPoint: CGPointMake(749.59, 909.4) controlPoint1: CGPointMake(729.29, 826.4) controlPoint2: CGPointMake(741.09, 874.7)];
        [bezierPath addCurveToPoint: CGPointMake(767.79, 1017.3) controlPoint1: CGPointMake(773.99, 1009.4) controlPoint2: CGPointMake(773.99, 1009.4)];
        [bezierPath addLineToPoint: CGPointMake(763.09, 1023.3)];
        [bezierPath addLineToPoint: CGPointMake(748.49, 1023.4)];
        [bezierPath addLineToPoint: CGPointMake(748.19, 1023.1)];
        [bezierPath addCurveToPoint: CGPointMake(689.69, 1023.2) controlPoint1: CGPointMake(733.29, 1022.9) controlPoint2: CGPointMake(711.39, 1023.1)];
        [bezierPath addCurveToPoint: CGPointMake(630.59, 1023.2) controlPoint1: CGPointMake(666.49, 1023.3) controlPoint2: CGPointMake(643.69, 1023.5)];
        [bezierPath addCurveToPoint: CGPointMake(569.79, 904.7) controlPoint1: CGPointMake(610.49, 1022.9) controlPoint2: CGPointMake(600.59, 998.9)];
        [bezierPath addCurveToPoint: CGPointMake(529.59, 798.8) controlPoint1: CGPointMake(557.59, 867.3) controlPoint2: CGPointMake(539.49, 811.8)];
        [bezierPath addLineToPoint: CGPointMake(508.69, 798.8)];
        [bezierPath addCurveToPoint: CGPointMake(131.09, 830.6) controlPoint1: CGPointMake(378.99, 798.8) controlPoint2: CGPointMake(218.89, 802.4)];
        [bezierPath addCurveToPoint: CGPointMake(106.99, 824.8) controlPoint1: CGPointMake(122.59, 833.3) controlPoint2: CGPointMake(113.29, 831)];
        [bezierPath addCurveToPoint: CGPointMake(99.89, 807.8) controlPoint1: CGPointMake(102.39, 820.3) controlPoint2: CGPointMake(99.89, 814.2)];
        [bezierPath addLineToPoint: CGPointMake(99.89, 609)];
        [bezierPath addCurveToPoint: CGPointMake(123.79, 585) controlPoint1: CGPointMake(99.89, 595.8) controlPoint2: CGPointMake(110.59, 585)];
        [bezierPath addCurveToPoint: CGPointMake(131.39, 586.2) controlPoint1: CGPointMake(126.39, 585) controlPoint2: CGPointMake(128.89, 585.4)];
        [bezierPath addCurveToPoint: CGPointMake(637.19, 622.7) controlPoint1: CGPointMake(227.19, 618.4) controlPoint2: CGPointMake(440.89, 622.7)];
        [bezierPath addLineToPoint: CGPointMake(652.19, 622.7)];
        [bezierPath addCurveToPoint: CGPointMake(653.46, 621.33) controlPoint1: CGPointMake(652.61, 622.28) controlPoint2: CGPointMake(653.03, 621.81)];
        [bezierPath addCurveToPoint: CGPointMake(651.69, 612.5) controlPoint1: CGPointMake(652.32, 618.61) controlPoint2: CGPointMake(651.69, 615.62)];
        [bezierPath addLineToPoint: CGPointMake(651.69, 589.2)];
        [bezierPath addCurveToPoint: CGPointMake(652.92, 581.77) controlPoint1: CGPointMake(651.69, 586.61) controlPoint2: CGPointMake(652.12, 584.11)];
        [bezierPath addCurveToPoint: CGPointMake(651.35, 553) controlPoint1: CGPointMake(652.46, 573.27) controlPoint2: CGPointMake(651.87, 562.58)];
        [bezierPath addLineToPoint: CGPointMake(651.32, 552.49)];
        [bezierPath addCurveToPoint: CGPointMake(633.59, 423.86) controlPoint1: CGPointMake(650.35, 545.48) controlPoint2: CGPointMake(639.6, 467.47)];
        [bezierPath addCurveToPoint: CGPointMake(629.29, 424.1) controlPoint1: CGPointMake(630.82, 424.02) controlPoint2: CGPointMake(629.29, 424.1)];
        [bezierPath addLineToPoint: CGPointMake(626.89, 410.3)];
        [bezierPath addCurveToPoint: CGPointMake(611.89, 330.3) controlPoint1: CGPointMake(622.29, 384.2) controlPoint2: CGPointMake(617.09, 357.2)];
        [bezierPath addCurveToPoint: CGPointMake(582.49, 91.3) controlPoint1: CGPointMake(595.09, 243.6) controlPoint2: CGPointMake(577.69, 154)];
        [bezierPath addCurveToPoint: CGPointMake(604.99, 36.1) controlPoint1: CGPointMake(582.19, 70.6) controlPoint2: CGPointMake(589.99, 51.5)];
        [bezierPath addCurveToPoint: CGPointMake(702.39, 0) controlPoint1: CGPointMake(627.09, 13.5) controlPoint2: CGPointMake(663.49, 0)];
        [bezierPath addCurveToPoint: CGPointMake(811.49, 71.9) controlPoint1: CGPointMake(758.89, 0) controlPoint2: CGPointMake(801.59, 28.2)];
        [bezierPath closePath];
        [bezierPath moveToPoint: CGPointMake(131.79, 619.3)];
        [bezierPath addLineToPoint: CGPointMake(131.79, 797.4)];
        [bezierPath addCurveToPoint: CGPointMake(508.99, 767.1) controlPoint1: CGPointMake(224.19, 770.8) controlPoint2: CGPointMake(373.79, 767.1)];
        [bezierPath addLineToPoint: CGPointMake(534.19, 767.1)];
        [bezierPath addCurveToPoint: CGPointMake(600.09, 894.7) controlPoint1: CGPointMake(556.59, 767.2) controlPoint2: CGPointMake(568.69, 798.3)];
        [bezierPath addCurveToPoint: CGPointMake(636.09, 991.7) controlPoint1: CGPointMake(610.99, 928.7) controlPoint2: CGPointMake(627.29, 978.7)];
        [bezierPath addCurveToPoint: CGPointMake(689.69, 991.6) controlPoint1: CGPointMake(649.39, 991.8) controlPoint2: CGPointMake(669.39, 991.7)];
        [bezierPath addCurveToPoint: CGPointMake(736.79, 991.5) controlPoint1: CGPointMake(706.29, 991.5) controlPoint2: CGPointMake(723.09, 991.4)];
        [bezierPath addCurveToPoint: CGPointMake(718.99, 916.8) controlPoint1: CGPointMake(732.69, 973.2) controlPoint2: CGPointMake(725.29, 942.8)];
        [bezierPath addCurveToPoint: CGPointMake(694.29, 776) controlPoint1: CGPointMake(686.99, 785.4) controlPoint2: CGPointMake(687.69, 784.5)];
        [bezierPath addLineToPoint: CGPointMake(698.99, 770)];
        [bezierPath addLineToPoint: CGPointMake(706.89, 769.9)];
        [bezierPath addLineToPoint: CGPointMake(755.39, 770.9)];
        [bezierPath addCurveToPoint: CGPointMake(910.59, 773.9) controlPoint1: CGPointMake(807.49, 772) controlPoint2: CGPointMake(859.59, 773.2)];
        [bezierPath addLineToPoint: CGPointMake(911.49, 653.5)];
        [bezierPath addLineToPoint: CGPointMake(845.49, 653.1)];
        [bezierPath addLineToPoint: CGPointMake(796.79, 653.5)];
        [bezierPath addCurveToPoint: CGPointMake(775.29, 639.8) controlPoint1: CGPointMake(786.29, 653.5) controlPoint2: CGPointMake(779.99, 645.6)];
        [bezierPath addCurveToPoint: CGPointMake(773.79, 637.9) controlPoint1: CGPointMake(774.79, 639.2) controlPoint2: CGPointMake(774.29, 638.5)];
        [bezierPath addCurveToPoint: CGPointMake(749.39, 638) controlPoint1: CGPointMake(765.49, 637.9) controlPoint2: CGPointMake(757.39, 638)];
        [bezierPath addLineToPoint: CGPointMake(689.59, 637.9)];
        [bezierPath addLineToPoint: CGPointMake(681.19, 637.9)];
        [bezierPath addCurveToPoint: CGPointMake(678.49, 640.9) controlPoint1: CGPointMake(680.29, 638.8) controlPoint2: CGPointMake(679.39, 639.9)];
        [bezierPath addCurveToPoint: CGPointMake(656.69, 654.2) controlPoint1: CGPointMake(672.79, 647.1) controlPoint2: CGPointMake(666.39, 654.2)];
        [bezierPath addLineToPoint: CGPointMake(637.49, 654.2)];
        [bezierPath addCurveToPoint: CGPointMake(131.79, 619.3) controlPoint1: CGPointMake(445.09, 654.2) controlPoint2: CGPointMake(235.79, 650)];
        [bezierPath closePath];
        [strokeColor setFill];
        [bezierPath fill];



        CGContextRestoreGState(context);
    }
}

+ (void)drawBottleAndTapIconWithScaleX: (CGFloat)scaleX scaleY: (CGFloat)scaleY strokeColorName: (NSString*)strokeColorName;
{
    //// General Declarations
    CGContextRef context = UIGraphicsGetCurrentContext();


    //// Variable Declarations
    UIColor* strokeColor = [strokeColorName isEqualToString: @"myTintColor"] ? SHStyleKit.myTintColor : ([strokeColorName isEqualToString: @"myTintTransparentColor"] ? SHStyleKit.myTintTransparentColor : ([strokeColorName isEqualToString: @"myTextColor"] ? SHStyleKit.myTextColor : ([strokeColorName isEqualToString: @"myTextTransparentColor"] ? SHStyleKit.myTextTransparentColor : ([strokeColorName isEqualToString: @"myWhiteColor"] ? SHStyleKit.myWhiteColor : ([strokeColorName isEqualToString: @"myWhiteTransparentColor"] ? SHStyleKit.myWhiteTransparentColor : ([strokeColorName isEqualToString: @"myBlackColor"] ? SHStyleKit.myBlackColor : ([strokeColorName isEqualToString: @"default"] ? SHStyleKit.myWhiteColor : SHStyleKit.myClearColor)))))));

    //// Group
    {
        CGContextSaveGState(context);
        CGContextScaleCTM(context, scaleX, scaleY);



        //// Bezier Drawing
        UIBezierPath* bezierPath = UIBezierPath.bezierPath;
        [bezierPath moveToPoint: CGPointMake(886.53, 550.56)];
        [bezierPath addCurveToPoint: CGPointMake(836.49, 553.3) controlPoint1: CGPointMake(872.14, 551.35) controlPoint2: CGPointMake(853.91, 552.35)];
        [bezierPath addCurveToPoint: CGPointMake(805.25, 555.99) controlPoint1: CGPointMake(819.74, 554.74) controlPoint2: CGPointMake(805.25, 555.99)];
        [bezierPath addLineToPoint: CGPointMake(815.49, 630.3)];
        [bezierPath addCurveToPoint: CGPointMake(816.97, 630.22) controlPoint1: CGPointMake(815.49, 630.3) controlPoint2: CGPointMake(816.01, 630.27)];
        [bezierPath addCurveToPoint: CGPointMake(885.02, 626.45) controlPoint1: CGPointMake(827.03, 629.66) controlPoint2: CGPointMake(885.02, 626.45)];
        [bezierPath addCurveToPoint: CGPointMake(886.52, 550.91) controlPoint1: CGPointMake(885.02, 626.45) controlPoint2: CGPointMake(886.28, 562.87)];
        [bezierPath addCurveToPoint: CGPointMake(886.53, 550.56) controlPoint1: CGPointMake(886.52, 550.79) controlPoint2: CGPointMake(886.53, 550.67)];
        [bezierPath closePath];
        [bezierPath moveToPoint: CGPointMake(886.87, 655.79)];
        [bezierPath addCurveToPoint: CGPointMake(858.46, 657.37) controlPoint1: CGPointMake(886.87, 655.79) controlPoint2: CGPointMake(873.4, 656.54)];
        [bezierPath addCurveToPoint: CGPointMake(819.03, 659.56) controlPoint1: CGPointMake(839.88, 658.4) controlPoint2: CGPointMake(819.03, 659.56)];
        [bezierPath addLineToPoint: CGPointMake(819.34, 664.49)];
        [bezierPath addCurveToPoint: CGPointMake(847.99, 662.89) controlPoint1: CGPointMake(819.34, 664.49) controlPoint2: CGPointMake(832.96, 663.73)];
        [bezierPath addCurveToPoint: CGPointMake(887.1, 660.71) controlPoint1: CGPointMake(866.48, 661.86) controlPoint2: CGPointMake(887.1, 660.71)];
        [bezierPath addLineToPoint: CGPointMake(886.87, 655.79)];
        [bezierPath closePath];
        [bezierPath moveToPoint: CGPointMake(886.94, 690.13)];
        [bezierPath addLineToPoint: CGPointMake(819.11, 690.13)];
        [bezierPath addLineToPoint: CGPointMake(819.11, 695.06)];
        [bezierPath addLineToPoint: CGPointMake(886.94, 695.06)];
        [bezierPath addLineToPoint: CGPointMake(886.94, 690.13)];
        [bezierPath closePath];
        [bezierPath moveToPoint: CGPointMake(917.82, 285.33)];
        [bezierPath addCurveToPoint: CGPointMake(916.05, 527.43) controlPoint1: CGPointMake(935.69, 337.69) controlPoint2: CGPointMake(926.14, 429.87)];
        [bezierPath addLineToPoint: CGPointMake(913.82, 549.06)];
        [bezierPath addCurveToPoint: CGPointMake(910.97, 549.22) controlPoint1: CGPointMake(913.82, 549.06) controlPoint2: CGPointMake(912.81, 549.12)];
        [bezierPath addCurveToPoint: CGPointMake(909.35, 630.32) controlPoint1: CGPointMake(910.49, 573.53) controlPoint2: CGPointMake(909.78, 608.77)];
        [bezierPath addCurveToPoint: CGPointMake(909.74, 630.3) controlPoint1: CGPointMake(909.6, 630.31) controlPoint2: CGPointMake(909.74, 630.3)];
        [bezierPath addLineToPoint: CGPointMake(912.66, 683.74)];
        [bezierPath addCurveToPoint: CGPointMake(911.28, 683.81) controlPoint1: CGPointMake(912.66, 683.74) controlPoint2: CGPointMake(912.18, 683.76)];
        [bezierPath addCurveToPoint: CGPointMake(911.28, 701.6) controlPoint1: CGPointMake(911.28, 685.56) controlPoint2: CGPointMake(911.28, 701.6)];
        [bezierPath addCurveToPoint: CGPointMake(909.74, 708.73) controlPoint1: CGPointMake(911.26, 704.13) controlPoint2: CGPointMake(910.71, 706.55)];
        [bezierPath addLineToPoint: CGPointMake(909.89, 708.92)];
        [bezierPath addLineToPoint: CGPointMake(993.82, 708.22)];
        [bezierPath addCurveToPoint: CGPointMake(1019, 733.25) controlPoint1: CGPointMake(1007.76, 708.22) controlPoint2: CGPointMake(1019, 719.47)];
        [bezierPath addLineToPoint: CGPointMake(1019, 825.19)];
        [bezierPath addCurveToPoint: CGPointMake(994.05, 850.21) controlPoint1: CGPointMake(1019, 838.97) controlPoint2: CGPointMake(1007.76, 850.21)];
        [bezierPath addCurveToPoint: CGPointMake(874.01, 847.9) controlPoint1: CGPointMake(954.32, 849.6) controlPoint2: CGPointMake(914.2, 848.75)];
        [bezierPath addLineToPoint: CGPointMake(850.75, 847.37)];
        [bezierPath addCurveToPoint: CGPointMake(870.16, 930.22) controlPoint1: CGPointMake(854.53, 866.31) controlPoint2: CGPointMake(863.61, 903.5)];
        [bezierPath addCurveToPoint: CGPointMake(884.17, 1013.3) controlPoint1: CGPointMake(888.95, 1007.22) controlPoint2: CGPointMake(888.95, 1007.22)];
        [bezierPath addLineToPoint: CGPointMake(880.55, 1017.92)];
        [bezierPath addLineToPoint: CGPointMake(869.31, 1018)];
        [bezierPath addLineToPoint: CGPointMake(869.08, 1017.77)];
        [bezierPath addCurveToPoint: CGPointMake(824.04, 1017.85) controlPoint1: CGPointMake(857.61, 1017.61) controlPoint2: CGPointMake(840.74, 1017.77)];
        [bezierPath addCurveToPoint: CGPointMake(778.53, 1017.85) controlPoint1: CGPointMake(806.17, 1017.92) controlPoint2: CGPointMake(788.62, 1018.08)];
        [bezierPath addCurveToPoint: CGPointMake(731.71, 926.6) controlPoint1: CGPointMake(763.05, 1017.61) controlPoint2: CGPointMake(755.43, 999.13)];
        [bezierPath addCurveToPoint: CGPointMake(700.76, 845.06) controlPoint1: CGPointMake(722.32, 897.8) controlPoint2: CGPointMake(708.38, 855.07)];
        [bezierPath addLineToPoint: CGPointMake(684.67, 845.06)];
        [bezierPath addCurveToPoint: CGPointMake(393.91, 869.54) controlPoint1: CGPointMake(584.8, 845.06) controlPoint2: CGPointMake(461.52, 847.83)];
        [bezierPath addCurveToPoint: CGPointMake(375.36, 865.08) controlPoint1: CGPointMake(387.37, 871.62) controlPoint2: CGPointMake(380.21, 869.85)];
        [bezierPath addCurveToPoint: CGPointMake(369.89, 851.99) controlPoint1: CGPointMake(371.81, 861.61) controlPoint2: CGPointMake(369.89, 856.91)];
        [bezierPath addLineToPoint: CGPointMake(369.89, 698.91)];
        [bezierPath addCurveToPoint: CGPointMake(388.29, 680.43) controlPoint1: CGPointMake(369.89, 688.74) controlPoint2: CGPointMake(378.13, 680.43)];
        [bezierPath addCurveToPoint: CGPointMake(394.14, 681.35) controlPoint1: CGPointMake(390.29, 680.43) controlPoint2: CGPointMake(392.22, 680.73)];
        [bezierPath addCurveToPoint: CGPointMake(783.61, 709.46) controlPoint1: CGPointMake(467.91, 706.15) controlPoint2: CGPointMake(632.46, 709.46)];
        [bezierPath addLineToPoint: CGPointMake(795.16, 709.46)];
        [bezierPath addCurveToPoint: CGPointMake(796.14, 708.4) controlPoint1: CGPointMake(795.49, 709.13) controlPoint2: CGPointMake(795.81, 708.77)];
        [bezierPath addCurveToPoint: CGPointMake(794.78, 701.6) controlPoint1: CGPointMake(795.26, 706.31) controlPoint2: CGPointMake(794.78, 704.01)];
        [bezierPath addLineToPoint: CGPointMake(794.78, 683.66)];
        [bezierPath addCurveToPoint: CGPointMake(795.73, 677.94) controlPoint1: CGPointMake(794.78, 681.66) controlPoint2: CGPointMake(795.11, 679.74)];
        [bezierPath addCurveToPoint: CGPointMake(794.51, 655.79) controlPoint1: CGPointMake(795.37, 671.39) controlPoint2: CGPointMake(794.92, 663.17)];
        [bezierPath addLineToPoint: CGPointMake(794.49, 655.4)];
        [bezierPath addCurveToPoint: CGPointMake(780.84, 556.35) controlPoint1: CGPointMake(793.75, 650) controlPoint2: CGPointMake(785.47, 589.92)];
        [bezierPath addCurveToPoint: CGPointMake(777.53, 556.53) controlPoint1: CGPointMake(778.71, 556.47) controlPoint2: CGPointMake(777.53, 556.53)];
        [bezierPath addLineToPoint: CGPointMake(775.68, 545.91)];
        [bezierPath addCurveToPoint: CGPointMake(764.13, 484.31) controlPoint1: CGPointMake(772.14, 525.81) controlPoint2: CGPointMake(768.13, 505.02)];
        [bezierPath addCurveToPoint: CGPointMake(741.49, 300.27) controlPoint1: CGPointMake(751.19, 417.55) controlPoint2: CGPointMake(737.8, 348.55)];
        [bezierPath addCurveToPoint: CGPointMake(758.82, 257.77) controlPoint1: CGPointMake(741.26, 284.33) controlPoint2: CGPointMake(747.27, 269.63)];
        [bezierPath addCurveToPoint: CGPointMake(833.81, 229.97) controlPoint1: CGPointMake(775.83, 240.37) controlPoint2: CGPointMake(803.86, 229.97)];
        [bezierPath addCurveToPoint: CGPointMake(917.82, 285.33) controlPoint1: CGPointMake(877.32, 229.97) controlPoint2: CGPointMake(910.2, 251.68)];
        [bezierPath closePath];
        [bezierPath moveToPoint: CGPointMake(394.45, 706.84)];
        [bezierPath addLineToPoint: CGPointMake(394.45, 843.98)];
        [bezierPath addCurveToPoint: CGPointMake(684.9, 820.65) controlPoint1: CGPointMake(465.6, 823.5) controlPoint2: CGPointMake(580.79, 820.65)];
        [bezierPath addLineToPoint: CGPointMake(704.3, 820.65)];
        [bezierPath addCurveToPoint: CGPointMake(755.04, 918.9) controlPoint1: CGPointMake(721.55, 820.72) controlPoint2: CGPointMake(730.87, 844.67)];
        [bezierPath addCurveToPoint: CGPointMake(782.76, 993.59) controlPoint1: CGPointMake(763.44, 945.08) controlPoint2: CGPointMake(775.99, 983.58)];
        [bezierPath addCurveToPoint: CGPointMake(824.04, 993.51) controlPoint1: CGPointMake(793, 993.67) controlPoint2: CGPointMake(808.4, 993.59)];
        [bezierPath addCurveToPoint: CGPointMake(860.3, 993.44) controlPoint1: CGPointMake(836.82, 993.44) controlPoint2: CGPointMake(849.75, 993.36)];
        [bezierPath addCurveToPoint: CGPointMake(846.6, 935.92) controlPoint1: CGPointMake(857.15, 979.35) controlPoint2: CGPointMake(851.45, 955.94)];
        [bezierPath addCurveToPoint: CGPointMake(827.58, 827.5) controlPoint1: CGPointMake(821.96, 834.74) controlPoint2: CGPointMake(822.5, 834.04)];
        [bezierPath addLineToPoint: CGPointMake(831.2, 822.88)];
        [bezierPath addLineToPoint: CGPointMake(837.28, 822.8)];
        [bezierPath addLineToPoint: CGPointMake(874.62, 823.57)];
        [bezierPath addCurveToPoint: CGPointMake(994.13, 825.88) controlPoint1: CGPointMake(914.74, 824.42) controlPoint2: CGPointMake(954.86, 825.34)];
        [bezierPath addLineToPoint: CGPointMake(994.82, 733.17)];
        [bezierPath addLineToPoint: CGPointMake(944, 732.86)];
        [bezierPath addLineToPoint: CGPointMake(906.5, 733.17)];
        [bezierPath addCurveToPoint: CGPointMake(889.95, 722.62) controlPoint1: CGPointMake(898.42, 733.17) controlPoint2: CGPointMake(893.57, 727.09)];
        [bezierPath addCurveToPoint: CGPointMake(888.79, 721.16) controlPoint1: CGPointMake(889.56, 722.16) controlPoint2: CGPointMake(889.18, 721.62)];
        [bezierPath addCurveToPoint: CGPointMake(870, 721.24) controlPoint1: CGPointMake(882.4, 721.16) controlPoint2: CGPointMake(876.16, 721.24)];
        [bezierPath addLineToPoint: CGPointMake(823.96, 721.16)];
        [bezierPath addLineToPoint: CGPointMake(817.49, 721.16)];
        [bezierPath addCurveToPoint: CGPointMake(815.41, 723.47) controlPoint1: CGPointMake(816.8, 721.85) controlPoint2: CGPointMake(816.1, 722.7)];
        [bezierPath addCurveToPoint: CGPointMake(798.63, 733.71) controlPoint1: CGPointMake(811.02, 728.24) controlPoint2: CGPointMake(806.09, 733.71)];
        [bezierPath addLineToPoint: CGPointMake(783.84, 733.71)];
        [bezierPath addCurveToPoint: CGPointMake(394.45, 706.84) controlPoint1: CGPointMake(635.69, 733.71) controlPoint2: CGPointMake(474.53, 730.48)];
        [bezierPath closePath];
        [bezierPath moveToPoint: CGPointMake(221.95, 37.91)];
        [bezierPath addLineToPoint: CGPointMake(138.38, 37.91)];
        [bezierPath addCurveToPoint: CGPointMake(135.25, 39.21) controlPoint1: CGPointMake(137.15, 37.91) controlPoint2: CGPointMake(136.04, 38.39)];
        [bezierPath addLineToPoint: CGPointMake(225.08, 39.21)];
        [bezierPath addCurveToPoint: CGPointMake(221.95, 37.91) controlPoint1: CGPointMake(224.29, 38.39) controlPoint2: CGPointMake(223.18, 37.91)];
        [bezierPath closePath];
        [bezierPath moveToPoint: CGPointMake(213.52, 60.84)];
        [bezierPath addLineToPoint: CGPointMake(147.58, 60.84)];
        [bezierPath addCurveToPoint: CGPointMake(139.76, 97.02) controlPoint1: CGPointMake(146.77, 64.56) controlPoint2: CGPointMake(139.76, 97.02)];
        [bezierPath addCurveToPoint: CGPointMake(139.94, 96.93) controlPoint1: CGPointMake(139.85, 96.93) controlPoint2: CGPointMake(139.85, 96.93)];
        [bezierPath addCurveToPoint: CGPointMake(141.32, 97.11) controlPoint1: CGPointMake(140.2, 96.93) controlPoint2: CGPointMake(140.63, 97.11)];
        [bezierPath addLineToPoint: CGPointMake(145.9, 97.11)];
        [bezierPath addCurveToPoint: CGPointMake(147.74, 97.02) controlPoint1: CGPointMake(146.5, 97.05) controlPoint2: CGPointMake(147.11, 97.02)];
        [bezierPath addLineToPoint: CGPointMake(212.41, 97.02)];
        [bezierPath addCurveToPoint: CGPointMake(214.22, 97.11) controlPoint1: CGPointMake(213.03, 97.02) controlPoint2: CGPointMake(213.63, 97.05)];
        [bezierPath addLineToPoint: CGPointMake(219.09, 97.11)];
        [bezierPath addCurveToPoint: CGPointMake(220.82, 96.5) controlPoint1: CGPointMake(220.21, 97.11) controlPoint2: CGPointMake(220.74, 96.67)];
        [bezierPath addCurveToPoint: CGPointMake(213.52, 60.84) controlPoint1: CGPointMake(220.82, 96.5) controlPoint2: CGPointMake(214.28, 64.53)];
        [bezierPath closePath];
        [bezierPath moveToPoint: CGPointMake(209.12, 118.22)];
        [bezierPath addLineToPoint: CGPointMake(150.95, 118.22)];
        [bezierPath addCurveToPoint: CGPointMake(139.76, 215.85) controlPoint1: CGPointMake(144.79, 130.25) controlPoint2: CGPointMake(141.84, 181.4)];
        [bezierPath addCurveToPoint: CGPointMake(120.26, 321.61) controlPoint1: CGPointMake(135.52, 288.37) controlPoint2: CGPointMake(132.91, 314.34)];
        [bezierPath addCurveToPoint: CGPointMake(61.39, 423.3) controlPoint1: CGPointMake(83.93, 342.55) controlPoint2: CGPointMake(61.39, 381.5)];
        [bezierPath addLineToPoint: CGPointMake(61.39, 843.83)];
        [bezierPath addCurveToPoint: CGPointMake(96.42, 878.8) controlPoint1: CGPointMake(61.39, 863.13) controlPoint2: CGPointMake(77.08, 878.8)];
        [bezierPath addLineToPoint: CGPointMake(263.91, 878.8)];
        [bezierPath addCurveToPoint: CGPointMake(298.93, 843.83) controlPoint1: CGPointMake(283.24, 878.8) controlPoint2: CGPointMake(298.93, 863.13)];
        [bezierPath addLineToPoint: CGPointMake(298.93, 423.3)];
        [bezierPath addCurveToPoint: CGPointMake(238.16, 320.57) controlPoint1: CGPointMake(298.93, 380.63) controlPoint2: CGPointMake(275.61, 341.25)];
        [bezierPath addCurveToPoint: CGPointMake(219.26, 214.81) controlPoint1: CGPointMake(225.5, 313.56) controlPoint2: CGPointMake(223.08, 287.51)];
        [bezierPath addCurveToPoint: CGPointMake(209.12, 118.22) controlPoint1: CGPointMake(217.53, 180.88) controlPoint2: CGPointMake(214.93, 130.51)];
        [bezierPath closePath];
        [bezierPath moveToPoint: CGPointMake(247.7, 42.41)];
        [bezierPath addLineToPoint: CGPointMake(247.7, 60.84)];
        [bezierPath addLineToPoint: CGPointMake(235.13, 60.84)];
        [bezierPath addCurveToPoint: CGPointMake(241.54, 92.87) controlPoint1: CGPointMake(238.11, 75.74) controlPoint2: CGPointMake(241.54, 92.87)];
        [bezierPath addCurveToPoint: CGPointMake(237.21, 109.83) controlPoint1: CGPointMake(242.76, 98.84) controlPoint2: CGPointMake(241.19, 104.98)];
        [bezierPath addCurveToPoint: CGPointMake(230.38, 115.47) controlPoint1: CGPointMake(235.31, 112.17) controlPoint2: CGPointMake(232.99, 114.07)];
        [bezierPath addCurveToPoint: CGPointMake(240.33, 213.68) controlPoint1: CGPointMake(235.59, 132.95) controlPoint2: CGPointMake(237.79, 164.05)];
        [bezierPath addCurveToPoint: CGPointMake(249.52, 302.74) controlPoint1: CGPointMake(241.97, 245.53) controlPoint2: CGPointMake(244.4, 293.22)];
        [bezierPath addCurveToPoint: CGPointMake(320, 423.3) controlPoint1: CGPointMake(293.04, 327.32) controlPoint2: CGPointMake(320, 373.36)];
        [bezierPath addLineToPoint: CGPointMake(320, 843.83)];
        [bezierPath addCurveToPoint: CGPointMake(263.91, 900) controlPoint1: CGPointMake(320.17, 874.81) controlPoint2: CGPointMake(294.94, 900)];
        [bezierPath addLineToPoint: CGPointMake(96.42, 900)];
        [bezierPath addCurveToPoint: CGPointMake(40.15, 843.83) controlPoint1: CGPointMake(65.38, 900) controlPoint2: CGPointMake(40.15, 874.81)];
        [bezierPath addLineToPoint: CGPointMake(40.15, 423.3)];
        [bezierPath addCurveToPoint: CGPointMake(108.55, 303.87) controlPoint1: CGPointMake(40.15, 374.4) controlPoint2: CGPointMake(66.33, 328.71)];
        [bezierPath addCurveToPoint: CGPointMake(118.52, 214.55) controlPoint1: CGPointMake(113.84, 294.61) controlPoint2: CGPointMake(116.7, 246.57)];
        [bezierPath addCurveToPoint: CGPointMake(129.47, 115.06) controlPoint1: CGPointMake(121.49, 164.03) controlPoint2: CGPointMake(123.93, 132.57)];
        [bezierPath addCurveToPoint: CGPointMake(123.2, 109.74) controlPoint1: CGPointMake(127.1, 113.69) controlPoint2: CGPointMake(124.98, 111.9)];
        [bezierPath addCurveToPoint: CGPointMake(119.04, 92.61) controlPoint1: CGPointMake(119.3, 104.9) controlPoint2: CGPointMake(117.74, 98.66)];
        [bezierPath addCurveToPoint: CGPointMake(125.9, 60.84) controlPoint1: CGPointMake(119.04, 92.61) controlPoint2: CGPointMake(122.71, 75.65)];
        [bezierPath addLineToPoint: CGPointMake(112.8, 60.84)];
        [bezierPath addLineToPoint: CGPointMake(112.8, 42.41)];
        [bezierPath addCurveToPoint: CGPointMake(138.46, 16.79) controlPoint1: CGPointMake(112.8, 28.3) controlPoint2: CGPointMake(124.33, 16.79)];
        [bezierPath addLineToPoint: CGPointMake(222.04, 16.79)];
        [bezierPath addCurveToPoint: CGPointMake(247.7, 42.41) controlPoint1: CGPointMake(236.17, 16.79) controlPoint2: CGPointMake(247.7, 28.3)];
        [bezierPath closePath];
        [strokeColor setFill];
        [bezierPath fill];



        CGContextRestoreGState(context);
    }
}

+ (void)drawBottleIconWithScaleX: (CGFloat)scaleX scaleY: (CGFloat)scaleY strokeColorName: (NSString*)strokeColorName;
{
    //// General Declarations
    CGContextRef context = UIGraphicsGetCurrentContext();


    //// Variable Declarations
    UIColor* strokeColor = [strokeColorName isEqualToString: @"myTintColor"] ? SHStyleKit.myTintColor : ([strokeColorName isEqualToString: @"myTintTransparentColor"] ? SHStyleKit.myTintTransparentColor : ([strokeColorName isEqualToString: @"myTextColor"] ? SHStyleKit.myTextColor : ([strokeColorName isEqualToString: @"myTextTransparentColor"] ? SHStyleKit.myTextTransparentColor : ([strokeColorName isEqualToString: @"myWhiteColor"] ? SHStyleKit.myWhiteColor : ([strokeColorName isEqualToString: @"myWhiteTransparentColor"] ? SHStyleKit.myWhiteTransparentColor : ([strokeColorName isEqualToString: @"myBlackColor"] ? SHStyleKit.myBlackColor : ([strokeColorName isEqualToString: @"default"] ? SHStyleKit.myWhiteColor : SHStyleKit.myClearColor)))))));

    //// Group
    {
        CGContextSaveGState(context);
        CGContextScaleCTM(context, scaleX, scaleY);



        //// Bezier Drawing
        UIBezierPath* bezierPath = UIBezierPath.bezierPath;
        [bezierPath moveToPoint: CGPointMake(551.85, 28.19)];
        [bezierPath addLineToPoint: CGPointMake(455.45, 28.19)];
        [bezierPath addCurveToPoint: CGPointMake(451.84, 29.69) controlPoint1: CGPointMake(454.03, 28.19) controlPoint2: CGPointMake(452.75, 28.75)];
        [bezierPath addLineToPoint: CGPointMake(555.46, 29.69)];
        [bezierPath addCurveToPoint: CGPointMake(551.85, 28.19) controlPoint1: CGPointMake(554.55, 28.75) controlPoint2: CGPointMake(553.27, 28.19)];
        [bezierPath closePath];
        [bezierPath moveToPoint: CGPointMake(542.13, 54.69)];
        [bezierPath addLineToPoint: CGPointMake(466.07, 54.69)];
        [bezierPath addCurveToPoint: CGPointMake(457.05, 96.49) controlPoint1: CGPointMake(465.14, 58.99) controlPoint2: CGPointMake(457.05, 96.49)];
        [bezierPath addCurveToPoint: CGPointMake(457.25, 96.39) controlPoint1: CGPointMake(457.15, 96.39) controlPoint2: CGPointMake(457.15, 96.39)];
        [bezierPath addCurveToPoint: CGPointMake(458.85, 96.59) controlPoint1: CGPointMake(457.55, 96.39) controlPoint2: CGPointMake(458.05, 96.59)];
        [bezierPath addLineToPoint: CGPointMake(464.13, 96.59)];
        [bezierPath addCurveToPoint: CGPointMake(466.25, 96.49) controlPoint1: CGPointMake(464.82, 96.52) controlPoint2: CGPointMake(465.53, 96.49)];
        [bezierPath addLineToPoint: CGPointMake(540.85, 96.49)];
        [bezierPath addCurveToPoint: CGPointMake(542.94, 96.59) controlPoint1: CGPointMake(541.57, 96.49) controlPoint2: CGPointMake(542.26, 96.52)];
        [bezierPath addLineToPoint: CGPointMake(548.55, 96.59)];
        [bezierPath addCurveToPoint: CGPointMake(550.55, 95.89) controlPoint1: CGPointMake(549.85, 96.59) controlPoint2: CGPointMake(550.45, 96.09)];
        [bezierPath addCurveToPoint: CGPointMake(542.13, 54.69) controlPoint1: CGPointMake(550.55, 95.89) controlPoint2: CGPointMake(543.01, 58.96)];
        [bezierPath closePath];
        [bezierPath moveToPoint: CGPointMake(537.05, 120.99)];
        [bezierPath addLineToPoint: CGPointMake(469.95, 120.99)];
        [bezierPath addCurveToPoint: CGPointMake(457.05, 233.79) controlPoint1: CGPointMake(462.85, 134.89) controlPoint2: CGPointMake(459.45, 193.99)];
        [bezierPath addCurveToPoint: CGPointMake(434.55, 355.99) controlPoint1: CGPointMake(452.15, 317.59) controlPoint2: CGPointMake(449.15, 347.59)];
        [bezierPath addCurveToPoint: CGPointMake(366.65, 473.49) controlPoint1: CGPointMake(392.65, 380.19) controlPoint2: CGPointMake(366.65, 425.19)];
        [bezierPath addLineToPoint: CGPointMake(366.65, 959.39)];
        [bezierPath addCurveToPoint: CGPointMake(407.05, 999.79) controlPoint1: CGPointMake(366.65, 981.69) controlPoint2: CGPointMake(384.75, 999.79)];
        [bezierPath addLineToPoint: CGPointMake(600.25, 999.79)];
        [bezierPath addCurveToPoint: CGPointMake(640.65, 959.39) controlPoint1: CGPointMake(622.55, 999.79) controlPoint2: CGPointMake(640.65, 981.69)];
        [bezierPath addLineToPoint: CGPointMake(640.65, 473.49)];
        [bezierPath addCurveToPoint: CGPointMake(570.55, 354.79) controlPoint1: CGPointMake(640.65, 424.19) controlPoint2: CGPointMake(613.75, 378.69)];
        [bezierPath addCurveToPoint: CGPointMake(548.75, 232.59) controlPoint1: CGPointMake(555.95, 346.69) controlPoint2: CGPointMake(553.15, 316.59)];
        [bezierPath addCurveToPoint: CGPointMake(537.05, 120.99) controlPoint1: CGPointMake(546.75, 193.39) controlPoint2: CGPointMake(543.75, 135.19)];
        [bezierPath closePath];
        [bezierPath moveToPoint: CGPointMake(581.55, 33.39)];
        [bezierPath addLineToPoint: CGPointMake(581.55, 54.69)];
        [bezierPath addLineToPoint: CGPointMake(567.05, 54.69)];
        [bezierPath addCurveToPoint: CGPointMake(574.45, 91.69) controlPoint1: CGPointMake(570.5, 71.91) controlPoint2: CGPointMake(574.45, 91.69)];
        [bezierPath addCurveToPoint: CGPointMake(569.45, 111.29) controlPoint1: CGPointMake(575.85, 98.59) controlPoint2: CGPointMake(574.05, 105.69)];
        [bezierPath addCurveToPoint: CGPointMake(561.58, 117.8) controlPoint1: CGPointMake(567.27, 114) controlPoint2: CGPointMake(564.59, 116.19)];
        [bezierPath addCurveToPoint: CGPointMake(573.05, 231.29) controlPoint1: CGPointMake(567.59, 138.01) controlPoint2: CGPointMake(570.12, 173.94)];
        [bezierPath addCurveToPoint: CGPointMake(583.65, 334.19) controlPoint1: CGPointMake(574.95, 268.09) controlPoint2: CGPointMake(577.75, 323.19)];
        [bezierPath addCurveToPoint: CGPointMake(664.95, 473.49) controlPoint1: CGPointMake(633.85, 362.59) controlPoint2: CGPointMake(664.95, 415.79)];
        [bezierPath addLineToPoint: CGPointMake(664.95, 959.39)];
        [bezierPath addCurveToPoint: CGPointMake(600.25, 1024.29) controlPoint1: CGPointMake(665.15, 995.19) controlPoint2: CGPointMake(636.05, 1024.29)];
        [bezierPath addLineToPoint: CGPointMake(407.05, 1024.29)];
        [bezierPath addCurveToPoint: CGPointMake(342.15, 959.39) controlPoint1: CGPointMake(371.25, 1024.29) controlPoint2: CGPointMake(342.15, 995.19)];
        [bezierPath addLineToPoint: CGPointMake(342.15, 473.49)];
        [bezierPath addCurveToPoint: CGPointMake(421.05, 335.49) controlPoint1: CGPointMake(342.15, 416.99) controlPoint2: CGPointMake(372.35, 364.19)];
        [bezierPath addCurveToPoint: CGPointMake(432.55, 232.29) controlPoint1: CGPointMake(427.15, 324.79) controlPoint2: CGPointMake(430.45, 269.29)];
        [bezierPath addCurveToPoint: CGPointMake(445.18, 117.33) controlPoint1: CGPointMake(435.98, 173.92) controlPoint2: CGPointMake(438.79, 137.57)];
        [bezierPath addCurveToPoint: CGPointMake(437.95, 111.19) controlPoint1: CGPointMake(442.45, 115.75) controlPoint2: CGPointMake(440, 113.68)];
        [bezierPath addCurveToPoint: CGPointMake(433.15, 91.39) controlPoint1: CGPointMake(433.45, 105.59) controlPoint2: CGPointMake(431.65, 98.39)];
        [bezierPath addCurveToPoint: CGPointMake(441.06, 54.69) controlPoint1: CGPointMake(433.15, 91.39) controlPoint2: CGPointMake(437.38, 71.8)];
        [bezierPath addLineToPoint: CGPointMake(425.95, 54.69)];
        [bezierPath addLineToPoint: CGPointMake(425.95, 33.39)];
        [bezierPath addCurveToPoint: CGPointMake(455.55, 3.79) controlPoint1: CGPointMake(425.95, 17.09) controlPoint2: CGPointMake(439.25, 3.79)];
        [bezierPath addLineToPoint: CGPointMake(551.95, 3.79)];
        [bezierPath addCurveToPoint: CGPointMake(581.55, 33.39) controlPoint1: CGPointMake(568.25, 3.79) controlPoint2: CGPointMake(581.55, 17.09)];
        [bezierPath closePath];
        [strokeColor setFill];
        [bezierPath fill];



        CGContextRestoreGState(context);
    }
}

+ (void)drawSimilarWineIconWithScaleX: (CGFloat)scaleX scaleY: (CGFloat)scaleY strokeColorName: (NSString*)strokeColorName;
{
    //// General Declarations
    CGContextRef context = UIGraphicsGetCurrentContext();


    //// Variable Declarations
    UIColor* strokeColor = [strokeColorName isEqualToString: @"myTintColor"] ? SHStyleKit.myTintColor : ([strokeColorName isEqualToString: @"myTintTransparentColor"] ? SHStyleKit.myTintTransparentColor : ([strokeColorName isEqualToString: @"myTextColor"] ? SHStyleKit.myTextColor : ([strokeColorName isEqualToString: @"myTextTransparentColor"] ? SHStyleKit.myTextTransparentColor : ([strokeColorName isEqualToString: @"myWhiteColor"] ? SHStyleKit.myWhiteColor : ([strokeColorName isEqualToString: @"myWhiteTransparentColor"] ? SHStyleKit.myWhiteTransparentColor : ([strokeColorName isEqualToString: @"myBlackColor"] ? SHStyleKit.myBlackColor : ([strokeColorName isEqualToString: @"default"] ? SHStyleKit.myWhiteColor : SHStyleKit.myClearColor)))))));

    //// Group
    {
        CGContextSaveGState(context);
        CGContextScaleCTM(context, scaleX, scaleY);



        //// Bezier Drawing
        UIBezierPath* bezierPath = UIBezierPath.bezierPath;
        [bezierPath moveToPoint: CGPointMake(1024, 160)];
        [bezierPath addLineToPoint: CGPointMake(895.5, 160)];
        [bezierPath addCurveToPoint: CGPointMake(898.85, 80) controlPoint1: CGPointMake(897.34, 134.72) controlPoint2: CGPointMake(898.45, 108.06)];
        [bezierPath addCurveToPoint: CGPointMake(1024, 80) controlPoint1: CGPointMake(898.85, 80) controlPoint2: CGPointMake(973.31, 80)];
        [bezierPath addCurveToPoint: CGPointMake(1024, 160) controlPoint1: CGPointMake(1024, 102.85) controlPoint2: CGPointMake(1024, 129.85)];
        [bezierPath closePath];
        [bezierPath moveToPoint: CGPointMake(723.35, 59.89)];
        [bezierPath addLineToPoint: CGPointMake(288.35, 59.89)];
        [bezierPath addCurveToPoint: CGPointMake(304.06, 198.77) controlPoint1: CGPointMake(291.42, 110.88) controlPoint2: CGPointMake(296.67, 157.18)];
        [bezierPath addLineToPoint: CGPointMake(716.38, 198.77)];
        [bezierPath addCurveToPoint: CGPointMake(723.35, 59.89) controlPoint1: CGPointMake(721.02, 157.13) controlPoint2: CGPointMake(723.35, 110.81)];
        [bezierPath closePath];
        [bezierPath moveToPoint: CGPointMake(1024, 300)];
        [bezierPath addLineToPoint: CGPointMake(874.67, 300)];
        [bezierPath addCurveToPoint: CGPointMake(889.46, 220) controlPoint1: CGPointMake(880.74, 275.43) controlPoint2: CGPointMake(885.67, 248.78)];
        [bezierPath addCurveToPoint: CGPointMake(1024, 220) controlPoint1: CGPointMake(889.46, 220) controlPoint2: CGPointMake(970.51, 220)];
        [bezierPath addCurveToPoint: CGPointMake(1024, 300) controlPoint1: CGPointMake(1024, 245.37) controlPoint2: CGPointMake(1024, 272.18)];
        [bezierPath closePath];
        [bezierPath moveToPoint: CGPointMake(1024, 440)];
        [bezierPath addLineToPoint: CGPointMake(812.24, 440)];
        [bezierPath addCurveToPoint: CGPointMake(856.01, 360) controlPoint1: CGPointMake(829.4, 417.77) controlPoint2: CGPointMake(843.98, 391.15)];
        [bezierPath addCurveToPoint: CGPointMake(1024, 360) controlPoint1: CGPointMake(856.01, 360) controlPoint2: CGPointMake(961.11, 360)];
        [bezierPath addCurveToPoint: CGPointMake(1024, 440) controlPoint1: CGPointMake(1024, 386.19) controlPoint2: CGPointMake(1024, 412.96)];
        [bezierPath closePath];
        [bezierPath moveToPoint: CGPointMake(712.96, 225.71)];
        [bezierPath addLineToPoint: CGPointMake(309.3, 225.71)];
        [bezierPath addCurveToPoint: CGPointMake(517.65, 471.97) controlPoint1: CGPointMake(343.33, 386.73) controlPoint2: CGPointMake(413.08, 469.37)];
        [bezierPath addCurveToPoint: CGPointMake(632.05, 429.02) controlPoint1: CGPointMake(564.45, 472.97) controlPoint2: CGPointMake(601.95, 458.75)];
        [bezierPath addCurveToPoint: CGPointMake(712.96, 225.71) controlPoint1: CGPointMake(672.27, 389.17) controlPoint2: CGPointMake(699.32, 321.07)];
        [bezierPath closePath];
        [bezierPath moveToPoint: CGPointMake(1024, 580)];
        [bezierPath addLineToPoint: CGPointMake(665.6, 580)];
        [bezierPath addCurveToPoint: CGPointMake(665.6, 521.06) controlPoint1: CGPointMake(665.6, 544.94) controlPoint2: CGPointMake(665.6, 521.06)];
        [bezierPath addCurveToPoint: CGPointMake(741.02, 500) controlPoint1: CGPointMake(692.99, 518.58) controlPoint2: CGPointMake(718.18, 511.54)];
        [bezierPath addCurveToPoint: CGPointMake(1024, 500) controlPoint1: CGPointMake(741.02, 500) controlPoint2: CGPointMake(933.5, 500)];
        [bezierPath addCurveToPoint: CGPointMake(1024, 580) controlPoint1: CGPointMake(1024, 526.72) controlPoint2: CGPointMake(1024, 553.48)];
        [bezierPath closePath];
        [bezierPath moveToPoint: CGPointMake(665.6, 640)];
        [bezierPath addCurveToPoint: CGPointMake(1024, 640) controlPoint1: CGPointMake(665.6, 640) controlPoint2: CGPointMake(918, 640)];
        [bezierPath addCurveToPoint: CGPointMake(1024, 720) controlPoint1: CGPointMake(1024, 667.3) controlPoint2: CGPointMake(1024, 694.08)];
        [bezierPath addLineToPoint: CGPointMake(665.6, 720)];
        [bezierPath addCurveToPoint: CGPointMake(665.6, 640) controlPoint1: CGPointMake(665.6, 693.44) controlPoint2: CGPointMake(665.6, 665.86)];
        [bezierPath addLineToPoint: CGPointMake(665.6, 640)];
        [bezierPath closePath];
        [bezierPath moveToPoint: CGPointMake(1024, 770)];
        [bezierPath addCurveToPoint: CGPointMake(1024, 850) controlPoint1: CGPointMake(1024, 798.26) controlPoint2: CGPointMake(1024, 825.09)];
        [bezierPath addLineToPoint: CGPointMake(665.6, 850)];
        [bezierPath addCurveToPoint: CGPointMake(665.6, 770) controlPoint1: CGPointMake(665.6, 835.86) controlPoint2: CGPointMake(665.6, 806.1)];
        [bezierPath addCurveToPoint: CGPointMake(1024, 770) controlPoint1: CGPointMake(665.6, 770) controlPoint2: CGPointMake(918, 770)];
        [bezierPath closePath];
        [bezierPath moveToPoint: CGPointMake(514.85, 921.24)];
        [bezierPath addCurveToPoint: CGPointMake(462.15, 969.95) controlPoint1: CGPointMake(500.25, 939.43) controlPoint2: CGPointMake(482.65, 955.74)];
        [bezierPath addLineToPoint: CGPointMake(563.75, 969.95)];
        [bezierPath addCurveToPoint: CGPointMake(514.85, 921.24) controlPoint1: CGPointMake(544.05, 955.74) controlPoint2: CGPointMake(527.75, 939.43)];
        [bezierPath closePath];
        [bezierPath moveToPoint: CGPointMake(776.95, 5.9)];
        [bezierPath addCurveToPoint: CGPointMake(777.35, 32.45) controlPoint1: CGPointMake(776.95, 5.9) controlPoint2: CGPointMake(777.35, 32.45)];
        [bezierPath addCurveToPoint: CGPointMake(670.25, 467.2) controlPoint1: CGPointMake(780.65, 250.37) controlPoint2: CGPointMake(745.65, 392.54)];
        [bezierPath addCurveToPoint: CGPointMake(544.15, 524.96) controlPoint1: CGPointMake(635.95, 501.1) controlPoint2: CGPointMake(593.65, 520.49)];
        [bezierPath addLineToPoint: CGPointMake(544.15, 862.78)];
        [bezierPath addCurveToPoint: CGPointMake(657.45, 958.32) controlPoint1: CGPointMake(561.15, 905.23) controlPoint2: CGPointMake(598.25, 936.55)];
        [bezierPath addCurveToPoint: CGPointMake(679.25, 996.1) controlPoint1: CGPointMake(672.95, 964.09) controlPoint2: CGPointMake(682.15, 979.99)];
        [bezierPath addCurveToPoint: CGPointMake(645.75, 1023.94) controlPoint1: CGPointMake(676.35, 1012.21) controlPoint2: CGPointMake(662.25, 1023.94)];
        [bezierPath addLineToPoint: CGPointMake(373.05, 1023.94)];
        [bezierPath addCurveToPoint: CGPointMake(340.65, 996.9) controlPoint1: CGPointMake(357.05, 1023.94) controlPoint2: CGPointMake(343.45, 1012.6)];
        [bezierPath addCurveToPoint: CGPointMake(361.85, 960.51) controlPoint1: CGPointMake(337.85, 981.19) controlPoint2: CGPointMake(346.85, 965.88)];
        [bezierPath addCurveToPoint: CGPointMake(489.95, 861.29) controlPoint1: CGPointMake(424.25, 938.14) controlPoint2: CGPointMake(466.25, 905.63)];
        [bezierPath addLineToPoint: CGPointMake(489.95, 523.87)];
        [bezierPath addCurveToPoint: CGPointMake(232.75, 34.04) controlPoint1: CGPointMake(332.55, 504.08) controlPoint2: CGPointMake(246.05, 339.45)];
        [bezierPath addLineToPoint: CGPointMake(231.55, 5.9)];
        [bezierPath addLineToPoint: CGPointMake(776.95, 5.9)];
        [bezierPath addLineToPoint: CGPointMake(776.95, 5.9)];
        [bezierPath closePath];
        [strokeColor setFill];
        [bezierPath fill];



        CGContextRestoreGState(context);
    }
}

+ (void)drawSimilarCocktailIconWithScaleX: (CGFloat)scaleX scaleY: (CGFloat)scaleY strokeColorName: (NSString*)strokeColorName;
{
    //// General Declarations
    CGContextRef context = UIGraphicsGetCurrentContext();


    //// Variable Declarations
    UIColor* strokeColor = [strokeColorName isEqualToString: @"myTintColor"] ? SHStyleKit.myTintColor : ([strokeColorName isEqualToString: @"myTintTransparentColor"] ? SHStyleKit.myTintTransparentColor : ([strokeColorName isEqualToString: @"myTextColor"] ? SHStyleKit.myTextColor : ([strokeColorName isEqualToString: @"myTextTransparentColor"] ? SHStyleKit.myTextTransparentColor : ([strokeColorName isEqualToString: @"myWhiteColor"] ? SHStyleKit.myWhiteColor : ([strokeColorName isEqualToString: @"myWhiteTransparentColor"] ? SHStyleKit.myWhiteTransparentColor : ([strokeColorName isEqualToString: @"myBlackColor"] ? SHStyleKit.myBlackColor : ([strokeColorName isEqualToString: @"default"] ? SHStyleKit.myWhiteColor : SHStyleKit.myClearColor)))))));

    //// Group
    {
        CGContextSaveGState(context);
        CGContextScaleCTM(context, scaleX, scaleY);



        //// Bezier Drawing
        UIBezierPath* bezierPath = UIBezierPath.bezierPath;
        [bezierPath moveToPoint: CGPointMake(862.1, 0)];
        [bezierPath addCurveToPoint: CGPointMake(885.3, 21.98) controlPoint1: CGPointMake(862.1, 0) controlPoint2: CGPointMake(885.3, 21.98)];
        [bezierPath addLineToPoint: CGPointMake(832.1, 77.52)];
        [bezierPath addCurveToPoint: CGPointMake(817.8, 132.17) controlPoint1: CGPointMake(838.2, 95.11) controlPoint2: CGPointMake(833.2, 116.69)];
        [bezierPath addCurveToPoint: CGPointMake(765.6, 146.96) controlPoint1: CGPointMake(803, 146.86) controlPoint2: CGPointMake(782.6, 151.85)];
        [bezierPath addLineToPoint: CGPointMake(712.2, 202.6)];
        [bezierPath addLineToPoint: CGPointMake(915, 202.6)];
        [bezierPath addLineToPoint: CGPointMake(544.5, 588.92)];
        [bezierPath addLineToPoint: CGPointMake(544.6, 588.92)];
        [bezierPath addLineToPoint: CGPointMake(544.6, 914.31)];
        [bezierPath addLineToPoint: CGPointMake(723.6, 991.93)];
        [bezierPath addCurveToPoint: CGPointMake(317.6, 991.93) controlPoint1: CGPointMake(519.5, 1063.76) controlPoint2: CGPointMake(317.6, 991.93)];
        [bezierPath addLineToPoint: CGPointMake(496.6, 914.31)];
        [bezierPath addLineToPoint: CGPointMake(496.6, 588.92)];
        [bezierPath addLineToPoint: CGPointMake(126, 202.6)];
        [bezierPath addLineToPoint: CGPointMake(668, 202.6)];
        [bezierPath addLineToPoint: CGPointMake(740.3, 127.08)];
        [bezierPath addCurveToPoint: CGPointMake(751.5, 65.84) controlPoint1: CGPointMake(730.1, 108.69) controlPoint2: CGPointMake(734, 83.42)];
        [bezierPath addCurveToPoint: CGPointMake(810.6, 53.75) controlPoint1: CGPointMake(768.4, 48.95) controlPoint2: CGPointMake(792.4, 44.86)];
        [bezierPath addLineToPoint: CGPointMake(862.1, 0)];
        [bezierPath addLineToPoint: CGPointMake(862.1, 0)];
        [bezierPath closePath];
        [bezierPath moveToPoint: CGPointMake(912.88, 80)];
        [bezierPath addCurveToPoint: CGPointMake(1024, 80) controlPoint1: CGPointMake(912.88, 80) controlPoint2: CGPointMake(977.63, 80)];
        [bezierPath addCurveToPoint: CGPointMake(1024, 160) controlPoint1: CGPointMake(1024, 102.85) controlPoint2: CGPointMake(1024, 129.85)];
        [bezierPath addLineToPoint: CGPointMake(833.08, 160)];
        [bezierPath addCurveToPoint: CGPointMake(845.6, 146.96) controlPoint1: CGPointMake(840.32, 152.46) controlPoint2: CGPointMake(845.6, 146.96)];
        [bezierPath addCurveToPoint: CGPointMake(897.8, 132.17) controlPoint1: CGPointMake(862.6, 151.85) controlPoint2: CGPointMake(883, 146.86)];
        [bezierPath addCurveToPoint: CGPointMake(912.88, 80) controlPoint1: CGPointMake(912.48, 117.41) controlPoint2: CGPointMake(917.71, 97.1)];
        [bezierPath closePath];
        [bezierPath moveToPoint: CGPointMake(978.32, 220)];
        [bezierPath addCurveToPoint: CGPointMake(1024, 220) controlPoint1: CGPointMake(978.32, 220) controlPoint2: CGPointMake(1001.13, 220)];
        [bezierPath addCurveToPoint: CGPointMake(1024, 300) controlPoint1: CGPointMake(1024, 245.37) controlPoint2: CGPointMake(1024, 272.18)];
        [bezierPath addLineToPoint: CGPointMake(901.59, 300)];
        [bezierPath addCurveToPoint: CGPointMake(978.31, 220) controlPoint1: CGPointMake(934.23, 265.97) controlPoint2: CGPointMake(961.77, 237.25)];
        [bezierPath addLineToPoint: CGPointMake(978.32, 220)];
        [bezierPath closePath];
        [bezierPath moveToPoint: CGPointMake(844.05, 360)];
        [bezierPath addCurveToPoint: CGPointMake(1024, 360) controlPoint1: CGPointMake(844.05, 360) controlPoint2: CGPointMake(957.93, 360)];
        [bezierPath addCurveToPoint: CGPointMake(1024, 440) controlPoint1: CGPointMake(1024, 386.19) controlPoint2: CGPointMake(1024, 412.96)];
        [bezierPath addLineToPoint: CGPointMake(767.33, 440)];
        [bezierPath addCurveToPoint: CGPointMake(844.05, 360) controlPoint1: CGPointMake(792.46, 413.79) controlPoint2: CGPointMake(818.7, 386.43)];
        [bezierPath addLineToPoint: CGPointMake(844.05, 360)];
        [bezierPath closePath];
        [bezierPath moveToPoint: CGPointMake(574.1, 300.41)];
        [bezierPath addLineToPoint: CGPointMake(281.1, 300.41)];
        [bezierPath addLineToPoint: CGPointMake(520.6, 550.06)];
        [bezierPath addLineToPoint: CGPointMake(760.1, 300.51)];
        [bezierPath addLineToPoint: CGPointMake(618.4, 300.51)];
        [bezierPath addLineToPoint: CGPointMake(517.8, 405.3)];
        [bezierPath addLineToPoint: CGPointMake(494.8, 383.23)];
        [bezierPath addLineToPoint: CGPointMake(574.1, 300.41)];
        [bezierPath closePath];
        [bezierPath moveToPoint: CGPointMake(1024, 580)];
        [bezierPath addLineToPoint: CGPointMake(633.06, 580)];
        [bezierPath addCurveToPoint: CGPointMake(709.78, 500) controlPoint1: CGPointMake(646.52, 565.97) controlPoint2: CGPointMake(674.74, 536.53)];
        [bezierPath addCurveToPoint: CGPointMake(1024, 500) controlPoint1: CGPointMake(709.78, 500) controlPoint2: CGPointMake(926.88, 500)];
        [bezierPath addCurveToPoint: CGPointMake(1024, 580) controlPoint1: CGPointMake(1024, 526.72) controlPoint2: CGPointMake(1024, 553.48)];
        [bezierPath closePath];
        [bezierPath moveToPoint: CGPointMake(624.6, 640)];
        [bezierPath addCurveToPoint: CGPointMake(1024, 640) controlPoint1: CGPointMake(624.6, 640) controlPoint2: CGPointMake(910.19, 640)];
        [bezierPath addCurveToPoint: CGPointMake(1024, 720) controlPoint1: CGPointMake(1024, 667.3) controlPoint2: CGPointMake(1024, 694.08)];
        [bezierPath addLineToPoint: CGPointMake(624.6, 720)];
        [bezierPath addCurveToPoint: CGPointMake(624.6, 640) controlPoint1: CGPointMake(624.6, 690.54) controlPoint2: CGPointMake(624.6, 662.52)];
        [bezierPath addLineToPoint: CGPointMake(624.6, 640)];
        [bezierPath closePath];
        [bezierPath moveToPoint: CGPointMake(1024, 770)];
        [bezierPath addCurveToPoint: CGPointMake(1024, 850) controlPoint1: CGPointMake(1024, 798.26) controlPoint2: CGPointMake(1024, 825.09)];
        [bezierPath addLineToPoint: CGPointMake(624.6, 850)];
        [bezierPath addCurveToPoint: CGPointMake(624.6, 770) controlPoint1: CGPointMake(624.6, 826.51) controlPoint2: CGPointMake(624.6, 798.64)];
        [bezierPath addCurveToPoint: CGPointMake(1024, 770) controlPoint1: CGPointMake(624.6, 770) controlPoint2: CGPointMake(910.19, 770)];
        [bezierPath closePath];
        [strokeColor setFill];
        [bezierPath fill];



        CGContextRestoreGState(context);
    }
}

+ (void)drawSimilarBeerIconWithScaleX: (CGFloat)scaleX scaleY: (CGFloat)scaleY strokeColorName: (NSString*)strokeColorName;
{
    //// General Declarations
    CGContextRef context = UIGraphicsGetCurrentContext();


    //// Variable Declarations
    UIColor* strokeColor = [strokeColorName isEqualToString: @"myTintColor"] ? SHStyleKit.myTintColor : ([strokeColorName isEqualToString: @"myTintTransparentColor"] ? SHStyleKit.myTintTransparentColor : ([strokeColorName isEqualToString: @"myTextColor"] ? SHStyleKit.myTextColor : ([strokeColorName isEqualToString: @"myTextTransparentColor"] ? SHStyleKit.myTextTransparentColor : ([strokeColorName isEqualToString: @"myWhiteColor"] ? SHStyleKit.myWhiteColor : ([strokeColorName isEqualToString: @"myWhiteTransparentColor"] ? SHStyleKit.myWhiteTransparentColor : ([strokeColorName isEqualToString: @"myBlackColor"] ? SHStyleKit.myBlackColor : ([strokeColorName isEqualToString: @"default"] ? SHStyleKit.myWhiteColor : SHStyleKit.myClearColor)))))));

    //// Group
    {
        CGContextSaveGState(context);
        CGContextScaleCTM(context, scaleX, scaleY);



        //// Bezier Drawing
        UIBezierPath* bezierPath = UIBezierPath.bezierPath;
        [bezierPath moveToPoint: CGPointMake(714.08, 42.35)];
        [bezierPath addLineToPoint: CGPointMake(290.48, 42.35)];
        [bezierPath addCurveToPoint: CGPointMake(263.8, 145.83) controlPoint1: CGPointMake(277.79, 80.6) controlPoint2: CGPointMake(269.14, 114.75)];
        [bezierPath addCurveToPoint: CGPointMake(733.27, 142.44) controlPoint1: CGPointMake(339.25, 145.29) controlPoint2: CGPointMake(643.69, 143.08)];
        [bezierPath addCurveToPoint: CGPointMake(714.08, 42.35) controlPoint1: CGPointMake(729.71, 112.25) controlPoint2: CGPointMake(723.52, 79.17)];
        [bezierPath closePath];
        [bezierPath moveToPoint: CGPointMake(1024, 158)];
        [bezierPath addLineToPoint: CGPointMake(846.27, 158)];
        [bezierPath addCurveToPoint: CGPointMake(834.64, 78) controlPoint1: CGPointMake(844.19, 133.25) controlPoint2: CGPointMake(840.43, 106.72)];
        [bezierPath addCurveToPoint: CGPointMake(1024, 78) controlPoint1: CGPointMake(834.64, 78) controlPoint2: CGPointMake(955.93, 78)];
        [bezierPath addCurveToPoint: CGPointMake(1024, 158) controlPoint1: CGPointMake(1024, 100.77) controlPoint2: CGPointMake(1024, 127.77)];
        [bezierPath closePath];
        [bezierPath moveToPoint: CGPointMake(1024, 298)];
        [bezierPath addLineToPoint: CGPointMake(839.4, 298)];
        [bezierPath addCurveToPoint: CGPointMake(848.1, 218) controlPoint1: CGPointMake(844.2, 273.22) controlPoint2: CGPointMake(847.35, 246.86)];
        [bezierPath addCurveToPoint: CGPointMake(1024, 218) controlPoint1: CGPointMake(848.1, 218) controlPoint2: CGPointMake(959.41, 218)];
        [bezierPath addCurveToPoint: CGPointMake(1024, 298) controlPoint1: CGPointMake(1024, 243.36) controlPoint2: CGPointMake(1024, 270.17)];
        [bezierPath closePath];
        [bezierPath moveToPoint: CGPointMake(599.59, 279.81)];
        [bezierPath addCurveToPoint: CGPointMake(599.59, 309.2) controlPoint1: CGPointMake(607.71, 287.93) controlPoint2: CGPointMake(607.71, 301.09)];
        [bezierPath addCurveToPoint: CGPointMake(570.17, 309.2) controlPoint1: CGPointMake(591.46, 317.32) controlPoint2: CGPointMake(578.29, 317.32)];
        [bezierPath addCurveToPoint: CGPointMake(570.17, 279.81) controlPoint1: CGPointMake(562.05, 301.09) controlPoint2: CGPointMake(562.05, 287.93)];
        [bezierPath addCurveToPoint: CGPointMake(599.59, 279.81) controlPoint1: CGPointMake(578.29, 271.7) controlPoint2: CGPointMake(591.46, 271.7)];
        [bezierPath closePath];
        [bezierPath moveToPoint: CGPointMake(1024, 438)];
        [bezierPath addLineToPoint: CGPointMake(795.92, 438)];
        [bezierPath addLineToPoint: CGPointMake(796.64, 436.07)];
        [bezierPath addCurveToPoint: CGPointMake(824.19, 358) controlPoint1: CGPointMake(806.36, 410.2) controlPoint2: CGPointMake(815.96, 384.66)];
        [bezierPath addCurveToPoint: CGPointMake(1024, 358) controlPoint1: CGPointMake(824.19, 358) controlPoint2: CGPointMake(953.3, 358)];
        [bezierPath addCurveToPoint: CGPointMake(1024, 438) controlPoint1: CGPointMake(1024, 384.18) controlPoint2: CGPointMake(1024, 410.95)];
        [bezierPath closePath];
        [bezierPath moveToPoint: CGPointMake(545.88, 448.06)];
        [bezierPath addCurveToPoint: CGPointMake(545.88, 464.44) controlPoint1: CGPointMake(550.41, 452.58) controlPoint2: CGPointMake(550.41, 459.92)];
        [bezierPath addCurveToPoint: CGPointMake(529.48, 464.44) controlPoint1: CGPointMake(541.35, 468.97) controlPoint2: CGPointMake(534.01, 468.97)];
        [bezierPath addCurveToPoint: CGPointMake(529.48, 448.06) controlPoint1: CGPointMake(524.95, 459.92) controlPoint2: CGPointMake(524.95, 452.58)];
        [bezierPath addCurveToPoint: CGPointMake(545.88, 448.06) controlPoint1: CGPointMake(534.01, 443.53) controlPoint2: CGPointMake(541.35, 443.53)];
        [bezierPath closePath];
        [bezierPath moveToPoint: CGPointMake(774.24, 498)];
        [bezierPath addCurveToPoint: CGPointMake(1024, 498) controlPoint1: CGPointMake(774.24, 498) controlPoint2: CGPointMake(941.46, 498)];
        [bezierPath addCurveToPoint: CGPointMake(1024, 578) controlPoint1: CGPointMake(1024, 524.72) controlPoint2: CGPointMake(1024, 551.49)];
        [bezierPath addLineToPoint: CGPointMake(751.71, 578)];
        [bezierPath addCurveToPoint: CGPointMake(774.24, 498) controlPoint1: CGPointMake(758.13, 549.02) controlPoint2: CGPointMake(765.93, 522.72)];
        [bezierPath addLineToPoint: CGPointMake(774.24, 498)];
        [bezierPath closePath];
        [bezierPath moveToPoint: CGPointMake(602.11, 569.11)];
        [bezierPath addCurveToPoint: CGPointMake(602.11, 588.75) controlPoint1: CGPointMake(607.54, 574.53) controlPoint2: CGPointMake(607.54, 583.33)];
        [bezierPath addCurveToPoint: CGPointMake(582.45, 588.75) controlPoint1: CGPointMake(596.68, 594.17) controlPoint2: CGPointMake(587.88, 594.17)];
        [bezierPath addCurveToPoint: CGPointMake(582.45, 569.11) controlPoint1: CGPointMake(577.02, 583.33) controlPoint2: CGPointMake(577.02, 574.53)];
        [bezierPath addCurveToPoint: CGPointMake(602.11, 569.11) controlPoint1: CGPointMake(587.88, 563.69) controlPoint2: CGPointMake(596.68, 563.69)];
        [bezierPath closePath];
        [bezierPath moveToPoint: CGPointMake(741.2, 638)];
        [bezierPath addCurveToPoint: CGPointMake(1024, 638) controlPoint1: CGPointMake(741.2, 638) controlPoint2: CGPointMake(934.18, 638)];
        [bezierPath addCurveToPoint: CGPointMake(1024, 718) controlPoint1: CGPointMake(1024, 665.31) controlPoint2: CGPointMake(1024, 692.09)];
        [bezierPath addLineToPoint: CGPointMake(735.17, 718)];
        [bezierPath addCurveToPoint: CGPointMake(741.2, 638) controlPoint1: CGPointMake(735.87, 689.11) controlPoint2: CGPointMake(738, 662.6)];
        [bezierPath addLineToPoint: CGPointMake(741.2, 638)];
        [bezierPath closePath];
        [bezierPath moveToPoint: CGPointMake(567.7, 715.47)];
        [bezierPath addCurveToPoint: CGPointMake(567.7, 736.1) controlPoint1: CGPointMake(573.4, 721.17) controlPoint2: CGPointMake(573.4, 730.4)];
        [bezierPath addCurveToPoint: CGPointMake(547.05, 736.1) controlPoint1: CGPointMake(562, 741.8) controlPoint2: CGPointMake(552.76, 741.8)];
        [bezierPath addCurveToPoint: CGPointMake(547.05, 715.47) controlPoint1: CGPointMake(541.35, 730.4) controlPoint2: CGPointMake(541.35, 721.17)];
        [bezierPath addCurveToPoint: CGPointMake(567.7, 715.47) controlPoint1: CGPointMake(552.76, 709.78) controlPoint2: CGPointMake(562, 709.78)];
        [bezierPath closePath];
        [bezierPath moveToPoint: CGPointMake(735.39, 768)];
        [bezierPath addCurveToPoint: CGPointMake(1024, 768) controlPoint1: CGPointMake(735.39, 768) controlPoint2: CGPointMake(932.93, 768)];
        [bezierPath addCurveToPoint: CGPointMake(1024, 848) controlPoint1: CGPointMake(1024, 796.29) controlPoint2: CGPointMake(1024, 823.13)];
        [bezierPath addLineToPoint: CGPointMake(740.93, 848)];
        [bezierPath addCurveToPoint: CGPointMake(735.38, 768) controlPoint1: CGPointMake(737.95, 819.54) controlPoint2: CGPointMake(736.16, 792.95)];
        [bezierPath addLineToPoint: CGPointMake(735.39, 768)];
        [bezierPath closePath];
        [bezierPath moveToPoint: CGPointMake(736.65, 184.77)];
        [bezierPath addCurveToPoint: CGPointMake(258.33, 188.23) controlPoint1: CGPointMake(648.9, 185.41) controlPoint2: CGPointMake(323.38, 187.76)];
        [bezierPath addCurveToPoint: CGPointMake(310.18, 433.47) controlPoint1: CGPointMake(250.07, 287.27) controlPoint2: CGPointMake(277.78, 354.7)];
        [bezierPath addCurveToPoint: CGPointMake(362.58, 977.14) controlPoint1: CGPointMake(359.48, 553.56) controlPoint2: CGPointMake(415.28, 689.12)];
        [bezierPath addLineToPoint: CGPointMake(648.48, 977.14)];
        [bezierPath addCurveToPoint: CGPointMake(688.08, 421.18) controlPoint1: CGPointMake(591.88, 677.33) controlPoint2: CGPointMake(642.98, 541.47)];
        [bezierPath addCurveToPoint: CGPointMake(736.65, 184.77) controlPoint1: CGPointMake(715.6, 347.96) controlPoint2: CGPointMake(740.56, 281.53)];
        [bezierPath closePath];
        [bezierPath moveToPoint: CGPointMake(746.68, -0)];
        [bezierPath addCurveToPoint: CGPointMake(750.98, 15.58) controlPoint1: CGPointMake(746.68, -0) controlPoint2: CGPointMake(750.98, 15.58)];
        [bezierPath addCurveToPoint: CGPointMake(727.88, 436.07) controlPoint1: CGPointMake(807.78, 223.28) controlPoint2: CGPointMake(768.98, 326.68)];
        [bezierPath addCurveToPoint: CGPointMake(695.08, 994.12) controlPoint1: CGPointMake(683.48, 554.35) controlPoint2: CGPointMake(633.08, 688.42)];
        [bezierPath addLineToPoint: CGPointMake(700.18, 1019.5)];
        [bezierPath addLineToPoint: CGPointMake(311.18, 1019.5)];
        [bezierPath addLineToPoint: CGPointMake(316.28, 994.22)];
        [bezierPath addCurveToPoint: CGPointMake(270.98, 449.56) controlPoint1: CGPointMake(374.48, 701.31) controlPoint2: CGPointMake(319.48, 567.54)];
        [bezierPath addCurveToPoint: CGPointMake(255.28, 14.18) controlPoint1: CGPointMake(224.38, 336.17) controlPoint2: CGPointMake(180.38, 229.17)];
        [bezierPath addLineToPoint: CGPointMake(260.28, -0)];
        [bezierPath addLineToPoint: CGPointMake(746.68, -0)];
        [bezierPath addLineToPoint: CGPointMake(746.68, -0)];
        [bezierPath closePath];
        [strokeColor setFill];
        [bezierPath fill];



        CGContextRestoreGState(context);
    }
}

+ (void)drawSimilarSpotIconWithScaleX: (CGFloat)scaleX scaleY: (CGFloat)scaleY strokeColorName: (NSString*)strokeColorName;
{
    //// General Declarations
    CGContextRef context = UIGraphicsGetCurrentContext();


    //// Variable Declarations
    UIColor* strokeColor = [strokeColorName isEqualToString: @"myTintColor"] ? SHStyleKit.myTintColor : ([strokeColorName isEqualToString: @"myTintTransparentColor"] ? SHStyleKit.myTintTransparentColor : ([strokeColorName isEqualToString: @"myTextColor"] ? SHStyleKit.myTextColor : ([strokeColorName isEqualToString: @"myTextTransparentColor"] ? SHStyleKit.myTextTransparentColor : ([strokeColorName isEqualToString: @"myWhiteColor"] ? SHStyleKit.myWhiteColor : ([strokeColorName isEqualToString: @"myWhiteTransparentColor"] ? SHStyleKit.myWhiteTransparentColor : ([strokeColorName isEqualToString: @"myBlackColor"] ? SHStyleKit.myBlackColor : ([strokeColorName isEqualToString: @"default"] ? SHStyleKit.myWhiteColor : SHStyleKit.myClearColor)))))));

    //// Group
    {
        CGContextSaveGState(context);
        CGContextScaleCTM(context, scaleX, scaleY);



        //// Bezier Drawing
        UIBezierPath* bezierPath = UIBezierPath.bezierPath;
        [bezierPath moveToPoint: CGPointMake(1024, 160)];
        [bezierPath addLineToPoint: CGPointMake(816.31, 160)];
        [bezierPath addCurveToPoint: CGPointMake(750.45, 80) controlPoint1: CGPointMake(798.8, 129.9) controlPoint2: CGPointMake(776.5, 102.89)];
        [bezierPath addCurveToPoint: CGPointMake(1024, 80) controlPoint1: CGPointMake(750.45, 80) controlPoint2: CGPointMake(919.35, 80)];
        [bezierPath addCurveToPoint: CGPointMake(1024, 160) controlPoint1: CGPointMake(1024, 102.85) controlPoint2: CGPointMake(1024, 129.85)];
        [bezierPath closePath];
        [bezierPath moveToPoint: CGPointMake(843.31, 220)];
        [bezierPath addCurveToPoint: CGPointMake(1024, 220) controlPoint1: CGPointMake(843.31, 220) controlPoint2: CGPointMake(947.14, 220)];
        [bezierPath addCurveToPoint: CGPointMake(1024, 300) controlPoint1: CGPointMake(1024, 245.37) controlPoint2: CGPointMake(1024, 272.18)];
        [bezierPath addLineToPoint: CGPointMake(858.62, 300)];
        [bezierPath addCurveToPoint: CGPointMake(843.31, 220) controlPoint1: CGPointMake(856.96, 272.24) controlPoint2: CGPointMake(851.7, 245.42)];
        [bezierPath addLineToPoint: CGPointMake(843.31, 220)];
        [bezierPath closePath];
        [bezierPath moveToPoint: CGPointMake(487.1, 264.65)];
        [bezierPath addCurveToPoint: CGPointMake(408.2, 343.09) controlPoint1: CGPointMake(443.6, 264.65) controlPoint2: CGPointMake(408.2, 299.84)];
        [bezierPath addCurveToPoint: CGPointMake(487.1, 421.53) controlPoint1: CGPointMake(408.2, 386.33) controlPoint2: CGPointMake(443.6, 421.53)];
        [bezierPath addCurveToPoint: CGPointMake(566, 343.09) controlPoint1: CGPointMake(530.6, 421.53) controlPoint2: CGPointMake(566, 386.33)];
        [bezierPath addCurveToPoint: CGPointMake(487.1, 264.65) controlPoint1: CGPointMake(566, 299.84) controlPoint2: CGPointMake(530.6, 264.65)];
        [bezierPath closePath];
        [bezierPath moveToPoint: CGPointMake(1024, 440)];
        [bezierPath addLineToPoint: CGPointMake(835.37, 440)];
        [bezierPath addCurveToPoint: CGPointMake(856.58, 360) controlPoint1: CGPointMake(845.9, 414.4) controlPoint2: CGPointMake(853.04, 387.52)];
        [bezierPath addCurveToPoint: CGPointMake(1024, 360) controlPoint1: CGPointMake(856.58, 360) controlPoint2: CGPointMake(951.51, 360)];
        [bezierPath addCurveToPoint: CGPointMake(1024, 440) controlPoint1: CGPointMake(1024, 386.19) controlPoint2: CGPointMake(1024, 412.96)];
        [bezierPath closePath];
        [bezierPath moveToPoint: CGPointMake(601, 343.19)];
        [bezierPath addCurveToPoint: CGPointMake(487.1, 456.42) controlPoint1: CGPointMake(601, 405.72) controlPoint2: CGPointMake(549.9, 456.42)];
        [bezierPath addCurveToPoint: CGPointMake(373.2, 343.19) controlPoint1: CGPointMake(424.3, 456.42) controlPoint2: CGPointMake(373.2, 405.62)];
        [bezierPath addCurveToPoint: CGPointMake(487.1, 229.85) controlPoint1: CGPointMake(373.2, 280.75) controlPoint2: CGPointMake(424.3, 229.85)];
        [bezierPath addCurveToPoint: CGPointMake(601, 343.19) controlPoint1: CGPointMake(549.9, 229.85) controlPoint2: CGPointMake(601, 280.65)];
        [bezierPath closePath];
        [bezierPath moveToPoint: CGPointMake(804.37, 500)];
        [bezierPath addCurveToPoint: CGPointMake(1024, 500) controlPoint1: CGPointMake(804.37, 500) controlPoint2: CGPointMake(934.96, 500)];
        [bezierPath addCurveToPoint: CGPointMake(1024, 580) controlPoint1: CGPointMake(1024, 526.73) controlPoint2: CGPointMake(1024, 553.5)];
        [bezierPath addLineToPoint: CGPointMake(763.01, 580)];
        [bezierPath addCurveToPoint: CGPointMake(804.37, 500) controlPoint1: CGPointMake(781.84, 543.58) controlPoint2: CGPointMake(796.64, 514.96)];
        [bezierPath addLineToPoint: CGPointMake(804.37, 500)];
        [bezierPath closePath];
        [bezierPath moveToPoint: CGPointMake(731.99, 640)];
        [bezierPath addCurveToPoint: CGPointMake(1024, 640) controlPoint1: CGPointMake(731.99, 640) controlPoint2: CGPointMake(914.29, 640)];
        [bezierPath addCurveToPoint: CGPointMake(1024, 720) controlPoint1: CGPointMake(1024, 667.32) controlPoint2: CGPointMake(1024, 694.1)];
        [bezierPath addLineToPoint: CGPointMake(690.63, 720)];
        [bezierPath addCurveToPoint: CGPointMake(731.99, 640) controlPoint1: CGPointMake(704.88, 692.44) controlPoint2: CGPointMake(718.87, 665.37)];
        [bezierPath addLineToPoint: CGPointMake(731.99, 640)];
        [bezierPath closePath];
        [bezierPath moveToPoint: CGPointMake(1024, 770)];
        [bezierPath addCurveToPoint: CGPointMake(1024, 850) controlPoint1: CGPointMake(1024, 798.32) controlPoint2: CGPointMake(1024, 825.16)];
        [bezierPath addLineToPoint: CGPointMake(623.42, 850)];
        [bezierPath addCurveToPoint: CGPointMake(664.78, 770) controlPoint1: CGPointMake(636.67, 824.36) controlPoint2: CGPointMake(650.66, 797.3)];
        [bezierPath addCurveToPoint: CGPointMake(1024, 770) controlPoint1: CGPointMake(664.78, 770) controlPoint2: CGPointMake(896.86, 770)];
        [bezierPath closePath];
        [bezierPath moveToPoint: CGPointMake(482.1, 46.43)];
        [bezierPath addCurveToPoint: CGPointMake(207.7, 319.23) controlPoint1: CGPointMake(330.8, 46.43) controlPoint2: CGPointMake(207.7, 168.81)];
        [bezierPath addCurveToPoint: CGPointMake(250.2, 464.87) controlPoint1: CGPointMake(207.7, 370.92) controlPoint2: CGPointMake(222.4, 421.33)];
        [bezierPath addLineToPoint: CGPointMake(251.3, 466.76)];
        [bezierPath addLineToPoint: CGPointMake(481.1, 915.43)];
        [bezierPath addLineToPoint: CGPointMake(714.2, 464.57)];
        [bezierPath addCurveToPoint: CGPointMake(756.5, 319.23) controlPoint1: CGPointMake(741.9, 421.03) controlPoint2: CGPointMake(756.5, 370.72)];
        [bezierPath addCurveToPoint: CGPointMake(482.1, 46.43) controlPoint1: CGPointMake(756.4, 168.81) controlPoint2: CGPointMake(633.4, 46.43)];
        [bezierPath closePath];
        [bezierPath moveToPoint: CGPointMake(803.2, 319.23)];
        [bezierPath addCurveToPoint: CGPointMake(754.3, 488.53) controlPoint1: CGPointMake(803.2, 379.27) controlPoint2: CGPointMake(786.3, 437.83)];
        [bezierPath addLineToPoint: CGPointMake(480.8, 1017.53)];
        [bezierPath addLineToPoint: CGPointMake(210.1, 488.83)];
        [bezierPath addCurveToPoint: CGPointMake(161, 319.23) controlPoint1: CGPointMake(178, 438.03) controlPoint2: CGPointMake(161, 379.37)];
        [bezierPath addCurveToPoint: CGPointMake(482.1, 0) controlPoint1: CGPointMake(161, 143.16) controlPoint2: CGPointMake(305.1, 0)];
        [bezierPath addCurveToPoint: CGPointMake(803.2, 319.23) controlPoint1: CGPointMake(659.1, 0) controlPoint2: CGPointMake(803.2, 143.26)];
        [bezierPath closePath];
        [strokeColor setFill];
        [bezierPath fill];



        CGContextRestoreGState(context);
    }
}

+ (void)drawStarIconWithScaleX: (CGFloat)scaleX scaleY: (CGFloat)scaleY strokeColorName: (NSString*)strokeColorName fillColorName: (NSString*)fillColorName;
{
    //// General Declarations
    CGContextRef context = UIGraphicsGetCurrentContext();


    //// Variable Declarations
    UIColor* strokeColor = [strokeColorName isEqualToString: @"myTintColor"] ? SHStyleKit.myTintColor : ([strokeColorName isEqualToString: @"myTintTransparentColor"] ? SHStyleKit.myTintTransparentColor : ([strokeColorName isEqualToString: @"myTextColor"] ? SHStyleKit.myTextColor : ([strokeColorName isEqualToString: @"myTextTransparentColor"] ? SHStyleKit.myTextTransparentColor : ([strokeColorName isEqualToString: @"myWhiteColor"] ? SHStyleKit.myWhiteColor : ([strokeColorName isEqualToString: @"myWhiteTransparentColor"] ? SHStyleKit.myWhiteTransparentColor : ([strokeColorName isEqualToString: @"myBlackColor"] ? SHStyleKit.myBlackColor : ([strokeColorName isEqualToString: @"default"] ? SHStyleKit.myWhiteColor : SHStyleKit.myClearColor)))))));
    UIColor* fillColor = [fillColorName isEqualToString: @"myTintColor"] ? SHStyleKit.myTintColor : ([fillColorName isEqualToString: @"myTintTransparentColor"] ? SHStyleKit.myTintTransparentColor : ([fillColorName isEqualToString: @"myTextTransparentColor"] ? SHStyleKit.myTextTransparentColor : ([fillColorName isEqualToString: @"myTextColor"] ? SHStyleKit.myTextColor : ([fillColorName isEqualToString: @"myWhiteColor"] ? SHStyleKit.myWhiteColor : ([fillColorName isEqualToString: @"myWhiteTransparentColor"] ? SHStyleKit.myWhiteTransparentColor : ([fillColorName isEqualToString: @"myBlackColor"] ? SHStyleKit.myBlackColor : ([fillColorName isEqualToString: @"default"] ? SHStyleKit.myWhiteColor : SHStyleKit.myClearColor)))))));

    //// Group
    {
        CGContextSaveGState(context);
        CGContextScaleCTM(context, scaleX, scaleY);



        //// Bezier 2 Drawing
        UIBezierPath* bezier2Path = UIBezierPath.bezierPath;
        [bezier2Path moveToPoint: CGPointMake(509.49, 52.2)];
        [bezier2Path addLineToPoint: CGPointMake(652.04, 341.12)];
        [bezier2Path addLineToPoint: CGPointMake(971, 387.49)];
        [bezier2Path addLineToPoint: CGPointMake(740.2, 612.42)];
        [bezier2Path addLineToPoint: CGPointMake(794.67, 930)];
        [bezier2Path addLineToPoint: CGPointMake(509.49, 780.11)];
        [bezier2Path addLineToPoint: CGPointMake(224.23, 930)];
        [bezier2Path addLineToPoint: CGPointMake(278.7, 612.42)];
        [bezier2Path addLineToPoint: CGPointMake(47.9, 387.49)];
        [bezier2Path addLineToPoint: CGPointMake(366.86, 341.12)];
        [bezier2Path addLineToPoint: CGPointMake(509.49, 52.2)];
        [bezier2Path closePath];
        bezier2Path.miterLimit = 4;

        [fillColor setFill];
        [bezier2Path fill];
        [strokeColor setStroke];
        bezier2Path.lineWidth = 0;
        [bezier2Path stroke];



        CGContextRestoreGState(context);
    }
}

+ (void)drawMapBubblePinFilledIconWithScaleX: (CGFloat)scaleX scaleY: (CGFloat)scaleY;
{
    //// General Declarations
    CGColorSpaceRef colorSpace = CGColorSpaceCreateDeviceRGB();
    CGContextRef context = UIGraphicsGetCurrentContext();

    //// Color Declarations
    UIColor* myMapGradient1 = [UIColor colorWithRed: 0.846 green: 0.456 blue: 0.137 alpha: 1];
    UIColor* myMapGradient2 = [UIColor colorWithRed: 0.878 green: 0.378 blue: 0.151 alpha: 1];
    UIColor* myMapGradient3 = [UIColor colorWithRed: 0.887 green: 0.361 blue: 0.154 alpha: 1];
    UIColor* myMapPinShadow1 = [UIColor colorWithRed: 0.931 green: 0.931 blue: 0.936 alpha: 0.56];
    UIColor* myMapPinShadow2 = [UIColor colorWithRed: 0.586 green: 0.594 blue: 0.607 alpha: 0.56];

    //// Gradient Declarations
    CGFloat myMapPinGradientLocations[] = {0, 0.85, 1};
    CGGradientRef myMapPinGradient = CGGradientCreateWithColors(colorSpace, (__bridge CFArrayRef)@[(id)myMapGradient1.CGColor, (id)myMapGradient2.CGColor, (id)myMapGradient3.CGColor], myMapPinGradientLocations);
    CGFloat myMapPinShadowLocations[] = {0, 0.51, 1};
    CGGradientRef myMapPinShadow = CGGradientCreateWithColors(colorSpace, (__bridge CFArrayRef)@[(id)myMapPinShadow1.CGColor, (id)myMapPinShadow2.CGColor, (id)myMapPinShadow1.CGColor], myMapPinShadowLocations);

    //// Group
    {
        CGContextSaveGState(context);
        CGContextScaleCTM(context, scaleX, scaleY);



        //// Shadow Drawing
        UIBezierPath* shadowPath = UIBezierPath.bezierPath;
        [shadowPath moveToPoint: CGPointMake(501.9, 936.8)];
        [shadowPath addCurveToPoint: CGPointMake(252.3, 952.3) controlPoint1: CGPointMake(501.9, 945.4) controlPoint2: CGPointMake(390.1, 952.3)];
        [shadowPath addCurveToPoint: CGPointMake(2.7, 936.8) controlPoint1: CGPointMake(114.4, 952.3) controlPoint2: CGPointMake(2.7, 945.4)];
        [shadowPath addCurveToPoint: CGPointMake(252.3, 921.3) controlPoint1: CGPointMake(2.7, 928.2) controlPoint2: CGPointMake(114.5, 921.3)];
        [shadowPath addCurveToPoint: CGPointMake(501.9, 936.8) controlPoint1: CGPointMake(390.1, 921.3) controlPoint2: CGPointMake(501.9, 928.3)];
        [shadowPath closePath];
        shadowPath.miterLimit = 4;

        CGContextSaveGState(context);
        [shadowPath addClip];
        CGContextDrawLinearGradient(context, myMapPinShadow,
            CGPointMake(2.7, 936.8),
            CGPointMake(501.9, 936.8),
            kCGGradientDrawsBeforeStartLocation | kCGGradientDrawsAfterEndLocation);
        CGContextRestoreGState(context);


        //// Bubble Drawing
        UIBezierPath* bubblePath = UIBezierPath.bezierPath;
        [bubblePath moveToPoint: CGPointMake(574.5, 40)];
        [bubblePath addCurveToPoint: CGPointMake(130.6, 483.9) controlPoint1: CGPointMake(329.3, 40) controlPoint2: CGPointMake(130.6, 238.8)];
        [bubblePath addCurveToPoint: CGPointMake(275.5, 812) controlPoint1: CGPointMake(130.6, 613.9) controlPoint2: CGPointMake(186.4, 730.8)];
        [bubblePath addLineToPoint: CGPointMake(263.1, 938)];
        [bubblePath addLineToPoint: CGPointMake(382.2, 884.1)];
        [bubblePath addCurveToPoint: CGPointMake(574.6, 927.8) controlPoint1: CGPointMake(440.4, 912.2) controlPoint2: CGPointMake(505.7, 927.8)];
        [bubblePath addCurveToPoint: CGPointMake(1018.5, 483.9) controlPoint1: CGPointMake(819.8, 927.8) controlPoint2: CGPointMake(1018.5, 729)];
        [bubblePath addCurveToPoint: CGPointMake(574.5, 40) controlPoint1: CGPointMake(1018.5, 238.8) controlPoint2: CGPointMake(819.6, 40)];
        [bubblePath closePath];
        CGContextSaveGState(context);
        [bubblePath addClip];
        CGContextDrawLinearGradient(context, myMapPinGradient,
            CGPointMake(574.55, 40),
            CGPointMake(574.55, 938),
            kCGGradientDrawsBeforeStartLocation | kCGGradientDrawsAfterEndLocation);
        CGContextRestoreGState(context);
        [SHStyleKit.myWhiteColor setStroke];
        bubblePath.lineWidth = 8;
        [bubblePath stroke];



        CGContextRestoreGState(context);
    }


    //// Cleanup
    CGGradientRelease(myMapPinGradient);
    CGGradientRelease(myMapPinShadow);
    CGColorSpaceRelease(colorSpace);
}

+ (void)drawMapBubblePinEmptyIconWithScaleX: (CGFloat)scaleX scaleY: (CGFloat)scaleY;
{
    //// General Declarations
    CGColorSpaceRef colorSpace = CGColorSpaceCreateDeviceRGB();
    CGContextRef context = UIGraphicsGetCurrentContext();

    //// Color Declarations
    UIColor* myMapPinShadow1 = [UIColor colorWithRed: 0.931 green: 0.931 blue: 0.936 alpha: 0.56];
    UIColor* myMapPinShadow2 = [UIColor colorWithRed: 0.586 green: 0.594 blue: 0.607 alpha: 0.56];

    //// Gradient Declarations
    CGFloat myMapPinShadowLocations[] = {0, 0.51, 1};
    CGGradientRef myMapPinShadow = CGGradientCreateWithColors(colorSpace, (__bridge CFArrayRef)@[(id)myMapPinShadow1.CGColor, (id)myMapPinShadow2.CGColor, (id)myMapPinShadow1.CGColor], myMapPinShadowLocations);

    //// Group
    {
        CGContextSaveGState(context);
        CGContextScaleCTM(context, scaleX, scaleY);



        //// Shadow Drawing
        UIBezierPath* shadowPath = UIBezierPath.bezierPath;
        [shadowPath moveToPoint: CGPointMake(501.9, 936.8)];
        [shadowPath addCurveToPoint: CGPointMake(252.3, 952.3) controlPoint1: CGPointMake(501.9, 945.4) controlPoint2: CGPointMake(390.1, 952.3)];
        [shadowPath addCurveToPoint: CGPointMake(2.7, 936.8) controlPoint1: CGPointMake(114.4, 952.3) controlPoint2: CGPointMake(2.7, 945.4)];
        [shadowPath addCurveToPoint: CGPointMake(252.3, 921.3) controlPoint1: CGPointMake(2.7, 928.2) controlPoint2: CGPointMake(114.5, 921.3)];
        [shadowPath addCurveToPoint: CGPointMake(501.9, 936.8) controlPoint1: CGPointMake(390.1, 921.3) controlPoint2: CGPointMake(501.9, 928.3)];
        [shadowPath closePath];
        shadowPath.miterLimit = 4;

        CGContextSaveGState(context);
        [shadowPath addClip];
        CGContextDrawLinearGradient(context, myMapPinShadow,
            CGPointMake(2.7, 936.8),
            CGPointMake(501.9, 936.8),
            kCGGradientDrawsBeforeStartLocation | kCGGradientDrawsAfterEndLocation);
        CGContextRestoreGState(context);


        //// Bubble Drawing
        UIBezierPath* bubblePath = UIBezierPath.bezierPath;
        [bubblePath moveToPoint: CGPointMake(574.5, 40)];
        [bubblePath addCurveToPoint: CGPointMake(130.6, 483.9) controlPoint1: CGPointMake(329.3, 40) controlPoint2: CGPointMake(130.6, 238.8)];
        [bubblePath addCurveToPoint: CGPointMake(275.5, 812) controlPoint1: CGPointMake(130.6, 613.9) controlPoint2: CGPointMake(186.4, 730.8)];
        [bubblePath addLineToPoint: CGPointMake(263.1, 938)];
        [bubblePath addLineToPoint: CGPointMake(382.2, 884.1)];
        [bubblePath addCurveToPoint: CGPointMake(574.6, 927.8) controlPoint1: CGPointMake(440.4, 912.2) controlPoint2: CGPointMake(505.7, 927.8)];
        [bubblePath addCurveToPoint: CGPointMake(1018.5, 483.9) controlPoint1: CGPointMake(819.8, 927.8) controlPoint2: CGPointMake(1018.5, 729)];
        [bubblePath addCurveToPoint: CGPointMake(574.5, 40) controlPoint1: CGPointMake(1018.5, 238.8) controlPoint2: CGPointMake(819.6, 40)];
        [bubblePath closePath];
        [SHStyleKit.myWhiteColor setFill];
        [bubblePath fill];
        [SHStyleKit.myTintColor setStroke];
        bubblePath.lineWidth = 8;
        [bubblePath stroke];



        CGContextRestoreGState(context);
    }


    //// Cleanup
    CGGradientRelease(myMapPinShadow);
    CGColorSpaceRelease(colorSpace);
}

+ (void)drawCalloutBackgroundImage;
{

    //// Group
    {
        //// Bezier Drawing
        UIBezierPath* bezierPath = UIBezierPath.bezierPath;
        [bezierPath moveToPoint: CGPointMake(1003.9, 1.96)];
        [bezierPath addLineToPoint: CGPointMake(1005.06, 2.25)];
        [bezierPath addCurveToPoint: CGPointMake(1021.75, 18.94) controlPoint1: CGPointMake(1012.82, 5.07) controlPoint2: CGPointMake(1018.93, 11.18)];
        [bezierPath addCurveToPoint: CGPointMake(1024, 45.86) controlPoint1: CGPointMake(1024, 26.05) controlPoint2: CGPointMake(1024, 32.65)];
        [bezierPath addLineToPoint: CGPointMake(1024, 554.14)];
        [bezierPath addCurveToPoint: CGPointMake(1022.04, 579.9) controlPoint1: CGPointMake(1024, 567.35) controlPoint2: CGPointMake(1024, 573.95)];
        [bezierPath addLineToPoint: CGPointMake(1021.75, 581.06)];
        [bezierPath addCurveToPoint: CGPointMake(1005.06, 597.75) controlPoint1: CGPointMake(1018.93, 588.82) controlPoint2: CGPointMake(1012.82, 594.93)];
        [bezierPath addCurveToPoint: CGPointMake(978.14, 600) controlPoint1: CGPointMake(997.95, 600) controlPoint2: CGPointMake(991.35, 600)];
        [bezierPath addLineToPoint: CGPointMake(620.42, 600)];
        [bezierPath addCurveToPoint: CGPointMake(544.35, 676.07) controlPoint1: CGPointMake(613.87, 606.55) controlPoint2: CGPointMake(544.35, 676.07)];
        [bezierPath addCurveToPoint: CGPointMake(524.74, 692.9) controlPoint1: CGPointMake(535.01, 685.41) controlPoint2: CGPointMake(530.34, 690.08)];
        [bezierPath addLineToPoint: CGPointMake(523.73, 693.51)];
        [bezierPath addCurveToPoint: CGPointMake(500.11, 693.51) controlPoint1: CGPointMake(516.24, 697) controlPoint2: CGPointMake(507.6, 697)];
        [bezierPath addCurveToPoint: CGPointMake(479.49, 676.07) controlPoint1: CGPointMake(493.5, 690.08) controlPoint2: CGPointMake(488.83, 685.41)];
        [bezierPath addCurveToPoint: CGPointMake(403.42, 600) controlPoint1: CGPointMake(479.49, 676.07) controlPoint2: CGPointMake(409.97, 606.55)];
        [bezierPath addLineToPoint: CGPointMake(45.86, 600)];
        [bezierPath addCurveToPoint: CGPointMake(20.1, 598.04) controlPoint1: CGPointMake(32.65, 600) controlPoint2: CGPointMake(26.05, 600)];
        [bezierPath addLineToPoint: CGPointMake(18.94, 597.75)];
        [bezierPath addCurveToPoint: CGPointMake(2.25, 581.06) controlPoint1: CGPointMake(11.18, 594.93) controlPoint2: CGPointMake(5.07, 588.82)];
        [bezierPath addCurveToPoint: CGPointMake(0, 554.14) controlPoint1: CGPointMake(-0, 573.95) controlPoint2: CGPointMake(0, 567.35)];
        [bezierPath addLineToPoint: CGPointMake(0, 45.86)];
        [bezierPath addCurveToPoint: CGPointMake(1.96, 20.1) controlPoint1: CGPointMake(0, 32.65) controlPoint2: CGPointMake(-0, 26.05)];
        [bezierPath addLineToPoint: CGPointMake(2.25, 18.94)];
        [bezierPath addCurveToPoint: CGPointMake(18.94, 2.25) controlPoint1: CGPointMake(5.07, 11.18) controlPoint2: CGPointMake(11.18, 5.07)];
        [bezierPath addCurveToPoint: CGPointMake(45.86, 0) controlPoint1: CGPointMake(26.05, 0) controlPoint2: CGPointMake(32.65, 0)];
        [bezierPath addLineToPoint: CGPointMake(978.14, 0)];
        [bezierPath addCurveToPoint: CGPointMake(1003.9, 1.96) controlPoint1: CGPointMake(991.35, 0) controlPoint2: CGPointMake(997.95, -0)];
        [bezierPath closePath];
        [SHStyleKit.myWhiteColor setFill];
        [bezierPath fill];
        [SHStyleKit.myTextColor setStroke];
        bezierPath.lineWidth = 1;
        [bezierPath stroke];
    }
}

+ (void)drawGradientBackgroundWithWidth: (CGFloat)width height: (CGFloat)height scaleX: (CGFloat)scaleX scaleY: (CGFloat)scaleY;
{
    //// General Declarations
    CGColorSpaceRef colorSpace = CGColorSpaceCreateDeviceRGB();
    CGContextRef context = UIGraphicsGetCurrentContext();

    //// Color Declarations
    UIColor* myTintColorGradientColor1 = [UIColor colorWithRed: 0.918 green: 0.682 blue: 0.455 alpha: 1];
    UIColor* myTintColorGradientColor2 = [UIColor colorWithRed: 0.933 green: 0.627 blue: 0.518 alpha: 1];

    //// Gradient Declarations
    CGFloat myTintColorGradientLocations[] = {0, 1};
    CGGradientRef myTintColorGradient = CGGradientCreateWithColors(colorSpace, (__bridge CFArrayRef)@[(id)myTintColorGradientColor1.CGColor, (id)myTintColorGradientColor2.CGColor], myTintColorGradientLocations);

    //// Group
    {
        CGContextSaveGState(context);
        CGContextScaleCTM(context, scaleX, scaleY);



        //// Rectangle Drawing
        UIBezierPath* rectanglePath = [UIBezierPath bezierPathWithRect: CGRectMake(0, 0, width, height)];
        CGContextSaveGState(context);
        [rectanglePath addClip];
        CGContextDrawLinearGradient(context, myTintColorGradient, CGPointMake(160, -0), CGPointMake(160, 568), 0);
        CGContextRestoreGState(context);



        CGContextRestoreGState(context);
    }


    //// Cleanup
    CGGradientRelease(myTintColorGradient);
    CGColorSpaceRelease(colorSpace);
}

+ (void)drawTopBarBackgroundWithFillColorName: (NSString*)fillColorName;
{

    //// Variable Declarations
    UIColor* fillColor = [fillColorName isEqualToString: @"myTintColor"] ? SHStyleKit.myTintColor : ([fillColorName isEqualToString: @"myTintTransparentColor"] ? SHStyleKit.myTintTransparentColor : ([fillColorName isEqualToString: @"myTextTransparentColor"] ? SHStyleKit.myTextTransparentColor : ([fillColorName isEqualToString: @"myTextColor"] ? SHStyleKit.myTextColor : ([fillColorName isEqualToString: @"myWhiteColor"] ? SHStyleKit.myWhiteColor : ([fillColorName isEqualToString: @"myWhiteTransparentColor"] ? SHStyleKit.myWhiteTransparentColor : ([fillColorName isEqualToString: @"myBlackColor"] ? SHStyleKit.myBlackColor : ([fillColorName isEqualToString: @"default"] ? SHStyleKit.myWhiteColor : SHStyleKit.myClearColor)))))));

    //// Group
    {
        //// Rectangle Drawing
        UIBezierPath* rectanglePath = [UIBezierPath bezierPathWithRect: CGRectMake(0, 0, 320, 64)];
        [fillColor setFill];
        [rectanglePath fill];
    }
}

+ (void)drawTopBarWhiteShadowBackground;
{
    //// General Declarations
    CGColorSpaceRef colorSpace = CGColorSpaceCreateDeviceRGB();
    CGContextRef context = UIGraphicsGetCurrentContext();


    //// Gradient Declarations
    CGFloat myWhiteShadowGradientLocations[] = {0, 1};
    CGGradientRef myWhiteShadowGradient = CGGradientCreateWithColors(colorSpace, (__bridge CFArrayRef)@[(id)SHStyleKit.myWhiteTransparentColor.CGColor, (id)SHStyleKit.myClearColor.CGColor], myWhiteShadowGradientLocations);

    //// Group
    {
        //// Rectangle Drawing
        UIBezierPath* rectanglePath = [UIBezierPath bezierPathWithRect: CGRectMake(0, 0, 320, 64)];
        CGContextSaveGState(context);
        [rectanglePath addClip];
        CGContextDrawLinearGradient(context, myWhiteShadowGradient, CGPointMake(160, -0), CGPointMake(160, 64), 0);
        CGContextRestoreGState(context);
    }


    //// Cleanup
    CGGradientRelease(myWhiteShadowGradient);
    CGColorSpaceRelease(colorSpace);
}

+ (void)drawBottomBarBlackShadowBackground;
{
    //// General Declarations
    CGColorSpaceRef colorSpace = CGColorSpaceCreateDeviceRGB();
    CGContextRef context = UIGraphicsGetCurrentContext();


    //// Gradient Declarations
    CGFloat myDarkShadowGradientLocations[] = {0, 0.62, 1};
    CGGradientRef myDarkShadowGradient = CGGradientCreateWithColors(colorSpace, (__bridge CFArrayRef)@[(id)SHStyleKit.myBlackTransparentColor.CGColor, (id)[UIColor colorWithRed: 0.5 green: 0.5 blue: 0.5 alpha: 0.375].CGColor, (id)SHStyleKit.myClearColor.CGColor], myDarkShadowGradientLocations);

    //// Rectangle Drawing
    UIBezierPath* rectanglePath = [UIBezierPath bezierPathWithRect: CGRectMake(0, 0, 320, 64)];
    CGContextSaveGState(context);
    [rectanglePath addClip];
    CGContextDrawLinearGradient(context, myDarkShadowGradient, CGPointMake(160, 64), CGPointMake(160, -0), 0);
    CGContextRestoreGState(context);


    //// Cleanup
    CGGradientRelease(myDarkShadowGradient);
    CGColorSpaceRelease(colorSpace);
}

+ (void)drawMyPlaceholderWithScaleX: (CGFloat)scaleX scaleY: (CGFloat)scaleY;
{
    //// General Declarations
    CGContextRef context = UIGraphicsGetCurrentContext();

    //// Scaling Group
    {
        CGContextSaveGState(context);
        CGContextScaleCTM(context, scaleX, scaleY);



        //// Centering Group
        {
            //// Rectangle Drawing
            UIBezierPath* rectanglePath = [UIBezierPath bezierPathWithRect: CGRectMake(0, 0, 1024, 1024)];
            [SHStyleKit.myTintDesaturatedColor setFill];
            [rectanglePath fill];


            //// Bubble Drawing
            UIBezierPath* bubblePath = UIBezierPath.bezierPath;
            [bubblePath moveToPoint: CGPointMake(511.9, 63)];
            [bubblePath addCurveToPoint: CGPointMake(68, 506.9) controlPoint1: CGPointMake(266.7, 63) controlPoint2: CGPointMake(68, 261.8)];
            [bubblePath addCurveToPoint: CGPointMake(212.9, 835) controlPoint1: CGPointMake(68, 636.9) controlPoint2: CGPointMake(123.8, 753.8)];
            [bubblePath addLineToPoint: CGPointMake(200.5, 961)];
            [bubblePath addLineToPoint: CGPointMake(319.6, 907.1)];
            [bubblePath addCurveToPoint: CGPointMake(512, 950.8) controlPoint1: CGPointMake(377.8, 935.2) controlPoint2: CGPointMake(443.1, 950.8)];
            [bubblePath addCurveToPoint: CGPointMake(955.9, 506.9) controlPoint1: CGPointMake(757.2, 950.8) controlPoint2: CGPointMake(955.9, 752)];
            [bubblePath addCurveToPoint: CGPointMake(511.9, 63) controlPoint1: CGPointMake(955.9, 261.8) controlPoint2: CGPointMake(757, 63)];
            [bubblePath closePath];
            [SHStyleKit.myWhiteTransparentColor setFill];
            [bubblePath fill];
        }



        CGContextRestoreGState(context);
    }
}

+ (void)drawPencilArrowWithScaleX: (CGFloat)scaleX scaleY: (CGFloat)scaleY rotation: (CGFloat)rotation;
{
    //// General Declarations
    CGContextRef context = UIGraphicsGetCurrentContext();

    //// Group
    {
        CGContextSaveGState(context);
        CGContextScaleCTM(context, scaleX, scaleY);



        //// Rotating Group
        {
            CGContextSaveGState(context);
            CGContextTranslateCTM(context, 515.9, 514.9);
            CGContextRotateCTM(context, -rotation * M_PI / 180);



            //// Bezier Drawing
            CGContextSaveGState(context);
            CGContextTranslateCTM(context, -511.9, -511.9);
            CGContextRotateCTM(context, 90 * M_PI / 180);

            UIBezierPath* bezierPath = UIBezierPath.bezierPath;
            [bezierPath moveToPoint: CGPointMake(484.31, -983.91)];
            [bezierPath addCurveToPoint: CGPointMake(473.8, -950.07) controlPoint1: CGPointMake(480.57, -972.66) controlPoint2: CGPointMake(477.03, -961.42)];
            [bezierPath addCurveToPoint: CGPointMake(659.86, -756.49) controlPoint1: CGPointMake(521.3, -868.24) controlPoint2: CGPointMake(586.38, -800.27)];
            [bezierPath addCurveToPoint: CGPointMake(761.12, -715.32) controlPoint1: CGPointMake(694.62, -735.8) controlPoint2: CGPointMake(728.68, -721.95)];
            [bezierPath addLineToPoint: CGPointMake(759.51, -701.67)];
            [bezierPath addCurveToPoint: CGPointMake(681.59, -702.67) controlPoint1: CGPointMake(733.53, -702.57) controlPoint2: CGPointMake(707.56, -702.87)];
            [bezierPath addCurveToPoint: CGPointMake(643.69, -701.97) controlPoint1: CGPointMake(669.86, -698.76) controlPoint2: CGPointMake(656.73, -698.65)];
            [bezierPath addCurveToPoint: CGPointMake(642.47, -701.97) controlPoint1: CGPointMake(643.28, -701.97) controlPoint2: CGPointMake(642.88, -701.97)];
            [bezierPath addLineToPoint: CGPointMake(484.21, -684.9)];
            [bezierPath addLineToPoint: CGPointMake(489.46, -684.9)];
            [bezierPath addLineToPoint: CGPointMake(489.36, -671.14)];
            [bezierPath addLineToPoint: CGPointMake(484.31, -671.14)];
            [bezierPath addCurveToPoint: CGPointMake(511.8, -509.29) controlPoint1: CGPointMake(492.7, -616.62) controlPoint2: CGPointMake(502.3, -562.6)];
            [bezierPath addCurveToPoint: CGPointMake(573.04, -272.93) controlPoint1: CGPointMake(526.15, -429.17) controlPoint2: CGPointMake(540.91, -346.33)];
            [bezierPath addCurveToPoint: CGPointMake(710.09, -73.23) controlPoint1: CGPointMake(607.81, -193.41) controlPoint2: CGPointMake(661.98, -128.15)];
            [bezierPath addCurveToPoint: CGPointMake(737.78, -48.73) controlPoint1: CGPointMake(720.29, -61.58) controlPoint2: CGPointMake(729.49, -53.35)];
            [bezierPath addCurveToPoint: CGPointMake(765.77, -47.12) controlPoint1: CGPointMake(746.98, -47.22) controlPoint2: CGPointMake(756.37, -46.62)];
            [bezierPath addLineToPoint: CGPointMake(796.8, -48.93)];
            [bezierPath addLineToPoint: CGPointMake(769.51, -34.17)];
            [bezierPath addCurveToPoint: CGPointMake(768.2, -33.47) controlPoint1: CGPointMake(769.11, -33.97) controlPoint2: CGPointMake(768.6, -33.67)];
            [bezierPath addCurveToPoint: CGPointMake(777.19, -29.75) controlPoint1: CGPointMake(771.13, -32.16) controlPoint2: CGPointMake(774.16, -30.96)];
            [bezierPath addLineToPoint: CGPointMake(771.84, -17)];
            [bezierPath addCurveToPoint: CGPointMake(729.49, -36.18) controlPoint1: CGPointMake(757.08, -23.02) controlPoint2: CGPointMake(742.93, -29.45)];
            [bezierPath addCurveToPoint: CGPointMake(539.39, -193.61) controlPoint1: CGPointMake(655.31, -51.84) controlPoint2: CGPointMake(592.95, -124.53)];
            [bezierPath addCurveToPoint: CGPointMake(446.21, -354.66) controlPoint1: CGPointMake(504.22, -239) controlPoint2: CGPointMake(464.2, -290.4)];
            [bezierPath addCurveToPoint: CGPointMake(430.85, -477.06) controlPoint1: CGPointMake(434.89, -395.03) controlPoint2: CGPointMake(432.67, -438.6)];
            [bezierPath addCurveToPoint: CGPointMake(425.79, -671.65) controlPoint1: CGPointMake(427.61, -542.82) controlPoint2: CGPointMake(425.09, -607.89)];
            [bezierPath addLineToPoint: CGPointMake(382.54, -672.05)];
            [bezierPath addLineToPoint: CGPointMake(392.14, -675.06)];
            [bezierPath addLineToPoint: CGPointMake(359.9, -671.55)];
            [bezierPath addCurveToPoint: CGPointMake(249.64, -647.45) controlPoint1: CGPointMake(323.01, -664.62) controlPoint2: CGPointMake(286.22, -656.58)];
            [bezierPath addLineToPoint: CGPointMake(234.28, -643.63)];
            [bezierPath addLineToPoint: CGPointMake(242.56, -658.89)];
            [bezierPath addLineToPoint: CGPointMake(227, -657.19)];
            [bezierPath addLineToPoint: CGPointMake(406.29, -977.48)];
            [bezierPath addCurveToPoint: CGPointMake(441.46, -999.67) controlPoint1: CGPointMake(420.23, -1002.38) controlPoint2: CGPointMake(433.07, -1003.29)];
            [bezierPath addCurveToPoint: CGPointMake(456.82, -981.4) controlPoint1: CGPointMake(449.34, -996.26) controlPoint2: CGPointMake(453.48, -988.02)];
            [bezierPath addCurveToPoint: CGPointMake(460.05, -974.97) controlPoint1: CGPointMake(457.93, -979.29) controlPoint2: CGPointMake(459.04, -977.08)];
            [bezierPath addCurveToPoint: CGPointMake(473.19, -991.54) controlPoint1: CGPointMake(463.39, -981.4) controlPoint2: CGPointMake(467.73, -987.02)];
            [bezierPath addLineToPoint: CGPointMake(491.89, -1006.8)];
            [bezierPath addLineToPoint: CGPointMake(484.31, -983.91)];
            [bezierPath closePath];
            [bezierPath moveToPoint: CGPointMake(444.59, -961.82)];
            [bezierPath addCurveToPoint: CGPointMake(449.95, -964.53) controlPoint1: CGPointMake(446.31, -962.82) controlPoint2: CGPointMake(448.13, -963.73)];
            [bezierPath addCurveToPoint: CGPointMake(444.49, -975.17) controlPoint1: CGPointMake(448.03, -968.04) controlPoint2: CGPointMake(446.21, -971.56)];
            [bezierPath addCurveToPoint: CGPointMake(435.9, -987.02) controlPoint1: CGPointMake(442.27, -979.49) controlPoint2: CGPointMake(439.23, -985.51)];
            [bezierPath addCurveToPoint: CGPointMake(428.62, -984.41) controlPoint1: CGPointMake(433.78, -987.92) controlPoint2: CGPointMake(431.25, -986.72)];
            [bezierPath addLineToPoint: CGPointMake(444.59, -961.82)];
            [bezierPath closePath];
            [bezierPath moveToPoint: CGPointMake(417.4, -942.54)];
            [bezierPath addCurveToPoint: CGPointMake(420.13, -973.67) controlPoint1: CGPointMake(416.7, -952.98) controlPoint2: CGPointMake(417.3, -963.32)];
            [bezierPath addCurveToPoint: CGPointMake(418.42, -970.65) controlPoint1: CGPointMake(419.53, -972.66) controlPoint2: CGPointMake(418.92, -971.66)];
            [bezierPath addLineToPoint: CGPointMake(376.78, -896.55)];
            [bezierPath addCurveToPoint: CGPointMake(417.4, -942.54) controlPoint1: CGPointMake(389.41, -913.92) controlPoint2: CGPointMake(402.95, -929.79)];
            [bezierPath closePath];
            [bezierPath moveToPoint: CGPointMake(442.67, -892.74)];
            [bezierPath addCurveToPoint: CGPointMake(444.49, -886.61) controlPoint1: CGPointMake(443.28, -890.73) controlPoint2: CGPointMake(443.88, -888.62)];
            [bezierPath addCurveToPoint: CGPointMake(446.81, -898.36) controlPoint1: CGPointMake(445.3, -890.53) controlPoint2: CGPointMake(446.01, -894.45)];
            [bezierPath addCurveToPoint: CGPointMake(446.01, -935.81) controlPoint1: CGPointMake(446.41, -910.81) controlPoint2: CGPointMake(446.11, -923.26)];
            [bezierPath addLineToPoint: CGPointMake(440.65, -943.34)];
            [bezierPath addCurveToPoint: CGPointMake(431.86, -936.82) controlPoint1: CGPointMake(437.72, -941.34) controlPoint2: CGPointMake(434.79, -939.13)];
            [bezierPath addCurveToPoint: CGPointMake(442.67, -892.74) controlPoint1: CGPointMake(433.78, -922.46) controlPoint2: CGPointMake(438.22, -907.8)];
            [bezierPath closePath];
            [bezierPath moveToPoint: CGPointMake(566.88, -789.32)];
            [bezierPath addCurveToPoint: CGPointMake(620.95, -727.87) controlPoint1: CGPointMake(582.95, -766.53) controlPoint2: CGPointMake(599.72, -743.03)];
            [bezierPath addCurveToPoint: CGPointMake(644.19, -716.13) controlPoint1: CGPointMake(628.53, -722.45) controlPoint2: CGPointMake(636.41, -718.54)];
            [bezierPath addLineToPoint: CGPointMake(696.95, -721.85)];
            [bezierPath addCurveToPoint: CGPointMake(652.68, -744.74) controlPoint1: CGPointMake(682.4, -728.27) controlPoint2: CGPointMake(667.54, -735.91)];
            [bezierPath addCurveToPoint: CGPointMake(468.75, -931.5) controlPoint1: CGPointMake(580.83, -787.51) controlPoint2: CGPointMake(516.75, -852.88)];
            [bezierPath addCurveToPoint: CGPointMake(468.04, -928.78) controlPoint1: CGPointMake(468.54, -930.59) controlPoint2: CGPointMake(468.24, -929.69)];
            [bezierPath addLineToPoint: CGPointMake(566.88, -789.32)];
            [bezierPath closePath];
            [bezierPath moveToPoint: CGPointMake(357.37, -685.2)];
            [bezierPath addCurveToPoint: CGPointMake(425.79, -696.65) controlPoint1: CGPointMake(380.11, -689.42) controlPoint2: CGPointMake(402.95, -693.23)];
            [bezierPath addCurveToPoint: CGPointMake(430.04, -777.47) controlPoint1: CGPointMake(426.5, -723.86) controlPoint2: CGPointMake(427.81, -750.87)];
            [bezierPath addCurveToPoint: CGPointMake(399.31, -781.49) controlPoint1: CGPointMake(419.93, -780.18) controlPoint2: CGPointMake(409.52, -781.49)];
            [bezierPath addLineToPoint: CGPointMake(372.53, -781.39)];
            [bezierPath addLineToPoint: CGPointMake(433.78, -815.63)];
            [bezierPath addCurveToPoint: CGPointMake(438.83, -853.38) controlPoint1: CGPointMake(435.19, -828.28) controlPoint2: CGPointMake(436.91, -840.93)];
            [bezierPath addCurveToPoint: CGPointMake(429.43, -888.82) controlPoint1: CGPointMake(436.51, -865.23) controlPoint2: CGPointMake(432.97, -877.08)];
            [bezierPath addCurveToPoint: CGPointMake(419.63, -925.87) controlPoint1: CGPointMake(425.79, -901.07) controlPoint2: CGPointMake(422.05, -913.42)];
            [bezierPath addCurveToPoint: CGPointMake(327.56, -787.11) controlPoint1: CGPointMake(383.25, -890.53) controlPoint2: CGPointMake(353.03, -834.4)];
            [bezierPath addLineToPoint: CGPointMake(266.92, -675.56)];
            [bezierPath addLineToPoint: CGPointMake(357.37, -685.2)];
            [bezierPath closePath];
            [bezierPath moveToPoint: CGPointMake(461.06, -890.63)];
            [bezierPath addCurveToPoint: CGPointMake(470.16, -775.16) controlPoint1: CGPointMake(462.68, -851.97) controlPoint2: CGPointMake(465.81, -813.52)];
            [bezierPath addCurveToPoint: CGPointMake(493.3, -757.99) controlPoint1: CGPointMake(478.25, -770.24) controlPoint2: CGPointMake(486.03, -764.52)];
            [bezierPath addLineToPoint: CGPointMake(494.92, -756.59)];
            [bezierPath addLineToPoint: CGPointMake(495.43, -754.58)];
            [bezierPath addCurveToPoint: CGPointMake(484.11, -704.48) controlPoint1: CGPointMake(500.08, -736.11) controlPoint2: CGPointMake(493.81, -717.63)];
            [bezierPath addCurveToPoint: CGPointMake(615.49, -715.02) controlPoint1: CGPointMake(527.77, -709.5) controlPoint2: CGPointMake(571.63, -713.01)];
            [bezierPath addCurveToPoint: CGPointMake(612.86, -716.83) controlPoint1: CGPointMake(614.58, -715.62) controlPoint2: CGPointMake(613.77, -716.23)];
            [bezierPath addCurveToPoint: CGPointMake(555.56, -781.49) controlPoint1: CGPointMake(589.72, -733.29) controlPoint2: CGPointMake(572.34, -757.79)];
            [bezierPath addLineToPoint: CGPointMake(463.79, -910.91)];
            [bezierPath addCurveToPoint: CGPointMake(461.37, -899.87) controlPoint1: CGPointMake(462.98, -907.2) controlPoint2: CGPointMake(462.18, -903.58)];
            [bezierPath addCurveToPoint: CGPointMake(461.06, -890.63) controlPoint1: CGPointMake(461.27, -896.65) controlPoint2: CGPointMake(461.17, -893.64)];
            [bezierPath closePath];
            [bezierPath moveToPoint: CGPointMake(444.79, -787.21)];
            [bezierPath addCurveToPoint: CGPointMake(447.72, -786.11) controlPoint1: CGPointMake(445.8, -786.91) controlPoint2: CGPointMake(446.71, -786.51)];
            [bezierPath addCurveToPoint: CGPointMake(447.22, -807.19) controlPoint1: CGPointMake(447.52, -793.14) controlPoint2: CGPointMake(447.32, -800.16)];
            [bezierPath addLineToPoint: CGPointMake(446.92, -806.99)];
            [bezierPath addCurveToPoint: CGPointMake(444.79, -787.21) controlPoint1: CGPointMake(446.01, -800.47) controlPoint2: CGPointMake(445.4, -793.84)];
            [bezierPath closePath];
            [bezierPath moveToPoint: CGPointMake(431.25, -791.43)];
            [bezierPath addCurveToPoint: CGPointMake(431.96, -798.86) controlPoint1: CGPointMake(431.45, -793.94) controlPoint2: CGPointMake(431.76, -796.35)];
            [bezierPath addLineToPoint: CGPointMake(422.15, -793.44)];
            [bezierPath addCurveToPoint: CGPointMake(431.25, -791.43) controlPoint1: CGPointMake(425.19, -792.73) controlPoint2: CGPointMake(428.22, -792.13)];
            [bezierPath closePath];
            [bezierPath moveToPoint: CGPointMake(451.56, -700.26)];
            [bezierPath addCurveToPoint: CGPointMake(448.13, -770.95) controlPoint1: CGPointMake(450.25, -723.76) controlPoint2: CGPointMake(449.04, -747.35)];
            [bezierPath addCurveToPoint: CGPointMake(443.48, -772.85) controlPoint1: CGPointMake(446.61, -771.65) controlPoint2: CGPointMake(445.1, -772.25)];
            [bezierPath addCurveToPoint: CGPointMake(439.64, -698.55) controlPoint1: CGPointMake(441.56, -748.36) controlPoint2: CGPointMake(440.35, -723.56)];
            [bezierPath addCurveToPoint: CGPointMake(451.56, -700.26) controlPoint1: CGPointMake(443.68, -699.16) controlPoint2: CGPointMake(447.62, -699.76)];
            [bezierPath closePath];
            [bezierPath moveToPoint: CGPointMake(482.39, -749.16)];
            [bezierPath addCurveToPoint: CGPointMake(472.28, -757.19) controlPoint1: CGPointMake(479.16, -751.97) controlPoint2: CGPointMake(475.72, -754.68)];
            [bezierPath addCurveToPoint: CGPointMake(477.13, -719.24) controlPoint1: CGPointMake(473.8, -744.54) controlPoint2: CGPointMake(475.42, -731.89)];
            [bezierPath addCurveToPoint: CGPointMake(482.39, -749.16) controlPoint1: CGPointMake(481.78, -727.97) controlPoint2: CGPointMake(484.41, -738.62)];
            [bezierPath closePath];
            [bezierPath moveToPoint: CGPointMake(455.51, -635.9)];
            [bezierPath addCurveToPoint: CGPointMake(453.28, -671.55) controlPoint1: CGPointMake(454.8, -647.75) controlPoint2: CGPointMake(453.99, -659.6)];
            [bezierPath addLineToPoint: CGPointMake(439.23, -671.65)];
            [bezierPath addCurveToPoint: CGPointMake(444.29, -477.86) controlPoint1: CGPointMake(438.53, -608.19) controlPoint2: CGPointMake(441.05, -543.43)];
            [bezierPath addCurveToPoint: CGPointMake(459.14, -358.48) controlPoint1: CGPointMake(446.11, -440.11) controlPoint2: CGPointMake(448.23, -397.34)];
            [bezierPath addCurveToPoint: CGPointMake(541.41, -213.19) controlPoint1: CGPointMake(475.11, -301.85) controlPoint2: CGPointMake(509.27, -254.86)];
            [bezierPath addCurveToPoint: CGPointMake(455.51, -635.9) controlPoint1: CGPointMake(479.76, -328.86) controlPoint2: CGPointMake(465.31, -479.17)];
            [bezierPath closePath];
            [bezierPath moveToPoint: CGPointMake(560.01, -267.41)];
            [bezierPath addCurveToPoint: CGPointMake(497.85, -506.88) controlPoint1: CGPointMake(527.26, -342.31) controlPoint2: CGPointMake(512.3, -425.95)];
            [bezierPath addCurveToPoint: CGPointMake(469.96, -671.24) controlPoint1: CGPointMake(488.15, -561.1) controlPoint2: CGPointMake(478.35, -615.92)];
            [bezierPath addLineToPoint: CGPointMake(467.23, -671.24)];
            [bezierPath addCurveToPoint: CGPointMake(469.35, -636.6) controlPoint1: CGPointMake(467.94, -659.7) controlPoint2: CGPointMake(468.64, -648.15)];
            [bezierPath addCurveToPoint: CGPointMake(587.5, -166.5) controlPoint1: CGPointMake(480.67, -456.07) controlPoint2: CGPointMake(498.16, -284.28)];
            [bezierPath addCurveToPoint: CGPointMake(691.79, -72.83) controlPoint1: CGPointMake(614.88, -130.46) controlPoint2: CGPointMake(649.35, -99.43)];
            [bezierPath addCurveToPoint: CGPointMake(560.01, -267.41) controlPoint1: CGPointMake(645, -126.74) controlPoint2: CGPointMake(593.76, -190.3)];
            [bezierPath closePath];
            bezierPath.miterLimit = 4;

            [SHStyleKit.myPencilColor setFill];
            [bezierPath fill];

            CGContextRestoreGState(context);



            CGContextRestoreGState(context);
        }



        CGContextRestoreGState(context);
    }
}

#pragma mark Generated Images

+ (UIImage*)imageOfWineIconWithScaleX: (CGFloat)scaleX scaleY: (CGFloat)scaleY strokeColorName: (NSString*)strokeColorName;
{
    UIGraphicsBeginImageContextWithOptions(CGSizeMake(1024, 1024), NO, 0.0f);
    [SHStyleKit drawWineIconWithScaleX: scaleX scaleY: scaleY strokeColorName: strokeColorName];
    UIImage* imageOfWineIcon = [UIGraphicsGetImageFromCurrentImageContext() imageWithRenderingMode: UIImageRenderingModeAlwaysOriginal];
    UIGraphicsEndImageContext();

    return imageOfWineIcon;
}

+ (UIImage*)imageOfSpecialsIconWithScaleX: (CGFloat)scaleX scaleY: (CGFloat)scaleY strokeColorName: (NSString*)strokeColorName;
{
    UIGraphicsBeginImageContextWithOptions(CGSizeMake(1024, 1024), NO, 0.0f);
    [SHStyleKit drawSpecialsIconWithScaleX: scaleX scaleY: scaleY strokeColorName: strokeColorName];
    UIImage* imageOfSpecialsIcon = [UIGraphicsGetImageFromCurrentImageContext() imageWithRenderingMode: UIImageRenderingModeAlwaysOriginal];
    UIGraphicsEndImageContext();

    return imageOfSpecialsIcon;
}

+ (UIImage*)imageOfSpotIconWithScaleX: (CGFloat)scaleX scaleY: (CGFloat)scaleY strokeColorName: (NSString*)strokeColorName;
{
    UIGraphicsBeginImageContextWithOptions(CGSizeMake(1024, 1024), NO, 0.0f);
    [SHStyleKit drawSpotIconWithScaleX: scaleX scaleY: scaleY strokeColorName: strokeColorName];
    UIImage* imageOfSpotIcon = [UIGraphicsGetImageFromCurrentImageContext() imageWithRenderingMode: UIImageRenderingModeAlwaysOriginal];
    UIGraphicsEndImageContext();

    return imageOfSpotIcon;
}

+ (UIImage*)imageOfCocktailIconWithScaleX: (CGFloat)scaleX scaleY: (CGFloat)scaleY strokeColorName: (NSString*)strokeColorName;
{
    UIGraphicsBeginImageContextWithOptions(CGSizeMake(1024, 1024), NO, 0.0f);
    [SHStyleKit drawCocktailIconWithScaleX: scaleX scaleY: scaleY strokeColorName: strokeColorName];
    UIImage* imageOfCocktailIcon = [UIGraphicsGetImageFromCurrentImageContext() imageWithRenderingMode: UIImageRenderingModeAlwaysOriginal];
    UIGraphicsEndImageContext();

    return imageOfCocktailIcon;
}

+ (UIImage*)imageOfBeerIconWithScaleX: (CGFloat)scaleX scaleY: (CGFloat)scaleY strokeColorName: (NSString*)strokeColorName;
{
    UIGraphicsBeginImageContextWithOptions(CGSizeMake(1024, 1024), NO, 0.0f);
    [SHStyleKit drawBeerIconWithScaleX: scaleX scaleY: scaleY strokeColorName: strokeColorName];
    UIImage* imageOfBeerIcon = [UIGraphicsGetImageFromCurrentImageContext() imageWithRenderingMode: UIImageRenderingModeAlwaysOriginal];
    UIGraphicsEndImageContext();

    return imageOfBeerIcon;
}

+ (UIImage*)imageOfNavigationArrowIconWithScaleX: (CGFloat)scaleX scaleY: (CGFloat)scaleY strokeColorName: (NSString*)strokeColorName rotation: (CGFloat)rotation;
{
    UIGraphicsBeginImageContextWithOptions(CGSizeMake(1024, 1024), NO, 0.0f);
    [SHStyleKit drawNavigationArrowIconWithScaleX: scaleX scaleY: scaleY strokeColorName: strokeColorName rotation: rotation];
    UIImage* imageOfNavigationArrowIcon = [UIGraphicsGetImageFromCurrentImageContext() imageWithRenderingMode: UIImageRenderingModeAlwaysOriginal];
    UIGraphicsEndImageContext();

    return imageOfNavigationArrowIcon;
}

+ (UIImage*)imageOfSearchIconWithScaleX: (CGFloat)scaleX scaleY: (CGFloat)scaleY strokeColorName: (NSString*)strokeColorName;
{
    UIGraphicsBeginImageContextWithOptions(CGSizeMake(1024, 1024), NO, 0.0f);
    [SHStyleKit drawSearchIconWithScaleX: scaleX scaleY: scaleY strokeColorName: strokeColorName];
    UIImage* imageOfSearchIcon = [UIGraphicsGetImageFromCurrentImageContext() imageWithRenderingMode: UIImageRenderingModeAlwaysOriginal];
    UIGraphicsEndImageContext();

    return imageOfSearchIcon;
}

+ (UIImage*)imageOfSpotSideBarIconWithScaleX: (CGFloat)scaleX scaleY: (CGFloat)scaleY strokeColorName: (NSString*)strokeColorName;
{
    UIGraphicsBeginImageContextWithOptions(CGSizeMake(1024, 1024), NO, 0.0f);
    [SHStyleKit drawSpotSideBarIconWithScaleX: scaleX scaleY: scaleY strokeColorName: strokeColorName];
    UIImage* imageOfSpotSideBarIcon = [UIGraphicsGetImageFromCurrentImageContext() imageWithRenderingMode: UIImageRenderingModeAlwaysOriginal];
    UIGraphicsEndImageContext();

    return imageOfSpotSideBarIcon;
}

+ (UIImage*)imageOfFeaturedListIconWithScaleX: (CGFloat)scaleX scaleY: (CGFloat)scaleY strokeColorName: (NSString*)strokeColorName;
{
    UIGraphicsBeginImageContextWithOptions(CGSizeMake(1024, 1024), NO, 0.0f);
    [SHStyleKit drawFeaturedListIconWithScaleX: scaleX scaleY: scaleY strokeColorName: strokeColorName];
    UIImage* imageOfFeaturedListIcon = [UIGraphicsGetImageFromCurrentImageContext() imageWithRenderingMode: UIImageRenderingModeAlwaysOriginal];
    UIGraphicsEndImageContext();

    return imageOfFeaturedListIcon;
}

+ (UIImage*)imageOfArrowIconWithScaleX: (CGFloat)scaleX scaleY: (CGFloat)scaleY strokeColorName: (NSString*)strokeColorName fillColorName: (NSString*)fillColorName rotation: (CGFloat)rotation;
{
    UIGraphicsBeginImageContextWithOptions(CGSizeMake(1024, 1024), NO, 0.0f);
    [SHStyleKit drawArrowIconWithScaleX: scaleX scaleY: scaleY strokeColorName: strokeColorName fillColorName: fillColorName rotation: rotation];
    UIImage* imageOfArrowIcon = [UIGraphicsGetImageFromCurrentImageContext() imageWithRenderingMode: UIImageRenderingModeAlwaysOriginal];
    UIGraphicsEndImageContext();

    return imageOfArrowIcon;
}

+ (UIImage*)imageOfDrinksIconWithScaleX: (CGFloat)scaleX scaleY: (CGFloat)scaleY strokeColorName: (NSString*)strokeColorName;
{
    UIGraphicsBeginImageContextWithOptions(CGSizeMake(1024, 1024), NO, 0.0f);
    [SHStyleKit drawDrinksIconWithScaleX: scaleX scaleY: scaleY strokeColorName: strokeColorName];
    UIImage* imageOfDrinksIcon = [UIGraphicsGetImageFromCurrentImageContext() imageWithRenderingMode: UIImageRenderingModeAlwaysOriginal];
    UIGraphicsEndImageContext();

    return imageOfDrinksIcon;
}

+ (UIImage*)imageOfOutlineIconWithScaleX: (CGFloat)scaleX scaleY: (CGFloat)scaleY strokeColorName: (NSString*)strokeColorName;
{
    UIGraphicsBeginImageContextWithOptions(CGSizeMake(1024, 1024), NO, 0.0f);
    [SHStyleKit drawOutlineIconWithScaleX: scaleX scaleY: scaleY strokeColorName: strokeColorName];
    UIImage* imageOfOutlineIcon = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return imageOfOutlineIcon;
}

+ (UIImage*)imageOfCheckMarkIconWithScaleX: (CGFloat)scaleX scaleY: (CGFloat)scaleY strokeColorName: (NSString*)strokeColorName fillColorName: (NSString*)fillColorName;
{
    UIGraphicsBeginImageContextWithOptions(CGSizeMake(1024, 1024), NO, 0.0f);
    [SHStyleKit drawCheckMarkIconWithScaleX: scaleX scaleY: scaleY strokeColorName: strokeColorName fillColorName: fillColorName];
    UIImage* imageOfCheckMarkIcon = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return imageOfCheckMarkIcon;
}

+ (UIImage*)imageOfThumbsUpIconWithScaleX: (CGFloat)scaleX scaleY: (CGFloat)scaleY strokeColorName: (NSString*)strokeColorName fillColorName: (NSString*)fillColorName;
{
    UIGraphicsBeginImageContextWithOptions(CGSizeMake(1024, 1024), NO, 0.0f);
    [SHStyleKit drawThumbsUpIconWithScaleX: scaleX scaleY: scaleY strokeColorName: strokeColorName fillColorName: fillColorName];
    UIImage* imageOfThumbsUpIcon = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return imageOfThumbsUpIcon;
}

+ (UIImage*)imageOfShareIconWithScaleX: (CGFloat)scaleX scaleY: (CGFloat)scaleY color1Name: (NSString*)color1Name color2Name: (NSString*)color2Name color3Name: (NSString*)color3Name;
{
    UIGraphicsBeginImageContextWithOptions(CGSizeMake(1024, 1024), NO, 0.0f);
    [SHStyleKit drawShareIconWithScaleX: scaleX scaleY: scaleY color1Name: color1Name color2Name: color2Name color3Name: color3Name];
    UIImage* imageOfShareIcon = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return imageOfShareIcon;
}

+ (UIImage*)imageOfMapBubblePinFilledIconWithScaleX: (CGFloat)scaleX scaleY: (CGFloat)scaleY;
{
    UIGraphicsBeginImageContextWithOptions(CGSizeMake(1024, 1024), NO, 0.0f);
    [SHStyleKit drawMapBubblePinFilledIconWithScaleX: scaleX scaleY: scaleY];
    UIImage* imageOfMapBubblePinFilledIcon = [UIGraphicsGetImageFromCurrentImageContext() imageWithRenderingMode: UIImageRenderingModeAlwaysOriginal];
    UIGraphicsEndImageContext();

    return imageOfMapBubblePinFilledIcon;
}

+ (UIImage*)imageOfMapBubblePinEmptyIconWithScaleX: (CGFloat)scaleX scaleY: (CGFloat)scaleY;
{
    UIGraphicsBeginImageContextWithOptions(CGSizeMake(1024, 1024), NO, 0.0f);
    [SHStyleKit drawMapBubblePinEmptyIconWithScaleX: scaleX scaleY: scaleY];
    UIImage* imageOfMapBubblePinEmptyIcon = [UIGraphicsGetImageFromCurrentImageContext() imageWithRenderingMode: UIImageRenderingModeAlwaysOriginal];
    UIGraphicsEndImageContext();

    return imageOfMapBubblePinEmptyIcon;
}

+ (UIImage*)imageOfGradientBackgroundWithWidth: (CGFloat)width height: (CGFloat)height scaleX: (CGFloat)scaleX scaleY: (CGFloat)scaleY;
{
    UIGraphicsBeginImageContextWithOptions(CGSizeMake(320, 568), NO, 0.0f);
    [SHStyleKit drawGradientBackgroundWithWidth: width height: height scaleX: scaleX scaleY: scaleY];
    UIImage* imageOfGradientBackground = [UIGraphicsGetImageFromCurrentImageContext() imageWithRenderingMode: UIImageRenderingModeAlwaysOriginal];
    UIGraphicsEndImageContext();

    return imageOfGradientBackground;
}

+ (UIImage*)imageOfMyPlaceholderWithScaleX: (CGFloat)scaleX scaleY: (CGFloat)scaleY;
{
    UIGraphicsBeginImageContextWithOptions(CGSizeMake(1024, 1024), NO, 0.0f);
    [SHStyleKit drawMyPlaceholderWithScaleX: scaleX scaleY: scaleY];
    UIImage* imageOfMyPlaceholder = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return imageOfMyPlaceholder;
}

@end
